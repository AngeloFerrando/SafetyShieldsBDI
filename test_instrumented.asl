events(["add_belief(perc_rad999(low))", "add_belief(perc_rad999(high))"]).
ids(0, []). depth(0, 0).
ids(1, []). depth(1, 0).
ids(2, []). depth(2, 0).
ids(3, []). depth(3, 0).
ids(4, []). depth(4, 0).
ids(5, []). depth(5, 0).
ids(6, []). depth(6, 0).
ids(7, []). depth(7, 0).
ids(8, []). depth(8, 0).
ids(9, []). depth(9, 0).
ids(10, []). depth(10, 0).
ids(11, []). depth(11, 0).
ids(12, []). depth(12, 0).
ids(13, []). depth(13, 0).
ids(14, []). depth(14, 0).
ids(15, []). depth(15, 0).
ids(16, []). depth(16, 0).
ids(17, []). depth(17, 0).
ids(18, []). depth(18, 0).
ids(19, []). depth(19, 0).
ids(20, []). depth(20, 0).
ids(21, []). depth(21, 0).
ids(22, []). depth(22, 0).
ids(23, []). depth(23, 0).
ids(24, []). depth(24, 0).
ids(25, []). depth(25, 0).
ids(26, []). depth(26, 0).
ids(27, []). depth(27, 0).
ids(28, []). depth(28, 0).
ids(29, []). depth(29, 0).
ids(30, []). depth(30, 0).
ids(31, []). depth(31, 0).
ids(32, []). depth(32, 0).
ids(33, []). depth(33, 0).
ids(34, []). depth(34, 0).
ids(35, []). depth(35, 0).
ids(36, []). depth(36, 0).
ids(37, []). depth(37, 0).
ids(38, []). depth(38, 0).
ids(39, []). depth(39, 0).
ids(40, []). depth(40, 0).
ids(41, []). depth(41, 0).
ids(42, []). depth(42, 0).
ids(43, []). depth(43, 0).
ids(44, []). depth(44, 0).
ids(45, []). depth(45, 0).
ids(46, []). depth(46, 0).
ids(47, []). depth(47, 0).
ids(48, []). depth(48, 0).
ids(49, []). depth(49, 0).


+!inspect_nuclear_plant0 : true <- !inspect_nuclear_plant01. 
+!inspect_nuclear_plant01 : fast & .intend(inspect_nuclear_plant0, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield0_id0_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield0", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield0", "G(add_belief(perc_rad0(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield0", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield0").
+!inspect_nuclear_plant0 : true <- !inspect_nuclear_plant01. 
+!inspect_nuclear_plant01 : true & .intend(inspect_nuclear_plant0, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield0_id1_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield0", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield0", "G(add_belief(perc_rad0(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield0", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield0").
-!inspect_nuclear_plant0 : .intend(inspect_nuclear_plant0, I) & violated(I, "shield0", Cmds) & (count(I, "shield0", Count) | (not(count(I, "shield0", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant0.
-!inspect_nuclear_plant0 : .intend(inspect_nuclear_plant0, I) & (count(I, "shield0", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield0"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant1 : true <- !inspect_nuclear_plant11. 
+!inspect_nuclear_plant11 : fast & .intend(inspect_nuclear_plant1, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield1_id2_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield1", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield1", "G(add_belief(perc_rad1(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield1", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1").
+!inspect_nuclear_plant1 : true <- !inspect_nuclear_plant11. 
+!inspect_nuclear_plant11 : true & .intend(inspect_nuclear_plant1, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield1_id3_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield1", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield1", "G(add_belief(perc_rad1(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield1", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1").
-!inspect_nuclear_plant1 : .intend(inspect_nuclear_plant1, I) & violated(I, "shield1", Cmds) & (count(I, "shield1", Count) | (not(count(I, "shield1", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant1.
-!inspect_nuclear_plant1 : .intend(inspect_nuclear_plant1, I) & (count(I, "shield1", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant2 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant2 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant3 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant3 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant4 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant4 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant5 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant5 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant6 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant6 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant7 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant7 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant8 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant8 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant9 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant9 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant10 : true <- !inspect_nuclear_plant101. 
+!inspect_nuclear_plant101 : fast & .intend(inspect_nuclear_plant10, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield1_id4_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield1", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield1", "G(add_belief(perc_rad1(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield1", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1").
+!inspect_nuclear_plant10 : true <- !inspect_nuclear_plant101. 
+!inspect_nuclear_plant101 : true & .intend(inspect_nuclear_plant10, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield1_id5_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield1", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield1", "G(add_belief(perc_rad1(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield1", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1").
-!inspect_nuclear_plant10 : .intend(inspect_nuclear_plant10, I) & violated(I, "shield1", Cmds) & (count(I, "shield1", Count) | (not(count(I, "shield1", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant10.
-!inspect_nuclear_plant10 : .intend(inspect_nuclear_plant10, I) & (count(I, "shield1", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant11 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant11 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant12 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant12 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant13 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant13 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant14 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant14 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant15 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant15 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant16 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant16 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant17 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant17 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant18 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant18 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant19 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant19 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant20 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant20 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant21 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant21 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant22 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant22 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant23 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant23 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant24 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant24 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant25 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant25 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant26 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant26 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant27 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant27 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant28 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant28 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant29 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant29 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant30 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant30 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant31 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant31 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant32 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant32 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant33 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant33 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant34 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant34 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant35 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant35 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant36 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant36 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant37 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant37 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant38 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant38 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant39 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant39 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant40 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant40 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant41 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant41 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant42 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant42 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant43 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant43 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant44 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant44 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant45 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant45 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant46 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant46 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant47 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant47 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant48 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant48 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant49 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant49 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant50 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant50 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant51 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant51 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant52 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant52 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant53 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant53 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant54 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant54 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant55 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant55 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant56 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant56 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant57 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant57 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant58 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant58 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant59 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant59 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant60 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant60 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant61 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant61 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant62 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant62 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant63 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant63 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant64 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant64 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant65 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant65 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant66 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant66 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant67 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant67 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant68 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant68 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant69 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant69 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant70 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant70 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant71 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant71 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant72 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant72 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant73 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant73 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant74 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant74 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant75 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant75 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant76 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant76 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant77 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant77 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant78 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant78 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant79 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant79 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant80 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant80 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant81 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant81 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant82 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant82 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant83 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant83 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant84 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant84 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant85 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant85 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant86 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant86 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant87 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant87 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant88 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant88 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant89 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant89 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant90 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant90 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant91 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant91 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant92 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant92 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant93 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant93 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant94 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant94 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant95 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant95 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant96 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant96 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant97 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant97 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant98 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant98 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant99 : fast
<-
    !inspect(wp1);
    move_to(wp2, R2); -perc_rad(R2); +perc_rad(R2);
    .print("Detected level of radiation: ", R2);
    move_to(wp3, R3); -perc_rad(R3); +perc_rad(R3);
    .print("Detected level of radiation: ", R3);
    !inspect(wp3).
+!inspect_nuclear_plant99 : true
<-
    !inspect(wp1);
    move_to(wp4, R4); -perc_rad(R4); +perc_rad(R4);
    .print("Detected level of radiation: ", R4);
    move_to(wp5, R5); -perc_rad(R5); +perc_rad(R5);
    .print("Detected level of radiation: ", R5);
    !inspect(wp3).


+!inspect_nuclear_plant100 : true <- !inspect_nuclear_plant1001. 
+!inspect_nuclear_plant1001 : fast & .intend(inspect_nuclear_plant100, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield1_id6_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield1", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield1", "G(add_belief(perc_rad1(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield1", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1").
+!inspect_nuclear_plant100 : true <- !inspect_nuclear_plant1001. 
+!inspect_nuclear_plant1001 : true & .intend(inspect_nuclear_plant100, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield1_id7_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield1", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield1", "G(add_belief(perc_rad1(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield1", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1").
-!inspect_nuclear_plant100 : .intend(inspect_nuclear_plant100, I) & violated(I, "shield1", Cmds) & (count(I, "shield1", Count) | (not(count(I, "shield1", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant100.
-!inspect_nuclear_plant100 : .intend(inspect_nuclear_plant100, I) & (count(I, "shield1", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield1"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant101 : true <- !inspect_nuclear_plant1011. 
+!inspect_nuclear_plant1011 : fast & .intend(inspect_nuclear_plant101, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield101_id8_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield101", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield101", "G(add_belief(perc_rad101(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield101", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield101").
+!inspect_nuclear_plant101 : true <- !inspect_nuclear_plant1011. 
+!inspect_nuclear_plant1011 : true & .intend(inspect_nuclear_plant101, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield101_id9_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield101", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield101", "G(add_belief(perc_rad101(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield101", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield101").
-!inspect_nuclear_plant101 : .intend(inspect_nuclear_plant101, I) & violated(I, "shield101", Cmds) & (count(I, "shield101", Count) | (not(count(I, "shield101", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant101.
-!inspect_nuclear_plant101 : .intend(inspect_nuclear_plant101, I) & (count(I, "shield101", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield101"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant102 : true <- !inspect_nuclear_plant1021. 
+!inspect_nuclear_plant1021 : fast & .intend(inspect_nuclear_plant102, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield102_id10_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield102", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield102", "G(add_belief(perc_rad102(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield102", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield102").
+!inspect_nuclear_plant102 : true <- !inspect_nuclear_plant1021. 
+!inspect_nuclear_plant1021 : true & .intend(inspect_nuclear_plant102, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield102_id11_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield102", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield102", "G(add_belief(perc_rad102(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield102", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield102").
-!inspect_nuclear_plant102 : .intend(inspect_nuclear_plant102, I) & violated(I, "shield102", Cmds) & (count(I, "shield102", Count) | (not(count(I, "shield102", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant102.
-!inspect_nuclear_plant102 : .intend(inspect_nuclear_plant102, I) & (count(I, "shield102", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield102"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant103 : true <- !inspect_nuclear_plant1031. 
+!inspect_nuclear_plant1031 : fast & .intend(inspect_nuclear_plant103, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield103_id12_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield103", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield103", "G(add_belief(perc_rad103(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield103", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield103").
+!inspect_nuclear_plant103 : true <- !inspect_nuclear_plant1031. 
+!inspect_nuclear_plant1031 : true & .intend(inspect_nuclear_plant103, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield103_id13_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield103", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield103", "G(add_belief(perc_rad103(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield103", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield103").
-!inspect_nuclear_plant103 : .intend(inspect_nuclear_plant103, I) & violated(I, "shield103", Cmds) & (count(I, "shield103", Count) | (not(count(I, "shield103", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant103.
-!inspect_nuclear_plant103 : .intend(inspect_nuclear_plant103, I) & (count(I, "shield103", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield103"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant104 : true <- !inspect_nuclear_plant1041. 
+!inspect_nuclear_plant1041 : fast & .intend(inspect_nuclear_plant104, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield104_id14_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield104", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield104", "G(add_belief(perc_rad104(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield104", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield104").
+!inspect_nuclear_plant104 : true <- !inspect_nuclear_plant1041. 
+!inspect_nuclear_plant1041 : true & .intend(inspect_nuclear_plant104, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield104_id15_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield104", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield104", "G(add_belief(perc_rad104(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield104", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield104").
-!inspect_nuclear_plant104 : .intend(inspect_nuclear_plant104, I) & violated(I, "shield104", Cmds) & (count(I, "shield104", Count) | (not(count(I, "shield104", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant104.
-!inspect_nuclear_plant104 : .intend(inspect_nuclear_plant104, I) & (count(I, "shield104", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield104"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant105 : true <- !inspect_nuclear_plant1051. 
+!inspect_nuclear_plant1051 : fast & .intend(inspect_nuclear_plant105, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield105_id16_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield105", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield105", "G(add_belief(perc_rad105(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield105", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield105").
+!inspect_nuclear_plant105 : true <- !inspect_nuclear_plant1051. 
+!inspect_nuclear_plant1051 : true & .intend(inspect_nuclear_plant105, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield105_id17_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield105", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield105", "G(add_belief(perc_rad105(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield105", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield105").
-!inspect_nuclear_plant105 : .intend(inspect_nuclear_plant105, I) & violated(I, "shield105", Cmds) & (count(I, "shield105", Count) | (not(count(I, "shield105", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant105.
-!inspect_nuclear_plant105 : .intend(inspect_nuclear_plant105, I) & (count(I, "shield105", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield105"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant106 : true <- !inspect_nuclear_plant1061. 
+!inspect_nuclear_plant1061 : fast & .intend(inspect_nuclear_plant106, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield106_id18_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield106", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield106", "G(add_belief(perc_rad106(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield106", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield106").
+!inspect_nuclear_plant106 : true <- !inspect_nuclear_plant1061. 
+!inspect_nuclear_plant1061 : true & .intend(inspect_nuclear_plant106, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield106_id19_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield106", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield106", "G(add_belief(perc_rad106(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield106", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield106").
-!inspect_nuclear_plant106 : .intend(inspect_nuclear_plant106, I) & violated(I, "shield106", Cmds) & (count(I, "shield106", Count) | (not(count(I, "shield106", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant106.
-!inspect_nuclear_plant106 : .intend(inspect_nuclear_plant106, I) & (count(I, "shield106", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield106"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant107 : true <- !inspect_nuclear_plant1071. 
+!inspect_nuclear_plant1071 : fast & .intend(inspect_nuclear_plant107, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield107_id20_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield107", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield107", "G(add_belief(perc_rad107(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield107", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield107").
+!inspect_nuclear_plant107 : true <- !inspect_nuclear_plant1071. 
+!inspect_nuclear_plant1071 : true & .intend(inspect_nuclear_plant107, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield107_id21_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield107", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield107", "G(add_belief(perc_rad107(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield107", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield107").
-!inspect_nuclear_plant107 : .intend(inspect_nuclear_plant107, I) & violated(I, "shield107", Cmds) & (count(I, "shield107", Count) | (not(count(I, "shield107", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant107.
-!inspect_nuclear_plant107 : .intend(inspect_nuclear_plant107, I) & (count(I, "shield107", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield107"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant108 : true <- !inspect_nuclear_plant1081. 
+!inspect_nuclear_plant1081 : fast & .intend(inspect_nuclear_plant108, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield108_id22_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield108", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield108", "G(add_belief(perc_rad108(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield108", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield108").
+!inspect_nuclear_plant108 : true <- !inspect_nuclear_plant1081. 
+!inspect_nuclear_plant1081 : true & .intend(inspect_nuclear_plant108, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield108_id23_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield108", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield108", "G(add_belief(perc_rad108(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield108", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield108").
-!inspect_nuclear_plant108 : .intend(inspect_nuclear_plant108, I) & violated(I, "shield108", Cmds) & (count(I, "shield108", Count) | (not(count(I, "shield108", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant108.
-!inspect_nuclear_plant108 : .intend(inspect_nuclear_plant108, I) & (count(I, "shield108", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield108"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant109 : true <- !inspect_nuclear_plant1091. 
+!inspect_nuclear_plant1091 : fast & .intend(inspect_nuclear_plant109, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield109_id24_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield109", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield109", "G(add_belief(perc_rad109(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield109", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield109").
+!inspect_nuclear_plant109 : true <- !inspect_nuclear_plant1091. 
+!inspect_nuclear_plant1091 : true & .intend(inspect_nuclear_plant109, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield109_id25_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield109", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield109", "G(add_belief(perc_rad109(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield109", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield109").
-!inspect_nuclear_plant109 : .intend(inspect_nuclear_plant109, I) & violated(I, "shield109", Cmds) & (count(I, "shield109", Count) | (not(count(I, "shield109", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant109.
-!inspect_nuclear_plant109 : .intend(inspect_nuclear_plant109, I) & (count(I, "shield109", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield109"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant110 : true <- !inspect_nuclear_plant1101. 
+!inspect_nuclear_plant1101 : fast & .intend(inspect_nuclear_plant110, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield110_id26_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield110", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield110", "G(add_belief(perc_rad110(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield110", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield110").
+!inspect_nuclear_plant110 : true <- !inspect_nuclear_plant1101. 
+!inspect_nuclear_plant1101 : true & .intend(inspect_nuclear_plant110, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield110_id27_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield110", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield110", "G(add_belief(perc_rad110(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield110", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield110").
-!inspect_nuclear_plant110 : .intend(inspect_nuclear_plant110, I) & violated(I, "shield110", Cmds) & (count(I, "shield110", Count) | (not(count(I, "shield110", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant110.
-!inspect_nuclear_plant110 : .intend(inspect_nuclear_plant110, I) & (count(I, "shield110", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield110"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant111 : true <- !inspect_nuclear_plant1111. 
+!inspect_nuclear_plant1111 : fast & .intend(inspect_nuclear_plant111, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield111_id28_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield111", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield111", "G(add_belief(perc_rad111(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield111", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield111").
+!inspect_nuclear_plant111 : true <- !inspect_nuclear_plant1111. 
+!inspect_nuclear_plant1111 : true & .intend(inspect_nuclear_plant111, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield111_id29_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield111", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield111", "G(add_belief(perc_rad111(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield111", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield111").
-!inspect_nuclear_plant111 : .intend(inspect_nuclear_plant111, I) & violated(I, "shield111", Cmds) & (count(I, "shield111", Count) | (not(count(I, "shield111", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant111.
-!inspect_nuclear_plant111 : .intend(inspect_nuclear_plant111, I) & (count(I, "shield111", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield111"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant112 : true <- !inspect_nuclear_plant1121. 
+!inspect_nuclear_plant1121 : fast & .intend(inspect_nuclear_plant112, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield112_id30_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield112", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield112", "G(add_belief(perc_rad112(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield112", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield112").
+!inspect_nuclear_plant112 : true <- !inspect_nuclear_plant1121. 
+!inspect_nuclear_plant1121 : true & .intend(inspect_nuclear_plant112, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield112_id31_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield112", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield112", "G(add_belief(perc_rad112(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield112", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield112").
-!inspect_nuclear_plant112 : .intend(inspect_nuclear_plant112, I) & violated(I, "shield112", Cmds) & (count(I, "shield112", Count) | (not(count(I, "shield112", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant112.
-!inspect_nuclear_plant112 : .intend(inspect_nuclear_plant112, I) & (count(I, "shield112", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield112"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant113 : true <- !inspect_nuclear_plant1131. 
+!inspect_nuclear_plant1131 : fast & .intend(inspect_nuclear_plant113, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield113_id32_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield113", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield113", "G(add_belief(perc_rad113(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield113", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield113").
+!inspect_nuclear_plant113 : true <- !inspect_nuclear_plant1131. 
+!inspect_nuclear_plant1131 : true & .intend(inspect_nuclear_plant113, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield113_id33_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield113", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield113", "G(add_belief(perc_rad113(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield113", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield113").
-!inspect_nuclear_plant113 : .intend(inspect_nuclear_plant113, I) & violated(I, "shield113", Cmds) & (count(I, "shield113", Count) | (not(count(I, "shield113", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant113.
-!inspect_nuclear_plant113 : .intend(inspect_nuclear_plant113, I) & (count(I, "shield113", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield113"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant114 : true <- !inspect_nuclear_plant1141. 
+!inspect_nuclear_plant1141 : fast & .intend(inspect_nuclear_plant114, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield114_id34_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield114", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield114", "G(add_belief(perc_rad114(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield114", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield114").
+!inspect_nuclear_plant114 : true <- !inspect_nuclear_plant1141. 
+!inspect_nuclear_plant1141 : true & .intend(inspect_nuclear_plant114, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield114_id35_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield114", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield114", "G(add_belief(perc_rad114(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield114", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield114").
-!inspect_nuclear_plant114 : .intend(inspect_nuclear_plant114, I) & violated(I, "shield114", Cmds) & (count(I, "shield114", Count) | (not(count(I, "shield114", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant114.
-!inspect_nuclear_plant114 : .intend(inspect_nuclear_plant114, I) & (count(I, "shield114", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield114"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant115 : true <- !inspect_nuclear_plant1151. 
+!inspect_nuclear_plant1151 : fast & .intend(inspect_nuclear_plant115, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield115_id36_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield115", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield115", "G(add_belief(perc_rad115(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield115", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield115").
+!inspect_nuclear_plant115 : true <- !inspect_nuclear_plant1151. 
+!inspect_nuclear_plant1151 : true & .intend(inspect_nuclear_plant115, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield115_id37_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield115", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield115", "G(add_belief(perc_rad115(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield115", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield115").
-!inspect_nuclear_plant115 : .intend(inspect_nuclear_plant115, I) & violated(I, "shield115", Cmds) & (count(I, "shield115", Count) | (not(count(I, "shield115", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant115.
-!inspect_nuclear_plant115 : .intend(inspect_nuclear_plant115, I) & (count(I, "shield115", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield115"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant116 : true <- !inspect_nuclear_plant1161. 
+!inspect_nuclear_plant1161 : fast & .intend(inspect_nuclear_plant116, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield116_id38_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield116", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield116", "G(add_belief(perc_rad116(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield116", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield116").
+!inspect_nuclear_plant116 : true <- !inspect_nuclear_plant1161. 
+!inspect_nuclear_plant1161 : true & .intend(inspect_nuclear_plant116, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield116_id39_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield116", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield116", "G(add_belief(perc_rad116(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield116", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield116").
-!inspect_nuclear_plant116 : .intend(inspect_nuclear_plant116, I) & violated(I, "shield116", Cmds) & (count(I, "shield116", Count) | (not(count(I, "shield116", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant116.
-!inspect_nuclear_plant116 : .intend(inspect_nuclear_plant116, I) & (count(I, "shield116", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield116"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant117 : true <- !inspect_nuclear_plant1171. 
+!inspect_nuclear_plant1171 : fast & .intend(inspect_nuclear_plant117, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield117_id40_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield117", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield117", "G(add_belief(perc_rad117(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield117", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield117").
+!inspect_nuclear_plant117 : true <- !inspect_nuclear_plant1171. 
+!inspect_nuclear_plant1171 : true & .intend(inspect_nuclear_plant117, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield117_id41_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield117", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield117", "G(add_belief(perc_rad117(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield117", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield117").
-!inspect_nuclear_plant117 : .intend(inspect_nuclear_plant117, I) & violated(I, "shield117", Cmds) & (count(I, "shield117", Count) | (not(count(I, "shield117", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant117.
-!inspect_nuclear_plant117 : .intend(inspect_nuclear_plant117, I) & (count(I, "shield117", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield117"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant118 : true <- !inspect_nuclear_plant1181. 
+!inspect_nuclear_plant1181 : fast & .intend(inspect_nuclear_plant118, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield118_id42_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield118", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield118", "G(add_belief(perc_rad118(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield118", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield118").
+!inspect_nuclear_plant118 : true <- !inspect_nuclear_plant1181. 
+!inspect_nuclear_plant1181 : true & .intend(inspect_nuclear_plant118, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield118_id43_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield118", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield118", "G(add_belief(perc_rad118(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield118", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield118").
-!inspect_nuclear_plant118 : .intend(inspect_nuclear_plant118, I) & violated(I, "shield118", Cmds) & (count(I, "shield118", Count) | (not(count(I, "shield118", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant118.
-!inspect_nuclear_plant118 : .intend(inspect_nuclear_plant118, I) & (count(I, "shield118", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield118"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant119 : true <- !inspect_nuclear_plant1191. 
+!inspect_nuclear_plant1191 : fast & .intend(inspect_nuclear_plant119, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield119_id44_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield119", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield119", "G(add_belief(perc_rad119(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield119", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield119").
+!inspect_nuclear_plant119 : true <- !inspect_nuclear_plant1191. 
+!inspect_nuclear_plant1191 : true & .intend(inspect_nuclear_plant119, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield119_id45_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield119", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield119", "G(add_belief(perc_rad119(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield119", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield119").
-!inspect_nuclear_plant119 : .intend(inspect_nuclear_plant119, I) & violated(I, "shield119", Cmds) & (count(I, "shield119", Count) | (not(count(I, "shield119", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant119.
-!inspect_nuclear_plant119 : .intend(inspect_nuclear_plant119, I) & (count(I, "shield119", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield119"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant120 : true <- !inspect_nuclear_plant1201. 
+!inspect_nuclear_plant1201 : fast & .intend(inspect_nuclear_plant120, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield120_id46_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield120", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield120", "G(add_belief(perc_rad120(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield120", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield120").
+!inspect_nuclear_plant120 : true <- !inspect_nuclear_plant1201. 
+!inspect_nuclear_plant1201 : true & .intend(inspect_nuclear_plant120, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield120_id47_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield120", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield120", "G(add_belief(perc_rad120(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield120", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield120").
-!inspect_nuclear_plant120 : .intend(inspect_nuclear_plant120, I) & violated(I, "shield120", Cmds) & (count(I, "shield120", Count) | (not(count(I, "shield120", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant120.
-!inspect_nuclear_plant120 : .intend(inspect_nuclear_plant120, I) & (count(I, "shield120", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield120"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant121 : true <- !inspect_nuclear_plant1211. 
+!inspect_nuclear_plant1211 : fast & .intend(inspect_nuclear_plant121, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield121_id48_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield121", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield121", "G(add_belief(perc_rad121(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield121", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield121").
+!inspect_nuclear_plant121 : true <- !inspect_nuclear_plant1211. 
+!inspect_nuclear_plant1211 : true & .intend(inspect_nuclear_plant121, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield121_id49_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield121", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield121", "G(add_belief(perc_rad121(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield121", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield121").
-!inspect_nuclear_plant121 : .intend(inspect_nuclear_plant121, I) & violated(I, "shield121", Cmds) & (count(I, "shield121", Count) | (not(count(I, "shield121", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant121.
-!inspect_nuclear_plant121 : .intend(inspect_nuclear_plant121, I) & (count(I, "shield121", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield121"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant122 : true <- !inspect_nuclear_plant1221. 
+!inspect_nuclear_plant1221 : fast & .intend(inspect_nuclear_plant122, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield122_id50_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield122", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield122", "G(add_belief(perc_rad122(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield122", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield122").
+!inspect_nuclear_plant122 : true <- !inspect_nuclear_plant1221. 
+!inspect_nuclear_plant1221 : true & .intend(inspect_nuclear_plant122, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield122_id51_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield122", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield122", "G(add_belief(perc_rad122(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield122", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield122").
-!inspect_nuclear_plant122 : .intend(inspect_nuclear_plant122, I) & violated(I, "shield122", Cmds) & (count(I, "shield122", Count) | (not(count(I, "shield122", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant122.
-!inspect_nuclear_plant122 : .intend(inspect_nuclear_plant122, I) & (count(I, "shield122", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield122"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant123 : true <- !inspect_nuclear_plant1231. 
+!inspect_nuclear_plant1231 : fast & .intend(inspect_nuclear_plant123, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield123_id52_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield123", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield123", "G(add_belief(perc_rad123(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield123", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield123").
+!inspect_nuclear_plant123 : true <- !inspect_nuclear_plant1231. 
+!inspect_nuclear_plant1231 : true & .intend(inspect_nuclear_plant123, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield123_id53_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield123", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield123", "G(add_belief(perc_rad123(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield123", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield123").
-!inspect_nuclear_plant123 : .intend(inspect_nuclear_plant123, I) & violated(I, "shield123", Cmds) & (count(I, "shield123", Count) | (not(count(I, "shield123", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant123.
-!inspect_nuclear_plant123 : .intend(inspect_nuclear_plant123, I) & (count(I, "shield123", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield123"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant124 : true <- !inspect_nuclear_plant1241. 
+!inspect_nuclear_plant1241 : fast & .intend(inspect_nuclear_plant124, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield124_id54_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield124", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield124", "G(add_belief(perc_rad124(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield124", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield124").
+!inspect_nuclear_plant124 : true <- !inspect_nuclear_plant1241. 
+!inspect_nuclear_plant1241 : true & .intend(inspect_nuclear_plant124, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield124_id55_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield124", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield124", "G(add_belief(perc_rad124(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield124", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield124").
-!inspect_nuclear_plant124 : .intend(inspect_nuclear_plant124, I) & violated(I, "shield124", Cmds) & (count(I, "shield124", Count) | (not(count(I, "shield124", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant124.
-!inspect_nuclear_plant124 : .intend(inspect_nuclear_plant124, I) & (count(I, "shield124", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield124"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant125 : true <- !inspect_nuclear_plant1251. 
+!inspect_nuclear_plant1251 : fast & .intend(inspect_nuclear_plant125, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield125_id56_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield125", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield125", "G(add_belief(perc_rad125(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield125", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield125").
+!inspect_nuclear_plant125 : true <- !inspect_nuclear_plant1251. 
+!inspect_nuclear_plant1251 : true & .intend(inspect_nuclear_plant125, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield125_id57_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield125", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield125", "G(add_belief(perc_rad125(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield125", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield125").
-!inspect_nuclear_plant125 : .intend(inspect_nuclear_plant125, I) & violated(I, "shield125", Cmds) & (count(I, "shield125", Count) | (not(count(I, "shield125", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant125.
-!inspect_nuclear_plant125 : .intend(inspect_nuclear_plant125, I) & (count(I, "shield125", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield125"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant126 : true <- !inspect_nuclear_plant1261. 
+!inspect_nuclear_plant1261 : fast & .intend(inspect_nuclear_plant126, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield126_id58_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield126", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield126", "G(add_belief(perc_rad126(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield126", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield126").
+!inspect_nuclear_plant126 : true <- !inspect_nuclear_plant1261. 
+!inspect_nuclear_plant1261 : true & .intend(inspect_nuclear_plant126, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield126_id59_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield126", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield126", "G(add_belief(perc_rad126(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield126", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield126").
-!inspect_nuclear_plant126 : .intend(inspect_nuclear_plant126, I) & violated(I, "shield126", Cmds) & (count(I, "shield126", Count) | (not(count(I, "shield126", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant126.
-!inspect_nuclear_plant126 : .intend(inspect_nuclear_plant126, I) & (count(I, "shield126", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield126"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant127 : true <- !inspect_nuclear_plant1271. 
+!inspect_nuclear_plant1271 : fast & .intend(inspect_nuclear_plant127, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield127_id60_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield127", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield127", "G(add_belief(perc_rad127(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield127", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield127").
+!inspect_nuclear_plant127 : true <- !inspect_nuclear_plant1271. 
+!inspect_nuclear_plant1271 : true & .intend(inspect_nuclear_plant127, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield127_id61_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield127", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield127", "G(add_belief(perc_rad127(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield127", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield127").
-!inspect_nuclear_plant127 : .intend(inspect_nuclear_plant127, I) & violated(I, "shield127", Cmds) & (count(I, "shield127", Count) | (not(count(I, "shield127", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant127.
-!inspect_nuclear_plant127 : .intend(inspect_nuclear_plant127, I) & (count(I, "shield127", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield127"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant128 : true <- !inspect_nuclear_plant1281. 
+!inspect_nuclear_plant1281 : fast & .intend(inspect_nuclear_plant128, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield128_id62_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield128", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield128", "G(add_belief(perc_rad128(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield128", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield128").
+!inspect_nuclear_plant128 : true <- !inspect_nuclear_plant1281. 
+!inspect_nuclear_plant1281 : true & .intend(inspect_nuclear_plant128, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield128_id63_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield128", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield128", "G(add_belief(perc_rad128(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield128", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield128").
-!inspect_nuclear_plant128 : .intend(inspect_nuclear_plant128, I) & violated(I, "shield128", Cmds) & (count(I, "shield128", Count) | (not(count(I, "shield128", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant128.
-!inspect_nuclear_plant128 : .intend(inspect_nuclear_plant128, I) & (count(I, "shield128", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield128"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant129 : true <- !inspect_nuclear_plant1291. 
+!inspect_nuclear_plant1291 : fast & .intend(inspect_nuclear_plant129, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield129_id64_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield129", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield129", "G(add_belief(perc_rad129(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield129", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield129").
+!inspect_nuclear_plant129 : true <- !inspect_nuclear_plant1291. 
+!inspect_nuclear_plant1291 : true & .intend(inspect_nuclear_plant129, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield129_id65_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield129", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield129", "G(add_belief(perc_rad129(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield129", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield129").
-!inspect_nuclear_plant129 : .intend(inspect_nuclear_plant129, I) & violated(I, "shield129", Cmds) & (count(I, "shield129", Count) | (not(count(I, "shield129", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant129.
-!inspect_nuclear_plant129 : .intend(inspect_nuclear_plant129, I) & (count(I, "shield129", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield129"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant130 : true <- !inspect_nuclear_plant1301. 
+!inspect_nuclear_plant1301 : fast & .intend(inspect_nuclear_plant130, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield130_id66_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield130", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield130", "G(add_belief(perc_rad130(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield130", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield130").
+!inspect_nuclear_plant130 : true <- !inspect_nuclear_plant1301. 
+!inspect_nuclear_plant1301 : true & .intend(inspect_nuclear_plant130, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield130_id67_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield130", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield130", "G(add_belief(perc_rad130(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield130", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield130").
-!inspect_nuclear_plant130 : .intend(inspect_nuclear_plant130, I) & violated(I, "shield130", Cmds) & (count(I, "shield130", Count) | (not(count(I, "shield130", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant130.
-!inspect_nuclear_plant130 : .intend(inspect_nuclear_plant130, I) & (count(I, "shield130", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield130"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant131 : true <- !inspect_nuclear_plant1311. 
+!inspect_nuclear_plant1311 : fast & .intend(inspect_nuclear_plant131, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield131_id68_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield131", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield131", "G(add_belief(perc_rad131(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield131", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield131").
+!inspect_nuclear_plant131 : true <- !inspect_nuclear_plant1311. 
+!inspect_nuclear_plant1311 : true & .intend(inspect_nuclear_plant131, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield131_id69_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield131", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield131", "G(add_belief(perc_rad131(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield131", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield131").
-!inspect_nuclear_plant131 : .intend(inspect_nuclear_plant131, I) & violated(I, "shield131", Cmds) & (count(I, "shield131", Count) | (not(count(I, "shield131", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant131.
-!inspect_nuclear_plant131 : .intend(inspect_nuclear_plant131, I) & (count(I, "shield131", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield131"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant132 : true <- !inspect_nuclear_plant1321. 
+!inspect_nuclear_plant1321 : fast & .intend(inspect_nuclear_plant132, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield132_id70_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield132", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield132", "G(add_belief(perc_rad132(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield132", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield132").
+!inspect_nuclear_plant132 : true <- !inspect_nuclear_plant1321. 
+!inspect_nuclear_plant1321 : true & .intend(inspect_nuclear_plant132, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield132_id71_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield132", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield132", "G(add_belief(perc_rad132(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield132", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield132").
-!inspect_nuclear_plant132 : .intend(inspect_nuclear_plant132, I) & violated(I, "shield132", Cmds) & (count(I, "shield132", Count) | (not(count(I, "shield132", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant132.
-!inspect_nuclear_plant132 : .intend(inspect_nuclear_plant132, I) & (count(I, "shield132", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield132"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant133 : true <- !inspect_nuclear_plant1331. 
+!inspect_nuclear_plant1331 : fast & .intend(inspect_nuclear_plant133, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield133_id72_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield133", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield133", "G(add_belief(perc_rad133(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield133", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield133").
+!inspect_nuclear_plant133 : true <- !inspect_nuclear_plant1331. 
+!inspect_nuclear_plant1331 : true & .intend(inspect_nuclear_plant133, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield133_id73_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield133", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield133", "G(add_belief(perc_rad133(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield133", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield133").
-!inspect_nuclear_plant133 : .intend(inspect_nuclear_plant133, I) & violated(I, "shield133", Cmds) & (count(I, "shield133", Count) | (not(count(I, "shield133", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant133.
-!inspect_nuclear_plant133 : .intend(inspect_nuclear_plant133, I) & (count(I, "shield133", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield133"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant134 : true <- !inspect_nuclear_plant1341. 
+!inspect_nuclear_plant1341 : fast & .intend(inspect_nuclear_plant134, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield134_id74_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield134", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield134", "G(add_belief(perc_rad134(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield134", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield134").
+!inspect_nuclear_plant134 : true <- !inspect_nuclear_plant1341. 
+!inspect_nuclear_plant1341 : true & .intend(inspect_nuclear_plant134, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield134_id75_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield134", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield134", "G(add_belief(perc_rad134(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield134", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield134").
-!inspect_nuclear_plant134 : .intend(inspect_nuclear_plant134, I) & violated(I, "shield134", Cmds) & (count(I, "shield134", Count) | (not(count(I, "shield134", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant134.
-!inspect_nuclear_plant134 : .intend(inspect_nuclear_plant134, I) & (count(I, "shield134", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield134"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant135 : true <- !inspect_nuclear_plant1351. 
+!inspect_nuclear_plant1351 : fast & .intend(inspect_nuclear_plant135, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield135_id76_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield135", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield135", "G(add_belief(perc_rad135(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield135", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield135").
+!inspect_nuclear_plant135 : true <- !inspect_nuclear_plant1351. 
+!inspect_nuclear_plant1351 : true & .intend(inspect_nuclear_plant135, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield135_id77_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield135", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield135", "G(add_belief(perc_rad135(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield135", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield135").
-!inspect_nuclear_plant135 : .intend(inspect_nuclear_plant135, I) & violated(I, "shield135", Cmds) & (count(I, "shield135", Count) | (not(count(I, "shield135", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant135.
-!inspect_nuclear_plant135 : .intend(inspect_nuclear_plant135, I) & (count(I, "shield135", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield135"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant136 : true <- !inspect_nuclear_plant1361. 
+!inspect_nuclear_plant1361 : fast & .intend(inspect_nuclear_plant136, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield136_id78_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield136", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield136", "G(add_belief(perc_rad136(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield136", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield136").
+!inspect_nuclear_plant136 : true <- !inspect_nuclear_plant1361. 
+!inspect_nuclear_plant1361 : true & .intend(inspect_nuclear_plant136, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield136_id79_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield136", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield136", "G(add_belief(perc_rad136(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield136", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield136").
-!inspect_nuclear_plant136 : .intend(inspect_nuclear_plant136, I) & violated(I, "shield136", Cmds) & (count(I, "shield136", Count) | (not(count(I, "shield136", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant136.
-!inspect_nuclear_plant136 : .intend(inspect_nuclear_plant136, I) & (count(I, "shield136", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield136"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant137 : true <- !inspect_nuclear_plant1371. 
+!inspect_nuclear_plant1371 : fast & .intend(inspect_nuclear_plant137, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield137_id80_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield137", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield137", "G(add_belief(perc_rad137(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield137", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield137").
+!inspect_nuclear_plant137 : true <- !inspect_nuclear_plant1371. 
+!inspect_nuclear_plant1371 : true & .intend(inspect_nuclear_plant137, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield137_id81_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield137", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield137", "G(add_belief(perc_rad137(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield137", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield137").
-!inspect_nuclear_plant137 : .intend(inspect_nuclear_plant137, I) & violated(I, "shield137", Cmds) & (count(I, "shield137", Count) | (not(count(I, "shield137", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant137.
-!inspect_nuclear_plant137 : .intend(inspect_nuclear_plant137, I) & (count(I, "shield137", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield137"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant138 : true <- !inspect_nuclear_plant1381. 
+!inspect_nuclear_plant1381 : fast & .intend(inspect_nuclear_plant138, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield138_id82_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield138", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield138", "G(add_belief(perc_rad138(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield138", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield138").
+!inspect_nuclear_plant138 : true <- !inspect_nuclear_plant1381. 
+!inspect_nuclear_plant1381 : true & .intend(inspect_nuclear_plant138, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield138_id83_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield138", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield138", "G(add_belief(perc_rad138(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield138", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield138").
-!inspect_nuclear_plant138 : .intend(inspect_nuclear_plant138, I) & violated(I, "shield138", Cmds) & (count(I, "shield138", Count) | (not(count(I, "shield138", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant138.
-!inspect_nuclear_plant138 : .intend(inspect_nuclear_plant138, I) & (count(I, "shield138", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield138"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant139 : true <- !inspect_nuclear_plant1391. 
+!inspect_nuclear_plant1391 : fast & .intend(inspect_nuclear_plant139, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield139_id84_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield139", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield139", "G(add_belief(perc_rad139(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield139", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield139").
+!inspect_nuclear_plant139 : true <- !inspect_nuclear_plant1391. 
+!inspect_nuclear_plant1391 : true & .intend(inspect_nuclear_plant139, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield139_id85_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield139", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield139", "G(add_belief(perc_rad139(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield139", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield139").
-!inspect_nuclear_plant139 : .intend(inspect_nuclear_plant139, I) & violated(I, "shield139", Cmds) & (count(I, "shield139", Count) | (not(count(I, "shield139", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant139.
-!inspect_nuclear_plant139 : .intend(inspect_nuclear_plant139, I) & (count(I, "shield139", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield139"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant140 : true <- !inspect_nuclear_plant1401. 
+!inspect_nuclear_plant1401 : fast & .intend(inspect_nuclear_plant140, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield140_id86_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield140", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield140", "G(add_belief(perc_rad140(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield140", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield140").
+!inspect_nuclear_plant140 : true <- !inspect_nuclear_plant1401. 
+!inspect_nuclear_plant1401 : true & .intend(inspect_nuclear_plant140, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield140_id87_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield140", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield140", "G(add_belief(perc_rad140(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield140", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield140").
-!inspect_nuclear_plant140 : .intend(inspect_nuclear_plant140, I) & violated(I, "shield140", Cmds) & (count(I, "shield140", Count) | (not(count(I, "shield140", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant140.
-!inspect_nuclear_plant140 : .intend(inspect_nuclear_plant140, I) & (count(I, "shield140", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield140"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant141 : true <- !inspect_nuclear_plant1411. 
+!inspect_nuclear_plant1411 : fast & .intend(inspect_nuclear_plant141, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield141_id88_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield141", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield141", "G(add_belief(perc_rad141(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield141", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield141").
+!inspect_nuclear_plant141 : true <- !inspect_nuclear_plant1411. 
+!inspect_nuclear_plant1411 : true & .intend(inspect_nuclear_plant141, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield141_id89_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield141", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield141", "G(add_belief(perc_rad141(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield141", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield141").
-!inspect_nuclear_plant141 : .intend(inspect_nuclear_plant141, I) & violated(I, "shield141", Cmds) & (count(I, "shield141", Count) | (not(count(I, "shield141", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant141.
-!inspect_nuclear_plant141 : .intend(inspect_nuclear_plant141, I) & (count(I, "shield141", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield141"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant142 : true <- !inspect_nuclear_plant1421. 
+!inspect_nuclear_plant1421 : fast & .intend(inspect_nuclear_plant142, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield142_id90_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield142", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield142", "G(add_belief(perc_rad142(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield142", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield142").
+!inspect_nuclear_plant142 : true <- !inspect_nuclear_plant1421. 
+!inspect_nuclear_plant1421 : true & .intend(inspect_nuclear_plant142, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield142_id91_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield142", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield142", "G(add_belief(perc_rad142(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield142", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield142").
-!inspect_nuclear_plant142 : .intend(inspect_nuclear_plant142, I) & violated(I, "shield142", Cmds) & (count(I, "shield142", Count) | (not(count(I, "shield142", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant142.
-!inspect_nuclear_plant142 : .intend(inspect_nuclear_plant142, I) & (count(I, "shield142", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield142"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant143 : true <- !inspect_nuclear_plant1431. 
+!inspect_nuclear_plant1431 : fast & .intend(inspect_nuclear_plant143, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield143_id92_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield143", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield143", "G(add_belief(perc_rad143(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield143", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield143").
+!inspect_nuclear_plant143 : true <- !inspect_nuclear_plant1431. 
+!inspect_nuclear_plant1431 : true & .intend(inspect_nuclear_plant143, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield143_id93_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield143", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield143", "G(add_belief(perc_rad143(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield143", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield143").
-!inspect_nuclear_plant143 : .intend(inspect_nuclear_plant143, I) & violated(I, "shield143", Cmds) & (count(I, "shield143", Count) | (not(count(I, "shield143", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant143.
-!inspect_nuclear_plant143 : .intend(inspect_nuclear_plant143, I) & (count(I, "shield143", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield143"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant144 : true <- !inspect_nuclear_plant1441. 
+!inspect_nuclear_plant1441 : fast & .intend(inspect_nuclear_plant144, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield144_id94_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield144", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield144", "G(add_belief(perc_rad144(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield144", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield144").
+!inspect_nuclear_plant144 : true <- !inspect_nuclear_plant1441. 
+!inspect_nuclear_plant1441 : true & .intend(inspect_nuclear_plant144, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield144_id95_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield144", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield144", "G(add_belief(perc_rad144(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield144", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield144").
-!inspect_nuclear_plant144 : .intend(inspect_nuclear_plant144, I) & violated(I, "shield144", Cmds) & (count(I, "shield144", Count) | (not(count(I, "shield144", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant144.
-!inspect_nuclear_plant144 : .intend(inspect_nuclear_plant144, I) & (count(I, "shield144", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield144"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant145 : true <- !inspect_nuclear_plant1451. 
+!inspect_nuclear_plant1451 : fast & .intend(inspect_nuclear_plant145, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield145_id96_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield145", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield145", "G(add_belief(perc_rad145(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield145", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield145").
+!inspect_nuclear_plant145 : true <- !inspect_nuclear_plant1451. 
+!inspect_nuclear_plant1451 : true & .intend(inspect_nuclear_plant145, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield145_id97_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield145", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield145", "G(add_belief(perc_rad145(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield145", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield145").
-!inspect_nuclear_plant145 : .intend(inspect_nuclear_plant145, I) & violated(I, "shield145", Cmds) & (count(I, "shield145", Count) | (not(count(I, "shield145", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant145.
-!inspect_nuclear_plant145 : .intend(inspect_nuclear_plant145, I) & (count(I, "shield145", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield145"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant146 : true <- !inspect_nuclear_plant1461. 
+!inspect_nuclear_plant1461 : fast & .intend(inspect_nuclear_plant146, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield146_id98_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield146", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield146", "G(add_belief(perc_rad146(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield146", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield146").
+!inspect_nuclear_plant146 : true <- !inspect_nuclear_plant1461. 
+!inspect_nuclear_plant1461 : true & .intend(inspect_nuclear_plant146, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield146_id99_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield146", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield146", "G(add_belief(perc_rad146(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield146", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield146").
-!inspect_nuclear_plant146 : .intend(inspect_nuclear_plant146, I) & violated(I, "shield146", Cmds) & (count(I, "shield146", Count) | (not(count(I, "shield146", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant146.
-!inspect_nuclear_plant146 : .intend(inspect_nuclear_plant146, I) & (count(I, "shield146", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield146"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant147 : true <- !inspect_nuclear_plant1471. 
+!inspect_nuclear_plant1471 : fast & .intend(inspect_nuclear_plant147, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield147_id100_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield147", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield147", "G(add_belief(perc_rad147(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield147", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield147").
+!inspect_nuclear_plant147 : true <- !inspect_nuclear_plant1471. 
+!inspect_nuclear_plant1471 : true & .intend(inspect_nuclear_plant147, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield147_id101_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield147", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield147", "G(add_belief(perc_rad147(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield147", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield147").
-!inspect_nuclear_plant147 : .intend(inspect_nuclear_plant147, I) & violated(I, "shield147", Cmds) & (count(I, "shield147", Count) | (not(count(I, "shield147", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant147.
-!inspect_nuclear_plant147 : .intend(inspect_nuclear_plant147, I) & (count(I, "shield147", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield147"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant148 : true <- !inspect_nuclear_plant1481. 
+!inspect_nuclear_plant1481 : fast & .intend(inspect_nuclear_plant148, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield148_id102_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield148", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield148", "G(add_belief(perc_rad148(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield148", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield148").
+!inspect_nuclear_plant148 : true <- !inspect_nuclear_plant1481. 
+!inspect_nuclear_plant1481 : true & .intend(inspect_nuclear_plant148, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield148_id103_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield148", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield148", "G(add_belief(perc_rad148(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield148", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield148").
-!inspect_nuclear_plant148 : .intend(inspect_nuclear_plant148, I) & violated(I, "shield148", Cmds) & (count(I, "shield148", Count) | (not(count(I, "shield148", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant148.
-!inspect_nuclear_plant148 : .intend(inspect_nuclear_plant148, I) & (count(I, "shield148", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield148"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant149 : true <- !inspect_nuclear_plant1491. 
+!inspect_nuclear_plant1491 : fast & .intend(inspect_nuclear_plant149, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield149_id104_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield149", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield149", "G(add_belief(perc_rad149(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield149", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield149").
+!inspect_nuclear_plant149 : true <- !inspect_nuclear_plant1491. 
+!inspect_nuclear_plant1491 : true & .intend(inspect_nuclear_plant149, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield149_id105_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield149", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield149", "G(add_belief(perc_rad149(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield149", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield149").
-!inspect_nuclear_plant149 : .intend(inspect_nuclear_plant149, I) & violated(I, "shield149", Cmds) & (count(I, "shield149", Count) | (not(count(I, "shield149", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant149.
-!inspect_nuclear_plant149 : .intend(inspect_nuclear_plant149, I) & (count(I, "shield149", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield149"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant150 : true <- !inspect_nuclear_plant1501. 
+!inspect_nuclear_plant1501 : fast & .intend(inspect_nuclear_plant150, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield150_id106_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield150", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield150", "G(add_belief(perc_rad150(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield150", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield150").
+!inspect_nuclear_plant150 : true <- !inspect_nuclear_plant1501. 
+!inspect_nuclear_plant1501 : true & .intend(inspect_nuclear_plant150, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield150_id107_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield150", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield150", "G(add_belief(perc_rad150(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield150", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield150").
-!inspect_nuclear_plant150 : .intend(inspect_nuclear_plant150, I) & violated(I, "shield150", Cmds) & (count(I, "shield150", Count) | (not(count(I, "shield150", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant150.
-!inspect_nuclear_plant150 : .intend(inspect_nuclear_plant150, I) & (count(I, "shield150", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield150"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant151 : true <- !inspect_nuclear_plant1511. 
+!inspect_nuclear_plant1511 : fast & .intend(inspect_nuclear_plant151, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield151_id108_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield151", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield151", "G(add_belief(perc_rad151(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield151", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield151").
+!inspect_nuclear_plant151 : true <- !inspect_nuclear_plant1511. 
+!inspect_nuclear_plant1511 : true & .intend(inspect_nuclear_plant151, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield151_id109_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield151", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield151", "G(add_belief(perc_rad151(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield151", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield151").
-!inspect_nuclear_plant151 : .intend(inspect_nuclear_plant151, I) & violated(I, "shield151", Cmds) & (count(I, "shield151", Count) | (not(count(I, "shield151", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant151.
-!inspect_nuclear_plant151 : .intend(inspect_nuclear_plant151, I) & (count(I, "shield151", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield151"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant152 : true <- !inspect_nuclear_plant1521. 
+!inspect_nuclear_plant1521 : fast & .intend(inspect_nuclear_plant152, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield152_id110_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield152", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield152", "G(add_belief(perc_rad152(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield152", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield152").
+!inspect_nuclear_plant152 : true <- !inspect_nuclear_plant1521. 
+!inspect_nuclear_plant1521 : true & .intend(inspect_nuclear_plant152, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield152_id111_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield152", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield152", "G(add_belief(perc_rad152(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield152", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield152").
-!inspect_nuclear_plant152 : .intend(inspect_nuclear_plant152, I) & violated(I, "shield152", Cmds) & (count(I, "shield152", Count) | (not(count(I, "shield152", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant152.
-!inspect_nuclear_plant152 : .intend(inspect_nuclear_plant152, I) & (count(I, "shield152", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield152"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant153 : true <- !inspect_nuclear_plant1531. 
+!inspect_nuclear_plant1531 : fast & .intend(inspect_nuclear_plant153, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield153_id112_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield153", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield153", "G(add_belief(perc_rad153(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield153", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield153").
+!inspect_nuclear_plant153 : true <- !inspect_nuclear_plant1531. 
+!inspect_nuclear_plant1531 : true & .intend(inspect_nuclear_plant153, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield153_id113_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield153", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield153", "G(add_belief(perc_rad153(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield153", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield153").
-!inspect_nuclear_plant153 : .intend(inspect_nuclear_plant153, I) & violated(I, "shield153", Cmds) & (count(I, "shield153", Count) | (not(count(I, "shield153", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant153.
-!inspect_nuclear_plant153 : .intend(inspect_nuclear_plant153, I) & (count(I, "shield153", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield153"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant154 : true <- !inspect_nuclear_plant1541. 
+!inspect_nuclear_plant1541 : fast & .intend(inspect_nuclear_plant154, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield154_id114_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield154", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield154", "G(add_belief(perc_rad154(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield154", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield154").
+!inspect_nuclear_plant154 : true <- !inspect_nuclear_plant1541. 
+!inspect_nuclear_plant1541 : true & .intend(inspect_nuclear_plant154, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield154_id115_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield154", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield154", "G(add_belief(perc_rad154(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield154", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield154").
-!inspect_nuclear_plant154 : .intend(inspect_nuclear_plant154, I) & violated(I, "shield154", Cmds) & (count(I, "shield154", Count) | (not(count(I, "shield154", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant154.
-!inspect_nuclear_plant154 : .intend(inspect_nuclear_plant154, I) & (count(I, "shield154", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield154"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant155 : true <- !inspect_nuclear_plant1551. 
+!inspect_nuclear_plant1551 : fast & .intend(inspect_nuclear_plant155, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield155_id116_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield155", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield155", "G(add_belief(perc_rad155(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield155", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield155").
+!inspect_nuclear_plant155 : true <- !inspect_nuclear_plant1551. 
+!inspect_nuclear_plant1551 : true & .intend(inspect_nuclear_plant155, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield155_id117_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield155", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield155", "G(add_belief(perc_rad155(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield155", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield155").
-!inspect_nuclear_plant155 : .intend(inspect_nuclear_plant155, I) & violated(I, "shield155", Cmds) & (count(I, "shield155", Count) | (not(count(I, "shield155", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant155.
-!inspect_nuclear_plant155 : .intend(inspect_nuclear_plant155, I) & (count(I, "shield155", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield155"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant156 : true <- !inspect_nuclear_plant1561. 
+!inspect_nuclear_plant1561 : fast & .intend(inspect_nuclear_plant156, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield156_id118_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield156", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield156", "G(add_belief(perc_rad156(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield156", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield156").
+!inspect_nuclear_plant156 : true <- !inspect_nuclear_plant1561. 
+!inspect_nuclear_plant1561 : true & .intend(inspect_nuclear_plant156, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield156_id119_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield156", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield156", "G(add_belief(perc_rad156(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield156", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield156").
-!inspect_nuclear_plant156 : .intend(inspect_nuclear_plant156, I) & violated(I, "shield156", Cmds) & (count(I, "shield156", Count) | (not(count(I, "shield156", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant156.
-!inspect_nuclear_plant156 : .intend(inspect_nuclear_plant156, I) & (count(I, "shield156", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield156"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant157 : true <- !inspect_nuclear_plant1571. 
+!inspect_nuclear_plant1571 : fast & .intend(inspect_nuclear_plant157, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield157_id120_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield157", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield157", "G(add_belief(perc_rad157(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield157", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield157").
+!inspect_nuclear_plant157 : true <- !inspect_nuclear_plant1571. 
+!inspect_nuclear_plant1571 : true & .intend(inspect_nuclear_plant157, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield157_id121_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield157", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield157", "G(add_belief(perc_rad157(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield157", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield157").
-!inspect_nuclear_plant157 : .intend(inspect_nuclear_plant157, I) & violated(I, "shield157", Cmds) & (count(I, "shield157", Count) | (not(count(I, "shield157", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant157.
-!inspect_nuclear_plant157 : .intend(inspect_nuclear_plant157, I) & (count(I, "shield157", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield157"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant158 : true <- !inspect_nuclear_plant1581. 
+!inspect_nuclear_plant1581 : fast & .intend(inspect_nuclear_plant158, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield158_id122_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield158", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield158", "G(add_belief(perc_rad158(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield158", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield158").
+!inspect_nuclear_plant158 : true <- !inspect_nuclear_plant1581. 
+!inspect_nuclear_plant1581 : true & .intend(inspect_nuclear_plant158, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield158_id123_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield158", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield158", "G(add_belief(perc_rad158(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield158", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield158").
-!inspect_nuclear_plant158 : .intend(inspect_nuclear_plant158, I) & violated(I, "shield158", Cmds) & (count(I, "shield158", Count) | (not(count(I, "shield158", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant158.
-!inspect_nuclear_plant158 : .intend(inspect_nuclear_plant158, I) & (count(I, "shield158", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield158"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant159 : true <- !inspect_nuclear_plant1591. 
+!inspect_nuclear_plant1591 : fast & .intend(inspect_nuclear_plant159, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield159_id124_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield159", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield159", "G(add_belief(perc_rad159(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield159", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield159").
+!inspect_nuclear_plant159 : true <- !inspect_nuclear_plant1591. 
+!inspect_nuclear_plant1591 : true & .intend(inspect_nuclear_plant159, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield159_id125_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield159", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield159", "G(add_belief(perc_rad159(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield159", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield159").
-!inspect_nuclear_plant159 : .intend(inspect_nuclear_plant159, I) & violated(I, "shield159", Cmds) & (count(I, "shield159", Count) | (not(count(I, "shield159", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant159.
-!inspect_nuclear_plant159 : .intend(inspect_nuclear_plant159, I) & (count(I, "shield159", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield159"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant160 : true <- !inspect_nuclear_plant1601. 
+!inspect_nuclear_plant1601 : fast & .intend(inspect_nuclear_plant160, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield160_id126_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield160", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield160", "G(add_belief(perc_rad160(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield160", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield160").
+!inspect_nuclear_plant160 : true <- !inspect_nuclear_plant1601. 
+!inspect_nuclear_plant1601 : true & .intend(inspect_nuclear_plant160, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield160_id127_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield160", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield160", "G(add_belief(perc_rad160(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield160", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield160").
-!inspect_nuclear_plant160 : .intend(inspect_nuclear_plant160, I) & violated(I, "shield160", Cmds) & (count(I, "shield160", Count) | (not(count(I, "shield160", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant160.
-!inspect_nuclear_plant160 : .intend(inspect_nuclear_plant160, I) & (count(I, "shield160", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield160"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant161 : true <- !inspect_nuclear_plant1611. 
+!inspect_nuclear_plant1611 : fast & .intend(inspect_nuclear_plant161, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield161_id128_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield161", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield161", "G(add_belief(perc_rad161(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield161", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield161").
+!inspect_nuclear_plant161 : true <- !inspect_nuclear_plant1611. 
+!inspect_nuclear_plant1611 : true & .intend(inspect_nuclear_plant161, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield161_id129_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield161", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield161", "G(add_belief(perc_rad161(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield161", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield161").
-!inspect_nuclear_plant161 : .intend(inspect_nuclear_plant161, I) & violated(I, "shield161", Cmds) & (count(I, "shield161", Count) | (not(count(I, "shield161", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant161.
-!inspect_nuclear_plant161 : .intend(inspect_nuclear_plant161, I) & (count(I, "shield161", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield161"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant162 : true <- !inspect_nuclear_plant1621. 
+!inspect_nuclear_plant1621 : fast & .intend(inspect_nuclear_plant162, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield162_id130_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield162", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield162", "G(add_belief(perc_rad162(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield162", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield162").
+!inspect_nuclear_plant162 : true <- !inspect_nuclear_plant1621. 
+!inspect_nuclear_plant1621 : true & .intend(inspect_nuclear_plant162, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield162_id131_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield162", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield162", "G(add_belief(perc_rad162(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield162", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield162").
-!inspect_nuclear_plant162 : .intend(inspect_nuclear_plant162, I) & violated(I, "shield162", Cmds) & (count(I, "shield162", Count) | (not(count(I, "shield162", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant162.
-!inspect_nuclear_plant162 : .intend(inspect_nuclear_plant162, I) & (count(I, "shield162", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield162"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant163 : true <- !inspect_nuclear_plant1631. 
+!inspect_nuclear_plant1631 : fast & .intend(inspect_nuclear_plant163, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield163_id132_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield163", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield163", "G(add_belief(perc_rad163(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield163", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield163").
+!inspect_nuclear_plant163 : true <- !inspect_nuclear_plant1631. 
+!inspect_nuclear_plant1631 : true & .intend(inspect_nuclear_plant163, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield163_id133_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield163", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield163", "G(add_belief(perc_rad163(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield163", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield163").
-!inspect_nuclear_plant163 : .intend(inspect_nuclear_plant163, I) & violated(I, "shield163", Cmds) & (count(I, "shield163", Count) | (not(count(I, "shield163", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant163.
-!inspect_nuclear_plant163 : .intend(inspect_nuclear_plant163, I) & (count(I, "shield163", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield163"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant164 : true <- !inspect_nuclear_plant1641. 
+!inspect_nuclear_plant1641 : fast & .intend(inspect_nuclear_plant164, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield164_id134_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield164", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield164", "G(add_belief(perc_rad164(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield164", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield164").
+!inspect_nuclear_plant164 : true <- !inspect_nuclear_plant1641. 
+!inspect_nuclear_plant1641 : true & .intend(inspect_nuclear_plant164, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield164_id135_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield164", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield164", "G(add_belief(perc_rad164(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield164", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield164").
-!inspect_nuclear_plant164 : .intend(inspect_nuclear_plant164, I) & violated(I, "shield164", Cmds) & (count(I, "shield164", Count) | (not(count(I, "shield164", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant164.
-!inspect_nuclear_plant164 : .intend(inspect_nuclear_plant164, I) & (count(I, "shield164", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield164"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant165 : true <- !inspect_nuclear_plant1651. 
+!inspect_nuclear_plant1651 : fast & .intend(inspect_nuclear_plant165, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield165_id136_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield165", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield165", "G(add_belief(perc_rad165(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield165", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield165").
+!inspect_nuclear_plant165 : true <- !inspect_nuclear_plant1651. 
+!inspect_nuclear_plant1651 : true & .intend(inspect_nuclear_plant165, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield165_id137_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield165", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield165", "G(add_belief(perc_rad165(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield165", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield165").
-!inspect_nuclear_plant165 : .intend(inspect_nuclear_plant165, I) & violated(I, "shield165", Cmds) & (count(I, "shield165", Count) | (not(count(I, "shield165", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant165.
-!inspect_nuclear_plant165 : .intend(inspect_nuclear_plant165, I) & (count(I, "shield165", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield165"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant166 : true <- !inspect_nuclear_plant1661. 
+!inspect_nuclear_plant1661 : fast & .intend(inspect_nuclear_plant166, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield166_id138_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield166", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield166", "G(add_belief(perc_rad166(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield166", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield166").
+!inspect_nuclear_plant166 : true <- !inspect_nuclear_plant1661. 
+!inspect_nuclear_plant1661 : true & .intend(inspect_nuclear_plant166, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield166_id139_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield166", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield166", "G(add_belief(perc_rad166(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield166", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield166").
-!inspect_nuclear_plant166 : .intend(inspect_nuclear_plant166, I) & violated(I, "shield166", Cmds) & (count(I, "shield166", Count) | (not(count(I, "shield166", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant166.
-!inspect_nuclear_plant166 : .intend(inspect_nuclear_plant166, I) & (count(I, "shield166", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield166"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant167 : true <- !inspect_nuclear_plant1671. 
+!inspect_nuclear_plant1671 : fast & .intend(inspect_nuclear_plant167, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield167_id140_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield167", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield167", "G(add_belief(perc_rad167(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield167", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield167").
+!inspect_nuclear_plant167 : true <- !inspect_nuclear_plant1671. 
+!inspect_nuclear_plant1671 : true & .intend(inspect_nuclear_plant167, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield167_id141_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield167", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield167", "G(add_belief(perc_rad167(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield167", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield167").
-!inspect_nuclear_plant167 : .intend(inspect_nuclear_plant167, I) & violated(I, "shield167", Cmds) & (count(I, "shield167", Count) | (not(count(I, "shield167", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant167.
-!inspect_nuclear_plant167 : .intend(inspect_nuclear_plant167, I) & (count(I, "shield167", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield167"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant168 : true <- !inspect_nuclear_plant1681. 
+!inspect_nuclear_plant1681 : fast & .intend(inspect_nuclear_plant168, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield168_id142_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield168", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield168", "G(add_belief(perc_rad168(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield168", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield168").
+!inspect_nuclear_plant168 : true <- !inspect_nuclear_plant1681. 
+!inspect_nuclear_plant1681 : true & .intend(inspect_nuclear_plant168, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield168_id143_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield168", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield168", "G(add_belief(perc_rad168(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield168", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield168").
-!inspect_nuclear_plant168 : .intend(inspect_nuclear_plant168, I) & violated(I, "shield168", Cmds) & (count(I, "shield168", Count) | (not(count(I, "shield168", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant168.
-!inspect_nuclear_plant168 : .intend(inspect_nuclear_plant168, I) & (count(I, "shield168", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield168"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant169 : true <- !inspect_nuclear_plant1691. 
+!inspect_nuclear_plant1691 : fast & .intend(inspect_nuclear_plant169, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield169_id144_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield169", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield169", "G(add_belief(perc_rad169(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield169", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield169").
+!inspect_nuclear_plant169 : true <- !inspect_nuclear_plant1691. 
+!inspect_nuclear_plant1691 : true & .intend(inspect_nuclear_plant169, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield169_id145_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield169", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield169", "G(add_belief(perc_rad169(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield169", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield169").
-!inspect_nuclear_plant169 : .intend(inspect_nuclear_plant169, I) & violated(I, "shield169", Cmds) & (count(I, "shield169", Count) | (not(count(I, "shield169", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant169.
-!inspect_nuclear_plant169 : .intend(inspect_nuclear_plant169, I) & (count(I, "shield169", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield169"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant170 : true <- !inspect_nuclear_plant1701. 
+!inspect_nuclear_plant1701 : fast & .intend(inspect_nuclear_plant170, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield170_id146_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield170", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield170", "G(add_belief(perc_rad170(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield170", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield170").
+!inspect_nuclear_plant170 : true <- !inspect_nuclear_plant1701. 
+!inspect_nuclear_plant1701 : true & .intend(inspect_nuclear_plant170, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield170_id147_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield170", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield170", "G(add_belief(perc_rad170(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield170", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield170").
-!inspect_nuclear_plant170 : .intend(inspect_nuclear_plant170, I) & violated(I, "shield170", Cmds) & (count(I, "shield170", Count) | (not(count(I, "shield170", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant170.
-!inspect_nuclear_plant170 : .intend(inspect_nuclear_plant170, I) & (count(I, "shield170", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield170"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant171 : true <- !inspect_nuclear_plant1711. 
+!inspect_nuclear_plant1711 : fast & .intend(inspect_nuclear_plant171, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield171_id148_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield171", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield171", "G(add_belief(perc_rad171(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield171", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield171").
+!inspect_nuclear_plant171 : true <- !inspect_nuclear_plant1711. 
+!inspect_nuclear_plant1711 : true & .intend(inspect_nuclear_plant171, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield171_id149_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield171", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield171", "G(add_belief(perc_rad171(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield171", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield171").
-!inspect_nuclear_plant171 : .intend(inspect_nuclear_plant171, I) & violated(I, "shield171", Cmds) & (count(I, "shield171", Count) | (not(count(I, "shield171", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant171.
-!inspect_nuclear_plant171 : .intend(inspect_nuclear_plant171, I) & (count(I, "shield171", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield171"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant172 : true <- !inspect_nuclear_plant1721. 
+!inspect_nuclear_plant1721 : fast & .intend(inspect_nuclear_plant172, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield172_id150_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield172", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield172", "G(add_belief(perc_rad172(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield172", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield172").
+!inspect_nuclear_plant172 : true <- !inspect_nuclear_plant1721. 
+!inspect_nuclear_plant1721 : true & .intend(inspect_nuclear_plant172, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield172_id151_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield172", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield172", "G(add_belief(perc_rad172(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield172", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield172").
-!inspect_nuclear_plant172 : .intend(inspect_nuclear_plant172, I) & violated(I, "shield172", Cmds) & (count(I, "shield172", Count) | (not(count(I, "shield172", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant172.
-!inspect_nuclear_plant172 : .intend(inspect_nuclear_plant172, I) & (count(I, "shield172", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield172"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant173 : true <- !inspect_nuclear_plant1731. 
+!inspect_nuclear_plant1731 : fast & .intend(inspect_nuclear_plant173, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield173_id152_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield173", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield173", "G(add_belief(perc_rad173(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield173", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield173").
+!inspect_nuclear_plant173 : true <- !inspect_nuclear_plant1731. 
+!inspect_nuclear_plant1731 : true & .intend(inspect_nuclear_plant173, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield173_id153_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield173", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield173", "G(add_belief(perc_rad173(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield173", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield173").
-!inspect_nuclear_plant173 : .intend(inspect_nuclear_plant173, I) & violated(I, "shield173", Cmds) & (count(I, "shield173", Count) | (not(count(I, "shield173", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant173.
-!inspect_nuclear_plant173 : .intend(inspect_nuclear_plant173, I) & (count(I, "shield173", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield173"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant174 : true <- !inspect_nuclear_plant1741. 
+!inspect_nuclear_plant1741 : fast & .intend(inspect_nuclear_plant174, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield174_id154_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield174", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield174", "G(add_belief(perc_rad174(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield174", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield174").
+!inspect_nuclear_plant174 : true <- !inspect_nuclear_plant1741. 
+!inspect_nuclear_plant1741 : true & .intend(inspect_nuclear_plant174, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield174_id155_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield174", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield174", "G(add_belief(perc_rad174(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield174", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield174").
-!inspect_nuclear_plant174 : .intend(inspect_nuclear_plant174, I) & violated(I, "shield174", Cmds) & (count(I, "shield174", Count) | (not(count(I, "shield174", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant174.
-!inspect_nuclear_plant174 : .intend(inspect_nuclear_plant174, I) & (count(I, "shield174", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield174"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant175 : true <- !inspect_nuclear_plant1751. 
+!inspect_nuclear_plant1751 : fast & .intend(inspect_nuclear_plant175, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield175_id156_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield175", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield175", "G(add_belief(perc_rad175(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield175", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield175").
+!inspect_nuclear_plant175 : true <- !inspect_nuclear_plant1751. 
+!inspect_nuclear_plant1751 : true & .intend(inspect_nuclear_plant175, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield175_id157_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield175", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield175", "G(add_belief(perc_rad175(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield175", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield175").
-!inspect_nuclear_plant175 : .intend(inspect_nuclear_plant175, I) & violated(I, "shield175", Cmds) & (count(I, "shield175", Count) | (not(count(I, "shield175", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant175.
-!inspect_nuclear_plant175 : .intend(inspect_nuclear_plant175, I) & (count(I, "shield175", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield175"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant176 : true <- !inspect_nuclear_plant1761. 
+!inspect_nuclear_plant1761 : fast & .intend(inspect_nuclear_plant176, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield176_id158_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield176", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield176", "G(add_belief(perc_rad176(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield176", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield176").
+!inspect_nuclear_plant176 : true <- !inspect_nuclear_plant1761. 
+!inspect_nuclear_plant1761 : true & .intend(inspect_nuclear_plant176, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield176_id159_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield176", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield176", "G(add_belief(perc_rad176(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield176", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield176").
-!inspect_nuclear_plant176 : .intend(inspect_nuclear_plant176, I) & violated(I, "shield176", Cmds) & (count(I, "shield176", Count) | (not(count(I, "shield176", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant176.
-!inspect_nuclear_plant176 : .intend(inspect_nuclear_plant176, I) & (count(I, "shield176", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield176"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant177 : true <- !inspect_nuclear_plant1771. 
+!inspect_nuclear_plant1771 : fast & .intend(inspect_nuclear_plant177, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield177_id160_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield177", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield177", "G(add_belief(perc_rad177(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield177", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield177").
+!inspect_nuclear_plant177 : true <- !inspect_nuclear_plant1771. 
+!inspect_nuclear_plant1771 : true & .intend(inspect_nuclear_plant177, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield177_id161_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield177", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield177", "G(add_belief(perc_rad177(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield177", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield177").
-!inspect_nuclear_plant177 : .intend(inspect_nuclear_plant177, I) & violated(I, "shield177", Cmds) & (count(I, "shield177", Count) | (not(count(I, "shield177", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant177.
-!inspect_nuclear_plant177 : .intend(inspect_nuclear_plant177, I) & (count(I, "shield177", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield177"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant178 : true <- !inspect_nuclear_plant1781. 
+!inspect_nuclear_plant1781 : fast & .intend(inspect_nuclear_plant178, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield178_id162_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield178", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield178", "G(add_belief(perc_rad178(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield178", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield178").
+!inspect_nuclear_plant178 : true <- !inspect_nuclear_plant1781. 
+!inspect_nuclear_plant1781 : true & .intend(inspect_nuclear_plant178, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield178_id163_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield178", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield178", "G(add_belief(perc_rad178(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield178", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield178").
-!inspect_nuclear_plant178 : .intend(inspect_nuclear_plant178, I) & violated(I, "shield178", Cmds) & (count(I, "shield178", Count) | (not(count(I, "shield178", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant178.
-!inspect_nuclear_plant178 : .intend(inspect_nuclear_plant178, I) & (count(I, "shield178", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield178"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant179 : true <- !inspect_nuclear_plant1791. 
+!inspect_nuclear_plant1791 : fast & .intend(inspect_nuclear_plant179, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield179_id164_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield179", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield179", "G(add_belief(perc_rad179(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield179", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield179").
+!inspect_nuclear_plant179 : true <- !inspect_nuclear_plant1791. 
+!inspect_nuclear_plant1791 : true & .intend(inspect_nuclear_plant179, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield179_id165_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield179", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield179", "G(add_belief(perc_rad179(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield179", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield179").
-!inspect_nuclear_plant179 : .intend(inspect_nuclear_plant179, I) & violated(I, "shield179", Cmds) & (count(I, "shield179", Count) | (not(count(I, "shield179", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant179.
-!inspect_nuclear_plant179 : .intend(inspect_nuclear_plant179, I) & (count(I, "shield179", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield179"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant180 : true <- !inspect_nuclear_plant1801. 
+!inspect_nuclear_plant1801 : fast & .intend(inspect_nuclear_plant180, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield180_id166_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield180", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield180", "G(add_belief(perc_rad180(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield180", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield180").
+!inspect_nuclear_plant180 : true <- !inspect_nuclear_plant1801. 
+!inspect_nuclear_plant1801 : true & .intend(inspect_nuclear_plant180, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield180_id167_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield180", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield180", "G(add_belief(perc_rad180(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield180", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield180").
-!inspect_nuclear_plant180 : .intend(inspect_nuclear_plant180, I) & violated(I, "shield180", Cmds) & (count(I, "shield180", Count) | (not(count(I, "shield180", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant180.
-!inspect_nuclear_plant180 : .intend(inspect_nuclear_plant180, I) & (count(I, "shield180", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield180"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant181 : true <- !inspect_nuclear_plant1811. 
+!inspect_nuclear_plant1811 : fast & .intend(inspect_nuclear_plant181, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield181_id168_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield181", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield181", "G(add_belief(perc_rad181(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield181", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield181").
+!inspect_nuclear_plant181 : true <- !inspect_nuclear_plant1811. 
+!inspect_nuclear_plant1811 : true & .intend(inspect_nuclear_plant181, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield181_id169_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield181", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield181", "G(add_belief(perc_rad181(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield181", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield181").
-!inspect_nuclear_plant181 : .intend(inspect_nuclear_plant181, I) & violated(I, "shield181", Cmds) & (count(I, "shield181", Count) | (not(count(I, "shield181", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant181.
-!inspect_nuclear_plant181 : .intend(inspect_nuclear_plant181, I) & (count(I, "shield181", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield181"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant182 : true <- !inspect_nuclear_plant1821. 
+!inspect_nuclear_plant1821 : fast & .intend(inspect_nuclear_plant182, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield182_id170_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield182", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield182", "G(add_belief(perc_rad182(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield182", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield182").
+!inspect_nuclear_plant182 : true <- !inspect_nuclear_plant1821. 
+!inspect_nuclear_plant1821 : true & .intend(inspect_nuclear_plant182, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield182_id171_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield182", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield182", "G(add_belief(perc_rad182(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield182", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield182").
-!inspect_nuclear_plant182 : .intend(inspect_nuclear_plant182, I) & violated(I, "shield182", Cmds) & (count(I, "shield182", Count) | (not(count(I, "shield182", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant182.
-!inspect_nuclear_plant182 : .intend(inspect_nuclear_plant182, I) & (count(I, "shield182", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield182"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant183 : true <- !inspect_nuclear_plant1831. 
+!inspect_nuclear_plant1831 : fast & .intend(inspect_nuclear_plant183, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield183_id172_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield183", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield183", "G(add_belief(perc_rad183(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield183", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield183").
+!inspect_nuclear_plant183 : true <- !inspect_nuclear_plant1831. 
+!inspect_nuclear_plant1831 : true & .intend(inspect_nuclear_plant183, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield183_id173_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield183", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield183", "G(add_belief(perc_rad183(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield183", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield183").
-!inspect_nuclear_plant183 : .intend(inspect_nuclear_plant183, I) & violated(I, "shield183", Cmds) & (count(I, "shield183", Count) | (not(count(I, "shield183", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant183.
-!inspect_nuclear_plant183 : .intend(inspect_nuclear_plant183, I) & (count(I, "shield183", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield183"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant184 : true <- !inspect_nuclear_plant1841. 
+!inspect_nuclear_plant1841 : fast & .intend(inspect_nuclear_plant184, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield184_id174_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield184", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield184", "G(add_belief(perc_rad184(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield184", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield184").
+!inspect_nuclear_plant184 : true <- !inspect_nuclear_plant1841. 
+!inspect_nuclear_plant1841 : true & .intend(inspect_nuclear_plant184, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield184_id175_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield184", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield184", "G(add_belief(perc_rad184(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield184", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield184").
-!inspect_nuclear_plant184 : .intend(inspect_nuclear_plant184, I) & violated(I, "shield184", Cmds) & (count(I, "shield184", Count) | (not(count(I, "shield184", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant184.
-!inspect_nuclear_plant184 : .intend(inspect_nuclear_plant184, I) & (count(I, "shield184", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield184"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant185 : true <- !inspect_nuclear_plant1851. 
+!inspect_nuclear_plant1851 : fast & .intend(inspect_nuclear_plant185, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield185_id176_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield185", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield185", "G(add_belief(perc_rad185(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield185", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield185").
+!inspect_nuclear_plant185 : true <- !inspect_nuclear_plant1851. 
+!inspect_nuclear_plant1851 : true & .intend(inspect_nuclear_plant185, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield185_id177_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield185", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield185", "G(add_belief(perc_rad185(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield185", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield185").
-!inspect_nuclear_plant185 : .intend(inspect_nuclear_plant185, I) & violated(I, "shield185", Cmds) & (count(I, "shield185", Count) | (not(count(I, "shield185", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant185.
-!inspect_nuclear_plant185 : .intend(inspect_nuclear_plant185, I) & (count(I, "shield185", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield185"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant186 : true <- !inspect_nuclear_plant1861. 
+!inspect_nuclear_plant1861 : fast & .intend(inspect_nuclear_plant186, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield186_id178_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield186", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield186", "G(add_belief(perc_rad186(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield186", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield186").
+!inspect_nuclear_plant186 : true <- !inspect_nuclear_plant1861. 
+!inspect_nuclear_plant1861 : true & .intend(inspect_nuclear_plant186, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield186_id179_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield186", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield186", "G(add_belief(perc_rad186(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield186", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield186").
-!inspect_nuclear_plant186 : .intend(inspect_nuclear_plant186, I) & violated(I, "shield186", Cmds) & (count(I, "shield186", Count) | (not(count(I, "shield186", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant186.
-!inspect_nuclear_plant186 : .intend(inspect_nuclear_plant186, I) & (count(I, "shield186", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield186"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant187 : true <- !inspect_nuclear_plant1871. 
+!inspect_nuclear_plant1871 : fast & .intend(inspect_nuclear_plant187, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield187_id180_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield187", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield187", "G(add_belief(perc_rad187(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield187", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield187").
+!inspect_nuclear_plant187 : true <- !inspect_nuclear_plant1871. 
+!inspect_nuclear_plant1871 : true & .intend(inspect_nuclear_plant187, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield187_id181_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield187", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield187", "G(add_belief(perc_rad187(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield187", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield187").
-!inspect_nuclear_plant187 : .intend(inspect_nuclear_plant187, I) & violated(I, "shield187", Cmds) & (count(I, "shield187", Count) | (not(count(I, "shield187", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant187.
-!inspect_nuclear_plant187 : .intend(inspect_nuclear_plant187, I) & (count(I, "shield187", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield187"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant188 : true <- !inspect_nuclear_plant1881. 
+!inspect_nuclear_plant1881 : fast & .intend(inspect_nuclear_plant188, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield188_id182_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield188", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield188", "G(add_belief(perc_rad188(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield188", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield188").
+!inspect_nuclear_plant188 : true <- !inspect_nuclear_plant1881. 
+!inspect_nuclear_plant1881 : true & .intend(inspect_nuclear_plant188, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield188_id183_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield188", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield188", "G(add_belief(perc_rad188(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield188", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield188").
-!inspect_nuclear_plant188 : .intend(inspect_nuclear_plant188, I) & violated(I, "shield188", Cmds) & (count(I, "shield188", Count) | (not(count(I, "shield188", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant188.
-!inspect_nuclear_plant188 : .intend(inspect_nuclear_plant188, I) & (count(I, "shield188", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield188"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant189 : true <- !inspect_nuclear_plant1891. 
+!inspect_nuclear_plant1891 : fast & .intend(inspect_nuclear_plant189, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield189_id184_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield189", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield189", "G(add_belief(perc_rad189(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield189", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield189").
+!inspect_nuclear_plant189 : true <- !inspect_nuclear_plant1891. 
+!inspect_nuclear_plant1891 : true & .intend(inspect_nuclear_plant189, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield189_id185_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield189", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield189", "G(add_belief(perc_rad189(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield189", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield189").
-!inspect_nuclear_plant189 : .intend(inspect_nuclear_plant189, I) & violated(I, "shield189", Cmds) & (count(I, "shield189", Count) | (not(count(I, "shield189", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant189.
-!inspect_nuclear_plant189 : .intend(inspect_nuclear_plant189, I) & (count(I, "shield189", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield189"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant190 : true <- !inspect_nuclear_plant1901. 
+!inspect_nuclear_plant1901 : fast & .intend(inspect_nuclear_plant190, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield190_id186_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield190", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield190", "G(add_belief(perc_rad190(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield190", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield190").
+!inspect_nuclear_plant190 : true <- !inspect_nuclear_plant1901. 
+!inspect_nuclear_plant1901 : true & .intend(inspect_nuclear_plant190, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield190_id187_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield190", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield190", "G(add_belief(perc_rad190(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield190", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield190").
-!inspect_nuclear_plant190 : .intend(inspect_nuclear_plant190, I) & violated(I, "shield190", Cmds) & (count(I, "shield190", Count) | (not(count(I, "shield190", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant190.
-!inspect_nuclear_plant190 : .intend(inspect_nuclear_plant190, I) & (count(I, "shield190", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield190"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant191 : true <- !inspect_nuclear_plant1911. 
+!inspect_nuclear_plant1911 : fast & .intend(inspect_nuclear_plant191, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield191_id188_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield191", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield191", "G(add_belief(perc_rad191(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield191", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield191").
+!inspect_nuclear_plant191 : true <- !inspect_nuclear_plant1911. 
+!inspect_nuclear_plant1911 : true & .intend(inspect_nuclear_plant191, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield191_id189_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield191", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield191", "G(add_belief(perc_rad191(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield191", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield191").
-!inspect_nuclear_plant191 : .intend(inspect_nuclear_plant191, I) & violated(I, "shield191", Cmds) & (count(I, "shield191", Count) | (not(count(I, "shield191", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant191.
-!inspect_nuclear_plant191 : .intend(inspect_nuclear_plant191, I) & (count(I, "shield191", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield191"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant192 : true <- !inspect_nuclear_plant1921. 
+!inspect_nuclear_plant1921 : fast & .intend(inspect_nuclear_plant192, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield192_id190_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield192", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield192", "G(add_belief(perc_rad192(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield192", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield192").
+!inspect_nuclear_plant192 : true <- !inspect_nuclear_plant1921. 
+!inspect_nuclear_plant1921 : true & .intend(inspect_nuclear_plant192, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield192_id191_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield192", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield192", "G(add_belief(perc_rad192(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield192", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield192").
-!inspect_nuclear_plant192 : .intend(inspect_nuclear_plant192, I) & violated(I, "shield192", Cmds) & (count(I, "shield192", Count) | (not(count(I, "shield192", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant192.
-!inspect_nuclear_plant192 : .intend(inspect_nuclear_plant192, I) & (count(I, "shield192", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield192"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant193 : true <- !inspect_nuclear_plant1931. 
+!inspect_nuclear_plant1931 : fast & .intend(inspect_nuclear_plant193, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield193_id192_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield193", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield193", "G(add_belief(perc_rad193(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield193", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield193").
+!inspect_nuclear_plant193 : true <- !inspect_nuclear_plant1931. 
+!inspect_nuclear_plant1931 : true & .intend(inspect_nuclear_plant193, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield193_id193_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield193", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield193", "G(add_belief(perc_rad193(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield193", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield193").
-!inspect_nuclear_plant193 : .intend(inspect_nuclear_plant193, I) & violated(I, "shield193", Cmds) & (count(I, "shield193", Count) | (not(count(I, "shield193", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant193.
-!inspect_nuclear_plant193 : .intend(inspect_nuclear_plant193, I) & (count(I, "shield193", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield193"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant194 : true <- !inspect_nuclear_plant1941. 
+!inspect_nuclear_plant1941 : fast & .intend(inspect_nuclear_plant194, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield194_id194_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield194", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield194", "G(add_belief(perc_rad194(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield194", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield194").
+!inspect_nuclear_plant194 : true <- !inspect_nuclear_plant1941. 
+!inspect_nuclear_plant1941 : true & .intend(inspect_nuclear_plant194, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield194_id195_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield194", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield194", "G(add_belief(perc_rad194(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield194", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield194").
-!inspect_nuclear_plant194 : .intend(inspect_nuclear_plant194, I) & violated(I, "shield194", Cmds) & (count(I, "shield194", Count) | (not(count(I, "shield194", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant194.
-!inspect_nuclear_plant194 : .intend(inspect_nuclear_plant194, I) & (count(I, "shield194", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield194"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant195 : true <- !inspect_nuclear_plant1951. 
+!inspect_nuclear_plant1951 : fast & .intend(inspect_nuclear_plant195, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield195_id196_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield195", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield195", "G(add_belief(perc_rad195(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield195", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield195").
+!inspect_nuclear_plant195 : true <- !inspect_nuclear_plant1951. 
+!inspect_nuclear_plant1951 : true & .intend(inspect_nuclear_plant195, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield195_id197_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield195", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield195", "G(add_belief(perc_rad195(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield195", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield195").
-!inspect_nuclear_plant195 : .intend(inspect_nuclear_plant195, I) & violated(I, "shield195", Cmds) & (count(I, "shield195", Count) | (not(count(I, "shield195", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant195.
-!inspect_nuclear_plant195 : .intend(inspect_nuclear_plant195, I) & (count(I, "shield195", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield195"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant196 : true <- !inspect_nuclear_plant1961. 
+!inspect_nuclear_plant1961 : fast & .intend(inspect_nuclear_plant196, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield196_id198_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield196", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield196", "G(add_belief(perc_rad196(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield196", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield196").
+!inspect_nuclear_plant196 : true <- !inspect_nuclear_plant1961. 
+!inspect_nuclear_plant1961 : true & .intend(inspect_nuclear_plant196, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield196_id199_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield196", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield196", "G(add_belief(perc_rad196(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield196", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield196").
-!inspect_nuclear_plant196 : .intend(inspect_nuclear_plant196, I) & violated(I, "shield196", Cmds) & (count(I, "shield196", Count) | (not(count(I, "shield196", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant196.
-!inspect_nuclear_plant196 : .intend(inspect_nuclear_plant196, I) & (count(I, "shield196", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield196"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant197 : true <- !inspect_nuclear_plant1971. 
+!inspect_nuclear_plant1971 : fast & .intend(inspect_nuclear_plant197, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield197_id200_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield197", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield197", "G(add_belief(perc_rad197(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield197", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield197").
+!inspect_nuclear_plant197 : true <- !inspect_nuclear_plant1971. 
+!inspect_nuclear_plant1971 : true & .intend(inspect_nuclear_plant197, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield197_id201_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield197", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield197", "G(add_belief(perc_rad197(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield197", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield197").
-!inspect_nuclear_plant197 : .intend(inspect_nuclear_plant197, I) & violated(I, "shield197", Cmds) & (count(I, "shield197", Count) | (not(count(I, "shield197", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant197.
-!inspect_nuclear_plant197 : .intend(inspect_nuclear_plant197, I) & (count(I, "shield197", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield197"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant198 : true <- !inspect_nuclear_plant1981. 
+!inspect_nuclear_plant1981 : fast & .intend(inspect_nuclear_plant198, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield198_id202_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield198", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield198", "G(add_belief(perc_rad198(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield198", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield198").
+!inspect_nuclear_plant198 : true <- !inspect_nuclear_plant1981. 
+!inspect_nuclear_plant1981 : true & .intend(inspect_nuclear_plant198, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield198_id203_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield198", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield198", "G(add_belief(perc_rad198(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield198", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield198").
-!inspect_nuclear_plant198 : .intend(inspect_nuclear_plant198, I) & violated(I, "shield198", Cmds) & (count(I, "shield198", Count) | (not(count(I, "shield198", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant198.
-!inspect_nuclear_plant198 : .intend(inspect_nuclear_plant198, I) & (count(I, "shield198", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield198"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant199 : true <- !inspect_nuclear_plant1991. 
+!inspect_nuclear_plant1991 : fast & .intend(inspect_nuclear_plant199, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield199_id204_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield199", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield199", "G(add_belief(perc_rad199(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield199", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield199").
+!inspect_nuclear_plant199 : true <- !inspect_nuclear_plant1991. 
+!inspect_nuclear_plant1991 : true & .intend(inspect_nuclear_plant199, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield199_id205_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield199", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield199", "G(add_belief(perc_rad199(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield199", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield199").
-!inspect_nuclear_plant199 : .intend(inspect_nuclear_plant199, I) & violated(I, "shield199", Cmds) & (count(I, "shield199", Count) | (not(count(I, "shield199", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant199.
-!inspect_nuclear_plant199 : .intend(inspect_nuclear_plant199, I) & (count(I, "shield199", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield199"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant200 : true <- !inspect_nuclear_plant2001. 
+!inspect_nuclear_plant2001 : fast & .intend(inspect_nuclear_plant200, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield200_id206_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield200", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield200", "G(add_belief(perc_rad200(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield200", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield200").
+!inspect_nuclear_plant200 : true <- !inspect_nuclear_plant2001. 
+!inspect_nuclear_plant2001 : true & .intend(inspect_nuclear_plant200, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield200_id207_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield200", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield200", "G(add_belief(perc_rad200(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield200", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield200").
-!inspect_nuclear_plant200 : .intend(inspect_nuclear_plant200, I) & violated(I, "shield200", Cmds) & (count(I, "shield200", Count) | (not(count(I, "shield200", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant200.
-!inspect_nuclear_plant200 : .intend(inspect_nuclear_plant200, I) & (count(I, "shield200", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield200"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant201 : true <- !inspect_nuclear_plant2011. 
+!inspect_nuclear_plant2011 : fast & .intend(inspect_nuclear_plant201, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield201_id208_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield201", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield201", "G(add_belief(perc_rad201(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield201", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield201").
+!inspect_nuclear_plant201 : true <- !inspect_nuclear_plant2011. 
+!inspect_nuclear_plant2011 : true & .intend(inspect_nuclear_plant201, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield201_id209_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield201", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield201", "G(add_belief(perc_rad201(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield201", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield201").
-!inspect_nuclear_plant201 : .intend(inspect_nuclear_plant201, I) & violated(I, "shield201", Cmds) & (count(I, "shield201", Count) | (not(count(I, "shield201", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant201.
-!inspect_nuclear_plant201 : .intend(inspect_nuclear_plant201, I) & (count(I, "shield201", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield201"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant202 : true <- !inspect_nuclear_plant2021. 
+!inspect_nuclear_plant2021 : fast & .intend(inspect_nuclear_plant202, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield202_id210_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield202", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield202", "G(add_belief(perc_rad202(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield202", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield202").
+!inspect_nuclear_plant202 : true <- !inspect_nuclear_plant2021. 
+!inspect_nuclear_plant2021 : true & .intend(inspect_nuclear_plant202, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield202_id211_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield202", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield202", "G(add_belief(perc_rad202(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield202", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield202").
-!inspect_nuclear_plant202 : .intend(inspect_nuclear_plant202, I) & violated(I, "shield202", Cmds) & (count(I, "shield202", Count) | (not(count(I, "shield202", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant202.
-!inspect_nuclear_plant202 : .intend(inspect_nuclear_plant202, I) & (count(I, "shield202", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield202"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant203 : true <- !inspect_nuclear_plant2031. 
+!inspect_nuclear_plant2031 : fast & .intend(inspect_nuclear_plant203, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield203_id212_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield203", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield203", "G(add_belief(perc_rad203(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield203", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield203").
+!inspect_nuclear_plant203 : true <- !inspect_nuclear_plant2031. 
+!inspect_nuclear_plant2031 : true & .intend(inspect_nuclear_plant203, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield203_id213_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield203", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield203", "G(add_belief(perc_rad203(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield203", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield203").
-!inspect_nuclear_plant203 : .intend(inspect_nuclear_plant203, I) & violated(I, "shield203", Cmds) & (count(I, "shield203", Count) | (not(count(I, "shield203", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant203.
-!inspect_nuclear_plant203 : .intend(inspect_nuclear_plant203, I) & (count(I, "shield203", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield203"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant204 : true <- !inspect_nuclear_plant2041. 
+!inspect_nuclear_plant2041 : fast & .intend(inspect_nuclear_plant204, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield204_id214_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield204", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield204", "G(add_belief(perc_rad204(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield204", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield204").
+!inspect_nuclear_plant204 : true <- !inspect_nuclear_plant2041. 
+!inspect_nuclear_plant2041 : true & .intend(inspect_nuclear_plant204, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield204_id215_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield204", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield204", "G(add_belief(perc_rad204(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield204", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield204").
-!inspect_nuclear_plant204 : .intend(inspect_nuclear_plant204, I) & violated(I, "shield204", Cmds) & (count(I, "shield204", Count) | (not(count(I, "shield204", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant204.
-!inspect_nuclear_plant204 : .intend(inspect_nuclear_plant204, I) & (count(I, "shield204", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield204"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant205 : true <- !inspect_nuclear_plant2051. 
+!inspect_nuclear_plant2051 : fast & .intend(inspect_nuclear_plant205, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield205_id216_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield205", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield205", "G(add_belief(perc_rad205(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield205", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield205").
+!inspect_nuclear_plant205 : true <- !inspect_nuclear_plant2051. 
+!inspect_nuclear_plant2051 : true & .intend(inspect_nuclear_plant205, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield205_id217_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield205", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield205", "G(add_belief(perc_rad205(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield205", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield205").
-!inspect_nuclear_plant205 : .intend(inspect_nuclear_plant205, I) & violated(I, "shield205", Cmds) & (count(I, "shield205", Count) | (not(count(I, "shield205", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant205.
-!inspect_nuclear_plant205 : .intend(inspect_nuclear_plant205, I) & (count(I, "shield205", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield205"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant206 : true <- !inspect_nuclear_plant2061. 
+!inspect_nuclear_plant2061 : fast & .intend(inspect_nuclear_plant206, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield206_id218_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield206", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield206", "G(add_belief(perc_rad206(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield206", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield206").
+!inspect_nuclear_plant206 : true <- !inspect_nuclear_plant2061. 
+!inspect_nuclear_plant2061 : true & .intend(inspect_nuclear_plant206, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield206_id219_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield206", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield206", "G(add_belief(perc_rad206(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield206", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield206").
-!inspect_nuclear_plant206 : .intend(inspect_nuclear_plant206, I) & violated(I, "shield206", Cmds) & (count(I, "shield206", Count) | (not(count(I, "shield206", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant206.
-!inspect_nuclear_plant206 : .intend(inspect_nuclear_plant206, I) & (count(I, "shield206", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield206"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant207 : true <- !inspect_nuclear_plant2071. 
+!inspect_nuclear_plant2071 : fast & .intend(inspect_nuclear_plant207, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield207_id220_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield207", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield207", "G(add_belief(perc_rad207(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield207", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield207").
+!inspect_nuclear_plant207 : true <- !inspect_nuclear_plant2071. 
+!inspect_nuclear_plant2071 : true & .intend(inspect_nuclear_plant207, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield207_id221_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield207", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield207", "G(add_belief(perc_rad207(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield207", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield207").
-!inspect_nuclear_plant207 : .intend(inspect_nuclear_plant207, I) & violated(I, "shield207", Cmds) & (count(I, "shield207", Count) | (not(count(I, "shield207", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant207.
-!inspect_nuclear_plant207 : .intend(inspect_nuclear_plant207, I) & (count(I, "shield207", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield207"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant208 : true <- !inspect_nuclear_plant2081. 
+!inspect_nuclear_plant2081 : fast & .intend(inspect_nuclear_plant208, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield208_id222_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield208", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield208", "G(add_belief(perc_rad208(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield208", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield208").
+!inspect_nuclear_plant208 : true <- !inspect_nuclear_plant2081. 
+!inspect_nuclear_plant2081 : true & .intend(inspect_nuclear_plant208, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield208_id223_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield208", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield208", "G(add_belief(perc_rad208(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield208", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield208").
-!inspect_nuclear_plant208 : .intend(inspect_nuclear_plant208, I) & violated(I, "shield208", Cmds) & (count(I, "shield208", Count) | (not(count(I, "shield208", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant208.
-!inspect_nuclear_plant208 : .intend(inspect_nuclear_plant208, I) & (count(I, "shield208", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield208"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant209 : true <- !inspect_nuclear_plant2091. 
+!inspect_nuclear_plant2091 : fast & .intend(inspect_nuclear_plant209, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield209_id224_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield209", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield209", "G(add_belief(perc_rad209(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield209", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield209").
+!inspect_nuclear_plant209 : true <- !inspect_nuclear_plant2091. 
+!inspect_nuclear_plant2091 : true & .intend(inspect_nuclear_plant209, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield209_id225_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield209", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield209", "G(add_belief(perc_rad209(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield209", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield209").
-!inspect_nuclear_plant209 : .intend(inspect_nuclear_plant209, I) & violated(I, "shield209", Cmds) & (count(I, "shield209", Count) | (not(count(I, "shield209", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant209.
-!inspect_nuclear_plant209 : .intend(inspect_nuclear_plant209, I) & (count(I, "shield209", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield209"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant210 : true <- !inspect_nuclear_plant2101. 
+!inspect_nuclear_plant2101 : fast & .intend(inspect_nuclear_plant210, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield210_id226_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield210", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield210", "G(add_belief(perc_rad210(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield210", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield210").
+!inspect_nuclear_plant210 : true <- !inspect_nuclear_plant2101. 
+!inspect_nuclear_plant2101 : true & .intend(inspect_nuclear_plant210, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield210_id227_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield210", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield210", "G(add_belief(perc_rad210(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield210", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield210").
-!inspect_nuclear_plant210 : .intend(inspect_nuclear_plant210, I) & violated(I, "shield210", Cmds) & (count(I, "shield210", Count) | (not(count(I, "shield210", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant210.
-!inspect_nuclear_plant210 : .intend(inspect_nuclear_plant210, I) & (count(I, "shield210", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield210"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant211 : true <- !inspect_nuclear_plant2111. 
+!inspect_nuclear_plant2111 : fast & .intend(inspect_nuclear_plant211, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield211_id228_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield211", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield211", "G(add_belief(perc_rad211(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield211", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield211").
+!inspect_nuclear_plant211 : true <- !inspect_nuclear_plant2111. 
+!inspect_nuclear_plant2111 : true & .intend(inspect_nuclear_plant211, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield211_id229_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield211", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield211", "G(add_belief(perc_rad211(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield211", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield211").
-!inspect_nuclear_plant211 : .intend(inspect_nuclear_plant211, I) & violated(I, "shield211", Cmds) & (count(I, "shield211", Count) | (not(count(I, "shield211", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant211.
-!inspect_nuclear_plant211 : .intend(inspect_nuclear_plant211, I) & (count(I, "shield211", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield211"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant212 : true <- !inspect_nuclear_plant2121. 
+!inspect_nuclear_plant2121 : fast & .intend(inspect_nuclear_plant212, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield212_id230_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield212", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield212", "G(add_belief(perc_rad212(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield212", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield212").
+!inspect_nuclear_plant212 : true <- !inspect_nuclear_plant2121. 
+!inspect_nuclear_plant2121 : true & .intend(inspect_nuclear_plant212, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield212_id231_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield212", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield212", "G(add_belief(perc_rad212(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield212", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield212").
-!inspect_nuclear_plant212 : .intend(inspect_nuclear_plant212, I) & violated(I, "shield212", Cmds) & (count(I, "shield212", Count) | (not(count(I, "shield212", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant212.
-!inspect_nuclear_plant212 : .intend(inspect_nuclear_plant212, I) & (count(I, "shield212", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield212"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant213 : true <- !inspect_nuclear_plant2131. 
+!inspect_nuclear_plant2131 : fast & .intend(inspect_nuclear_plant213, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield213_id232_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield213", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield213", "G(add_belief(perc_rad213(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield213", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield213").
+!inspect_nuclear_plant213 : true <- !inspect_nuclear_plant2131. 
+!inspect_nuclear_plant2131 : true & .intend(inspect_nuclear_plant213, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield213_id233_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield213", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield213", "G(add_belief(perc_rad213(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield213", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield213").
-!inspect_nuclear_plant213 : .intend(inspect_nuclear_plant213, I) & violated(I, "shield213", Cmds) & (count(I, "shield213", Count) | (not(count(I, "shield213", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant213.
-!inspect_nuclear_plant213 : .intend(inspect_nuclear_plant213, I) & (count(I, "shield213", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield213"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant214 : true <- !inspect_nuclear_plant2141. 
+!inspect_nuclear_plant2141 : fast & .intend(inspect_nuclear_plant214, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield214_id234_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield214", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield214", "G(add_belief(perc_rad214(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield214", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield214").
+!inspect_nuclear_plant214 : true <- !inspect_nuclear_plant2141. 
+!inspect_nuclear_plant2141 : true & .intend(inspect_nuclear_plant214, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield214_id235_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield214", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield214", "G(add_belief(perc_rad214(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield214", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield214").
-!inspect_nuclear_plant214 : .intend(inspect_nuclear_plant214, I) & violated(I, "shield214", Cmds) & (count(I, "shield214", Count) | (not(count(I, "shield214", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant214.
-!inspect_nuclear_plant214 : .intend(inspect_nuclear_plant214, I) & (count(I, "shield214", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield214"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant215 : true <- !inspect_nuclear_plant2151. 
+!inspect_nuclear_plant2151 : fast & .intend(inspect_nuclear_plant215, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield215_id236_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield215", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield215", "G(add_belief(perc_rad215(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield215", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield215").
+!inspect_nuclear_plant215 : true <- !inspect_nuclear_plant2151. 
+!inspect_nuclear_plant2151 : true & .intend(inspect_nuclear_plant215, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield215_id237_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield215", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield215", "G(add_belief(perc_rad215(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield215", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield215").
-!inspect_nuclear_plant215 : .intend(inspect_nuclear_plant215, I) & violated(I, "shield215", Cmds) & (count(I, "shield215", Count) | (not(count(I, "shield215", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant215.
-!inspect_nuclear_plant215 : .intend(inspect_nuclear_plant215, I) & (count(I, "shield215", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield215"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant216 : true <- !inspect_nuclear_plant2161. 
+!inspect_nuclear_plant2161 : fast & .intend(inspect_nuclear_plant216, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield216_id238_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield216", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield216", "G(add_belief(perc_rad216(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield216", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield216").
+!inspect_nuclear_plant216 : true <- !inspect_nuclear_plant2161. 
+!inspect_nuclear_plant2161 : true & .intend(inspect_nuclear_plant216, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield216_id239_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield216", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield216", "G(add_belief(perc_rad216(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield216", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield216").
-!inspect_nuclear_plant216 : .intend(inspect_nuclear_plant216, I) & violated(I, "shield216", Cmds) & (count(I, "shield216", Count) | (not(count(I, "shield216", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant216.
-!inspect_nuclear_plant216 : .intend(inspect_nuclear_plant216, I) & (count(I, "shield216", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield216"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant217 : true <- !inspect_nuclear_plant2171. 
+!inspect_nuclear_plant2171 : fast & .intend(inspect_nuclear_plant217, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield217_id240_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield217", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield217", "G(add_belief(perc_rad217(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield217", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield217").
+!inspect_nuclear_plant217 : true <- !inspect_nuclear_plant2171. 
+!inspect_nuclear_plant2171 : true & .intend(inspect_nuclear_plant217, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield217_id241_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield217", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield217", "G(add_belief(perc_rad217(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield217", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield217").
-!inspect_nuclear_plant217 : .intend(inspect_nuclear_plant217, I) & violated(I, "shield217", Cmds) & (count(I, "shield217", Count) | (not(count(I, "shield217", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant217.
-!inspect_nuclear_plant217 : .intend(inspect_nuclear_plant217, I) & (count(I, "shield217", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield217"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant218 : true <- !inspect_nuclear_plant2181. 
+!inspect_nuclear_plant2181 : fast & .intend(inspect_nuclear_plant218, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield218_id242_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield218", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield218", "G(add_belief(perc_rad218(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield218", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield218").
+!inspect_nuclear_plant218 : true <- !inspect_nuclear_plant2181. 
+!inspect_nuclear_plant2181 : true & .intend(inspect_nuclear_plant218, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield218_id243_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield218", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield218", "G(add_belief(perc_rad218(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield218", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield218").
-!inspect_nuclear_plant218 : .intend(inspect_nuclear_plant218, I) & violated(I, "shield218", Cmds) & (count(I, "shield218", Count) | (not(count(I, "shield218", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant218.
-!inspect_nuclear_plant218 : .intend(inspect_nuclear_plant218, I) & (count(I, "shield218", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield218"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant219 : true <- !inspect_nuclear_plant2191. 
+!inspect_nuclear_plant2191 : fast & .intend(inspect_nuclear_plant219, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield219_id244_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield219", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield219", "G(add_belief(perc_rad219(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield219", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield219").
+!inspect_nuclear_plant219 : true <- !inspect_nuclear_plant2191. 
+!inspect_nuclear_plant2191 : true & .intend(inspect_nuclear_plant219, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield219_id245_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield219", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield219", "G(add_belief(perc_rad219(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield219", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield219").
-!inspect_nuclear_plant219 : .intend(inspect_nuclear_plant219, I) & violated(I, "shield219", Cmds) & (count(I, "shield219", Count) | (not(count(I, "shield219", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant219.
-!inspect_nuclear_plant219 : .intend(inspect_nuclear_plant219, I) & (count(I, "shield219", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield219"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant220 : true <- !inspect_nuclear_plant2201. 
+!inspect_nuclear_plant2201 : fast & .intend(inspect_nuclear_plant220, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield220_id246_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield220", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield220", "G(add_belief(perc_rad220(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield220", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield220").
+!inspect_nuclear_plant220 : true <- !inspect_nuclear_plant2201. 
+!inspect_nuclear_plant2201 : true & .intend(inspect_nuclear_plant220, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield220_id247_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield220", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield220", "G(add_belief(perc_rad220(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield220", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield220").
-!inspect_nuclear_plant220 : .intend(inspect_nuclear_plant220, I) & violated(I, "shield220", Cmds) & (count(I, "shield220", Count) | (not(count(I, "shield220", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant220.
-!inspect_nuclear_plant220 : .intend(inspect_nuclear_plant220, I) & (count(I, "shield220", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield220"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant221 : true <- !inspect_nuclear_plant2211. 
+!inspect_nuclear_plant2211 : fast & .intend(inspect_nuclear_plant221, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield221_id248_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield221", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield221", "G(add_belief(perc_rad221(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield221", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield221").
+!inspect_nuclear_plant221 : true <- !inspect_nuclear_plant2211. 
+!inspect_nuclear_plant2211 : true & .intend(inspect_nuclear_plant221, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield221_id249_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield221", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield221", "G(add_belief(perc_rad221(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield221", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield221").
-!inspect_nuclear_plant221 : .intend(inspect_nuclear_plant221, I) & violated(I, "shield221", Cmds) & (count(I, "shield221", Count) | (not(count(I, "shield221", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant221.
-!inspect_nuclear_plant221 : .intend(inspect_nuclear_plant221, I) & (count(I, "shield221", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield221"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant222 : true <- !inspect_nuclear_plant2221. 
+!inspect_nuclear_plant2221 : fast & .intend(inspect_nuclear_plant222, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield222_id250_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield222", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield222", "G(add_belief(perc_rad222(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield222", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield222").
+!inspect_nuclear_plant222 : true <- !inspect_nuclear_plant2221. 
+!inspect_nuclear_plant2221 : true & .intend(inspect_nuclear_plant222, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield222_id251_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield222", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield222", "G(add_belief(perc_rad222(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield222", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield222").
-!inspect_nuclear_plant222 : .intend(inspect_nuclear_plant222, I) & violated(I, "shield222", Cmds) & (count(I, "shield222", Count) | (not(count(I, "shield222", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant222.
-!inspect_nuclear_plant222 : .intend(inspect_nuclear_plant222, I) & (count(I, "shield222", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield222"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant223 : true <- !inspect_nuclear_plant2231. 
+!inspect_nuclear_plant2231 : fast & .intend(inspect_nuclear_plant223, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield223_id252_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield223", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield223", "G(add_belief(perc_rad223(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield223", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield223").
+!inspect_nuclear_plant223 : true <- !inspect_nuclear_plant2231. 
+!inspect_nuclear_plant2231 : true & .intend(inspect_nuclear_plant223, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield223_id253_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield223", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield223", "G(add_belief(perc_rad223(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield223", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield223").
-!inspect_nuclear_plant223 : .intend(inspect_nuclear_plant223, I) & violated(I, "shield223", Cmds) & (count(I, "shield223", Count) | (not(count(I, "shield223", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant223.
-!inspect_nuclear_plant223 : .intend(inspect_nuclear_plant223, I) & (count(I, "shield223", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield223"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant224 : true <- !inspect_nuclear_plant2241. 
+!inspect_nuclear_plant2241 : fast & .intend(inspect_nuclear_plant224, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield224_id254_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield224", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield224", "G(add_belief(perc_rad224(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield224", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield224").
+!inspect_nuclear_plant224 : true <- !inspect_nuclear_plant2241. 
+!inspect_nuclear_plant2241 : true & .intend(inspect_nuclear_plant224, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield224_id255_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield224", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield224", "G(add_belief(perc_rad224(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield224", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield224").
-!inspect_nuclear_plant224 : .intend(inspect_nuclear_plant224, I) & violated(I, "shield224", Cmds) & (count(I, "shield224", Count) | (not(count(I, "shield224", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant224.
-!inspect_nuclear_plant224 : .intend(inspect_nuclear_plant224, I) & (count(I, "shield224", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield224"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant225 : true <- !inspect_nuclear_plant2251. 
+!inspect_nuclear_plant2251 : fast & .intend(inspect_nuclear_plant225, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield225_id256_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield225", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield225", "G(add_belief(perc_rad225(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield225", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield225").
+!inspect_nuclear_plant225 : true <- !inspect_nuclear_plant2251. 
+!inspect_nuclear_plant2251 : true & .intend(inspect_nuclear_plant225, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield225_id257_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield225", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield225", "G(add_belief(perc_rad225(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield225", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield225").
-!inspect_nuclear_plant225 : .intend(inspect_nuclear_plant225, I) & violated(I, "shield225", Cmds) & (count(I, "shield225", Count) | (not(count(I, "shield225", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant225.
-!inspect_nuclear_plant225 : .intend(inspect_nuclear_plant225, I) & (count(I, "shield225", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield225"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant226 : true <- !inspect_nuclear_plant2261. 
+!inspect_nuclear_plant2261 : fast & .intend(inspect_nuclear_plant226, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield226_id258_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield226", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield226", "G(add_belief(perc_rad226(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield226", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield226").
+!inspect_nuclear_plant226 : true <- !inspect_nuclear_plant2261. 
+!inspect_nuclear_plant2261 : true & .intend(inspect_nuclear_plant226, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield226_id259_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield226", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield226", "G(add_belief(perc_rad226(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield226", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield226").
-!inspect_nuclear_plant226 : .intend(inspect_nuclear_plant226, I) & violated(I, "shield226", Cmds) & (count(I, "shield226", Count) | (not(count(I, "shield226", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant226.
-!inspect_nuclear_plant226 : .intend(inspect_nuclear_plant226, I) & (count(I, "shield226", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield226"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant227 : true <- !inspect_nuclear_plant2271. 
+!inspect_nuclear_plant2271 : fast & .intend(inspect_nuclear_plant227, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield227_id260_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield227", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield227", "G(add_belief(perc_rad227(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield227", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield227").
+!inspect_nuclear_plant227 : true <- !inspect_nuclear_plant2271. 
+!inspect_nuclear_plant2271 : true & .intend(inspect_nuclear_plant227, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield227_id261_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield227", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield227", "G(add_belief(perc_rad227(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield227", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield227").
-!inspect_nuclear_plant227 : .intend(inspect_nuclear_plant227, I) & violated(I, "shield227", Cmds) & (count(I, "shield227", Count) | (not(count(I, "shield227", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant227.
-!inspect_nuclear_plant227 : .intend(inspect_nuclear_plant227, I) & (count(I, "shield227", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield227"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant228 : true <- !inspect_nuclear_plant2281. 
+!inspect_nuclear_plant2281 : fast & .intend(inspect_nuclear_plant228, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield228_id262_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield228", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield228", "G(add_belief(perc_rad228(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield228", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield228").
+!inspect_nuclear_plant228 : true <- !inspect_nuclear_plant2281. 
+!inspect_nuclear_plant2281 : true & .intend(inspect_nuclear_plant228, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield228_id263_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield228", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield228", "G(add_belief(perc_rad228(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield228", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield228").
-!inspect_nuclear_plant228 : .intend(inspect_nuclear_plant228, I) & violated(I, "shield228", Cmds) & (count(I, "shield228", Count) | (not(count(I, "shield228", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant228.
-!inspect_nuclear_plant228 : .intend(inspect_nuclear_plant228, I) & (count(I, "shield228", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield228"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant229 : true <- !inspect_nuclear_plant2291. 
+!inspect_nuclear_plant2291 : fast & .intend(inspect_nuclear_plant229, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield229_id264_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield229", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield229", "G(add_belief(perc_rad229(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield229", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield229").
+!inspect_nuclear_plant229 : true <- !inspect_nuclear_plant2291. 
+!inspect_nuclear_plant2291 : true & .intend(inspect_nuclear_plant229, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield229_id265_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield229", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield229", "G(add_belief(perc_rad229(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield229", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield229").
-!inspect_nuclear_plant229 : .intend(inspect_nuclear_plant229, I) & violated(I, "shield229", Cmds) & (count(I, "shield229", Count) | (not(count(I, "shield229", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant229.
-!inspect_nuclear_plant229 : .intend(inspect_nuclear_plant229, I) & (count(I, "shield229", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield229"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant230 : true <- !inspect_nuclear_plant2301. 
+!inspect_nuclear_plant2301 : fast & .intend(inspect_nuclear_plant230, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield230_id266_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield230", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield230", "G(add_belief(perc_rad230(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield230", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield230").
+!inspect_nuclear_plant230 : true <- !inspect_nuclear_plant2301. 
+!inspect_nuclear_plant2301 : true & .intend(inspect_nuclear_plant230, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield230_id267_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield230", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield230", "G(add_belief(perc_rad230(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield230", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield230").
-!inspect_nuclear_plant230 : .intend(inspect_nuclear_plant230, I) & violated(I, "shield230", Cmds) & (count(I, "shield230", Count) | (not(count(I, "shield230", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant230.
-!inspect_nuclear_plant230 : .intend(inspect_nuclear_plant230, I) & (count(I, "shield230", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield230"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant231 : true <- !inspect_nuclear_plant2311. 
+!inspect_nuclear_plant2311 : fast & .intend(inspect_nuclear_plant231, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield231_id268_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield231", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield231", "G(add_belief(perc_rad231(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield231", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield231").
+!inspect_nuclear_plant231 : true <- !inspect_nuclear_plant2311. 
+!inspect_nuclear_plant2311 : true & .intend(inspect_nuclear_plant231, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield231_id269_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield231", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield231", "G(add_belief(perc_rad231(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield231", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield231").
-!inspect_nuclear_plant231 : .intend(inspect_nuclear_plant231, I) & violated(I, "shield231", Cmds) & (count(I, "shield231", Count) | (not(count(I, "shield231", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant231.
-!inspect_nuclear_plant231 : .intend(inspect_nuclear_plant231, I) & (count(I, "shield231", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield231"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant232 : true <- !inspect_nuclear_plant2321. 
+!inspect_nuclear_plant2321 : fast & .intend(inspect_nuclear_plant232, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield232_id270_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield232", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield232", "G(add_belief(perc_rad232(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield232", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield232").
+!inspect_nuclear_plant232 : true <- !inspect_nuclear_plant2321. 
+!inspect_nuclear_plant2321 : true & .intend(inspect_nuclear_plant232, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield232_id271_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield232", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield232", "G(add_belief(perc_rad232(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield232", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield232").
-!inspect_nuclear_plant232 : .intend(inspect_nuclear_plant232, I) & violated(I, "shield232", Cmds) & (count(I, "shield232", Count) | (not(count(I, "shield232", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant232.
-!inspect_nuclear_plant232 : .intend(inspect_nuclear_plant232, I) & (count(I, "shield232", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield232"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant233 : true <- !inspect_nuclear_plant2331. 
+!inspect_nuclear_plant2331 : fast & .intend(inspect_nuclear_plant233, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield233_id272_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield233", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield233", "G(add_belief(perc_rad233(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield233", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield233").
+!inspect_nuclear_plant233 : true <- !inspect_nuclear_plant2331. 
+!inspect_nuclear_plant2331 : true & .intend(inspect_nuclear_plant233, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield233_id273_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield233", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield233", "G(add_belief(perc_rad233(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield233", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield233").
-!inspect_nuclear_plant233 : .intend(inspect_nuclear_plant233, I) & violated(I, "shield233", Cmds) & (count(I, "shield233", Count) | (not(count(I, "shield233", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant233.
-!inspect_nuclear_plant233 : .intend(inspect_nuclear_plant233, I) & (count(I, "shield233", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield233"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant234 : true <- !inspect_nuclear_plant2341. 
+!inspect_nuclear_plant2341 : fast & .intend(inspect_nuclear_plant234, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield234_id274_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield234", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield234", "G(add_belief(perc_rad234(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield234", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield234").
+!inspect_nuclear_plant234 : true <- !inspect_nuclear_plant2341. 
+!inspect_nuclear_plant2341 : true & .intend(inspect_nuclear_plant234, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield234_id275_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield234", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield234", "G(add_belief(perc_rad234(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield234", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield234").
-!inspect_nuclear_plant234 : .intend(inspect_nuclear_plant234, I) & violated(I, "shield234", Cmds) & (count(I, "shield234", Count) | (not(count(I, "shield234", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant234.
-!inspect_nuclear_plant234 : .intend(inspect_nuclear_plant234, I) & (count(I, "shield234", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield234"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant235 : true <- !inspect_nuclear_plant2351. 
+!inspect_nuclear_plant2351 : fast & .intend(inspect_nuclear_plant235, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield235_id276_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield235", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield235", "G(add_belief(perc_rad235(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield235", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield235").
+!inspect_nuclear_plant235 : true <- !inspect_nuclear_plant2351. 
+!inspect_nuclear_plant2351 : true & .intend(inspect_nuclear_plant235, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield235_id277_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield235", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield235", "G(add_belief(perc_rad235(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield235", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield235").
-!inspect_nuclear_plant235 : .intend(inspect_nuclear_plant235, I) & violated(I, "shield235", Cmds) & (count(I, "shield235", Count) | (not(count(I, "shield235", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant235.
-!inspect_nuclear_plant235 : .intend(inspect_nuclear_plant235, I) & (count(I, "shield235", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield235"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant236 : true <- !inspect_nuclear_plant2361. 
+!inspect_nuclear_plant2361 : fast & .intend(inspect_nuclear_plant236, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield236_id278_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield236", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield236", "G(add_belief(perc_rad236(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield236", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield236").
+!inspect_nuclear_plant236 : true <- !inspect_nuclear_plant2361. 
+!inspect_nuclear_plant2361 : true & .intend(inspect_nuclear_plant236, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield236_id279_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield236", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield236", "G(add_belief(perc_rad236(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield236", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield236").
-!inspect_nuclear_plant236 : .intend(inspect_nuclear_plant236, I) & violated(I, "shield236", Cmds) & (count(I, "shield236", Count) | (not(count(I, "shield236", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant236.
-!inspect_nuclear_plant236 : .intend(inspect_nuclear_plant236, I) & (count(I, "shield236", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield236"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant237 : true <- !inspect_nuclear_plant2371. 
+!inspect_nuclear_plant2371 : fast & .intend(inspect_nuclear_plant237, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield237_id280_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield237", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield237", "G(add_belief(perc_rad237(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield237", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield237").
+!inspect_nuclear_plant237 : true <- !inspect_nuclear_plant2371. 
+!inspect_nuclear_plant2371 : true & .intend(inspect_nuclear_plant237, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield237_id281_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield237", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield237", "G(add_belief(perc_rad237(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield237", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield237").
-!inspect_nuclear_plant237 : .intend(inspect_nuclear_plant237, I) & violated(I, "shield237", Cmds) & (count(I, "shield237", Count) | (not(count(I, "shield237", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant237.
-!inspect_nuclear_plant237 : .intend(inspect_nuclear_plant237, I) & (count(I, "shield237", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield237"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant238 : true <- !inspect_nuclear_plant2381. 
+!inspect_nuclear_plant2381 : fast & .intend(inspect_nuclear_plant238, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield238_id282_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield238", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield238", "G(add_belief(perc_rad238(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield238", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield238").
+!inspect_nuclear_plant238 : true <- !inspect_nuclear_plant2381. 
+!inspect_nuclear_plant2381 : true & .intend(inspect_nuclear_plant238, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield238_id283_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield238", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield238", "G(add_belief(perc_rad238(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield238", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield238").
-!inspect_nuclear_plant238 : .intend(inspect_nuclear_plant238, I) & violated(I, "shield238", Cmds) & (count(I, "shield238", Count) | (not(count(I, "shield238", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant238.
-!inspect_nuclear_plant238 : .intend(inspect_nuclear_plant238, I) & (count(I, "shield238", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield238"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant239 : true <- !inspect_nuclear_plant2391. 
+!inspect_nuclear_plant2391 : fast & .intend(inspect_nuclear_plant239, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield239_id284_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield239", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield239", "G(add_belief(perc_rad239(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield239", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield239").
+!inspect_nuclear_plant239 : true <- !inspect_nuclear_plant2391. 
+!inspect_nuclear_plant2391 : true & .intend(inspect_nuclear_plant239, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield239_id285_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield239", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield239", "G(add_belief(perc_rad239(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield239", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield239").
-!inspect_nuclear_plant239 : .intend(inspect_nuclear_plant239, I) & violated(I, "shield239", Cmds) & (count(I, "shield239", Count) | (not(count(I, "shield239", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant239.
-!inspect_nuclear_plant239 : .intend(inspect_nuclear_plant239, I) & (count(I, "shield239", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield239"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant240 : true <- !inspect_nuclear_plant2401. 
+!inspect_nuclear_plant2401 : fast & .intend(inspect_nuclear_plant240, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield240_id286_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield240", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield240", "G(add_belief(perc_rad240(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield240", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield240").
+!inspect_nuclear_plant240 : true <- !inspect_nuclear_plant2401. 
+!inspect_nuclear_plant2401 : true & .intend(inspect_nuclear_plant240, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield240_id287_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield240", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield240", "G(add_belief(perc_rad240(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield240", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield240").
-!inspect_nuclear_plant240 : .intend(inspect_nuclear_plant240, I) & violated(I, "shield240", Cmds) & (count(I, "shield240", Count) | (not(count(I, "shield240", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant240.
-!inspect_nuclear_plant240 : .intend(inspect_nuclear_plant240, I) & (count(I, "shield240", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield240"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant241 : true <- !inspect_nuclear_plant2411. 
+!inspect_nuclear_plant2411 : fast & .intend(inspect_nuclear_plant241, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield241_id288_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield241", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield241", "G(add_belief(perc_rad241(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield241", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield241").
+!inspect_nuclear_plant241 : true <- !inspect_nuclear_plant2411. 
+!inspect_nuclear_plant2411 : true & .intend(inspect_nuclear_plant241, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield241_id289_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield241", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield241", "G(add_belief(perc_rad241(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield241", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield241").
-!inspect_nuclear_plant241 : .intend(inspect_nuclear_plant241, I) & violated(I, "shield241", Cmds) & (count(I, "shield241", Count) | (not(count(I, "shield241", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant241.
-!inspect_nuclear_plant241 : .intend(inspect_nuclear_plant241, I) & (count(I, "shield241", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield241"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant242 : true <- !inspect_nuclear_plant2421. 
+!inspect_nuclear_plant2421 : fast & .intend(inspect_nuclear_plant242, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield242_id290_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield242", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield242", "G(add_belief(perc_rad242(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield242", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield242").
+!inspect_nuclear_plant242 : true <- !inspect_nuclear_plant2421. 
+!inspect_nuclear_plant2421 : true & .intend(inspect_nuclear_plant242, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield242_id291_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield242", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield242", "G(add_belief(perc_rad242(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield242", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield242").
-!inspect_nuclear_plant242 : .intend(inspect_nuclear_plant242, I) & violated(I, "shield242", Cmds) & (count(I, "shield242", Count) | (not(count(I, "shield242", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant242.
-!inspect_nuclear_plant242 : .intend(inspect_nuclear_plant242, I) & (count(I, "shield242", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield242"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant243 : true <- !inspect_nuclear_plant2431. 
+!inspect_nuclear_plant2431 : fast & .intend(inspect_nuclear_plant243, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield243_id292_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield243", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield243", "G(add_belief(perc_rad243(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield243", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield243").
+!inspect_nuclear_plant243 : true <- !inspect_nuclear_plant2431. 
+!inspect_nuclear_plant2431 : true & .intend(inspect_nuclear_plant243, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield243_id293_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield243", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield243", "G(add_belief(perc_rad243(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield243", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield243").
-!inspect_nuclear_plant243 : .intend(inspect_nuclear_plant243, I) & violated(I, "shield243", Cmds) & (count(I, "shield243", Count) | (not(count(I, "shield243", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant243.
-!inspect_nuclear_plant243 : .intend(inspect_nuclear_plant243, I) & (count(I, "shield243", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield243"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant244 : true <- !inspect_nuclear_plant2441. 
+!inspect_nuclear_plant2441 : fast & .intend(inspect_nuclear_plant244, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield244_id294_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield244", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield244", "G(add_belief(perc_rad244(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield244", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield244").
+!inspect_nuclear_plant244 : true <- !inspect_nuclear_plant2441. 
+!inspect_nuclear_plant2441 : true & .intend(inspect_nuclear_plant244, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield244_id295_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield244", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield244", "G(add_belief(perc_rad244(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield244", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield244").
-!inspect_nuclear_plant244 : .intend(inspect_nuclear_plant244, I) & violated(I, "shield244", Cmds) & (count(I, "shield244", Count) | (not(count(I, "shield244", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant244.
-!inspect_nuclear_plant244 : .intend(inspect_nuclear_plant244, I) & (count(I, "shield244", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield244"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant245 : true <- !inspect_nuclear_plant2451. 
+!inspect_nuclear_plant2451 : fast & .intend(inspect_nuclear_plant245, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield245_id296_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield245", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield245", "G(add_belief(perc_rad245(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield245", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield245").
+!inspect_nuclear_plant245 : true <- !inspect_nuclear_plant2451. 
+!inspect_nuclear_plant2451 : true & .intend(inspect_nuclear_plant245, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield245_id297_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield245", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield245", "G(add_belief(perc_rad245(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield245", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield245").
-!inspect_nuclear_plant245 : .intend(inspect_nuclear_plant245, I) & violated(I, "shield245", Cmds) & (count(I, "shield245", Count) | (not(count(I, "shield245", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant245.
-!inspect_nuclear_plant245 : .intend(inspect_nuclear_plant245, I) & (count(I, "shield245", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield245"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant246 : true <- !inspect_nuclear_plant2461. 
+!inspect_nuclear_plant2461 : fast & .intend(inspect_nuclear_plant246, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield246_id298_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield246", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield246", "G(add_belief(perc_rad246(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield246", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield246").
+!inspect_nuclear_plant246 : true <- !inspect_nuclear_plant2461. 
+!inspect_nuclear_plant2461 : true & .intend(inspect_nuclear_plant246, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield246_id299_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield246", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield246", "G(add_belief(perc_rad246(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield246", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield246").
-!inspect_nuclear_plant246 : .intend(inspect_nuclear_plant246, I) & violated(I, "shield246", Cmds) & (count(I, "shield246", Count) | (not(count(I, "shield246", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant246.
-!inspect_nuclear_plant246 : .intend(inspect_nuclear_plant246, I) & (count(I, "shield246", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield246"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant247 : true <- !inspect_nuclear_plant2471. 
+!inspect_nuclear_plant2471 : fast & .intend(inspect_nuclear_plant247, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield247_id300_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield247", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield247", "G(add_belief(perc_rad247(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield247", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield247").
+!inspect_nuclear_plant247 : true <- !inspect_nuclear_plant2471. 
+!inspect_nuclear_plant2471 : true & .intend(inspect_nuclear_plant247, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield247_id301_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield247", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield247", "G(add_belief(perc_rad247(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield247", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield247").
-!inspect_nuclear_plant247 : .intend(inspect_nuclear_plant247, I) & violated(I, "shield247", Cmds) & (count(I, "shield247", Count) | (not(count(I, "shield247", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant247.
-!inspect_nuclear_plant247 : .intend(inspect_nuclear_plant247, I) & (count(I, "shield247", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield247"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant248 : true <- !inspect_nuclear_plant2481. 
+!inspect_nuclear_plant2481 : fast & .intend(inspect_nuclear_plant248, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield248_id302_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield248", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield248", "G(add_belief(perc_rad248(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield248", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield248").
+!inspect_nuclear_plant248 : true <- !inspect_nuclear_plant2481. 
+!inspect_nuclear_plant2481 : true & .intend(inspect_nuclear_plant248, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield248_id303_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield248", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield248", "G(add_belief(perc_rad248(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield248", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield248").
-!inspect_nuclear_plant248 : .intend(inspect_nuclear_plant248, I) & violated(I, "shield248", Cmds) & (count(I, "shield248", Count) | (not(count(I, "shield248", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant248.
-!inspect_nuclear_plant248 : .intend(inspect_nuclear_plant248, I) & (count(I, "shield248", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield248"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant249 : true <- !inspect_nuclear_plant2491. 
+!inspect_nuclear_plant2491 : fast & .intend(inspect_nuclear_plant249, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield249_id304_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield249", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield249", "G(add_belief(perc_rad249(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield249", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield249").
+!inspect_nuclear_plant249 : true <- !inspect_nuclear_plant2491. 
+!inspect_nuclear_plant2491 : true & .intend(inspect_nuclear_plant249, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield249_id305_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield249", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield249", "G(add_belief(perc_rad249(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield249", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield249").
-!inspect_nuclear_plant249 : .intend(inspect_nuclear_plant249, I) & violated(I, "shield249", Cmds) & (count(I, "shield249", Count) | (not(count(I, "shield249", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant249.
-!inspect_nuclear_plant249 : .intend(inspect_nuclear_plant249, I) & (count(I, "shield249", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield249"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant250 : true <- !inspect_nuclear_plant2501. 
+!inspect_nuclear_plant2501 : fast & .intend(inspect_nuclear_plant250, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield250_id306_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield250", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield250", "G(add_belief(perc_rad250(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield250", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield250").
+!inspect_nuclear_plant250 : true <- !inspect_nuclear_plant2501. 
+!inspect_nuclear_plant2501 : true & .intend(inspect_nuclear_plant250, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield250_id307_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield250", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield250", "G(add_belief(perc_rad250(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield250", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield250").
-!inspect_nuclear_plant250 : .intend(inspect_nuclear_plant250, I) & violated(I, "shield250", Cmds) & (count(I, "shield250", Count) | (not(count(I, "shield250", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant250.
-!inspect_nuclear_plant250 : .intend(inspect_nuclear_plant250, I) & (count(I, "shield250", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield250"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant251 : true <- !inspect_nuclear_plant2511. 
+!inspect_nuclear_plant2511 : fast & .intend(inspect_nuclear_plant251, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield251_id308_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield251", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield251", "G(add_belief(perc_rad251(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield251", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield251").
+!inspect_nuclear_plant251 : true <- !inspect_nuclear_plant2511. 
+!inspect_nuclear_plant2511 : true & .intend(inspect_nuclear_plant251, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield251_id309_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield251", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield251", "G(add_belief(perc_rad251(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield251", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield251").
-!inspect_nuclear_plant251 : .intend(inspect_nuclear_plant251, I) & violated(I, "shield251", Cmds) & (count(I, "shield251", Count) | (not(count(I, "shield251", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant251.
-!inspect_nuclear_plant251 : .intend(inspect_nuclear_plant251, I) & (count(I, "shield251", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield251"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant252 : true <- !inspect_nuclear_plant2521. 
+!inspect_nuclear_plant2521 : fast & .intend(inspect_nuclear_plant252, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield252_id310_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield252", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield252", "G(add_belief(perc_rad252(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield252", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield252").
+!inspect_nuclear_plant252 : true <- !inspect_nuclear_plant2521. 
+!inspect_nuclear_plant2521 : true & .intend(inspect_nuclear_plant252, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield252_id311_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield252", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield252", "G(add_belief(perc_rad252(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield252", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield252").
-!inspect_nuclear_plant252 : .intend(inspect_nuclear_plant252, I) & violated(I, "shield252", Cmds) & (count(I, "shield252", Count) | (not(count(I, "shield252", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant252.
-!inspect_nuclear_plant252 : .intend(inspect_nuclear_plant252, I) & (count(I, "shield252", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield252"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant253 : true <- !inspect_nuclear_plant2531. 
+!inspect_nuclear_plant2531 : fast & .intend(inspect_nuclear_plant253, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield253_id312_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield253", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield253", "G(add_belief(perc_rad253(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield253", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield253").
+!inspect_nuclear_plant253 : true <- !inspect_nuclear_plant2531. 
+!inspect_nuclear_plant2531 : true & .intend(inspect_nuclear_plant253, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield253_id313_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield253", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield253", "G(add_belief(perc_rad253(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield253", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield253").
-!inspect_nuclear_plant253 : .intend(inspect_nuclear_plant253, I) & violated(I, "shield253", Cmds) & (count(I, "shield253", Count) | (not(count(I, "shield253", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant253.
-!inspect_nuclear_plant253 : .intend(inspect_nuclear_plant253, I) & (count(I, "shield253", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield253"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant254 : true <- !inspect_nuclear_plant2541. 
+!inspect_nuclear_plant2541 : fast & .intend(inspect_nuclear_plant254, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield254_id314_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield254", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield254", "G(add_belief(perc_rad254(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield254", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield254").
+!inspect_nuclear_plant254 : true <- !inspect_nuclear_plant2541. 
+!inspect_nuclear_plant2541 : true & .intend(inspect_nuclear_plant254, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield254_id315_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield254", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield254", "G(add_belief(perc_rad254(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield254", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield254").
-!inspect_nuclear_plant254 : .intend(inspect_nuclear_plant254, I) & violated(I, "shield254", Cmds) & (count(I, "shield254", Count) | (not(count(I, "shield254", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant254.
-!inspect_nuclear_plant254 : .intend(inspect_nuclear_plant254, I) & (count(I, "shield254", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield254"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant255 : true <- !inspect_nuclear_plant2551. 
+!inspect_nuclear_plant2551 : fast & .intend(inspect_nuclear_plant255, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield255_id316_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield255", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield255", "G(add_belief(perc_rad255(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield255", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield255").
+!inspect_nuclear_plant255 : true <- !inspect_nuclear_plant2551. 
+!inspect_nuclear_plant2551 : true & .intend(inspect_nuclear_plant255, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield255_id317_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield255", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield255", "G(add_belief(perc_rad255(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield255", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield255").
-!inspect_nuclear_plant255 : .intend(inspect_nuclear_plant255, I) & violated(I, "shield255", Cmds) & (count(I, "shield255", Count) | (not(count(I, "shield255", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant255.
-!inspect_nuclear_plant255 : .intend(inspect_nuclear_plant255, I) & (count(I, "shield255", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield255"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant256 : true <- !inspect_nuclear_plant2561. 
+!inspect_nuclear_plant2561 : fast & .intend(inspect_nuclear_plant256, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield256_id318_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield256", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield256", "G(add_belief(perc_rad256(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield256", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield256").
+!inspect_nuclear_plant256 : true <- !inspect_nuclear_plant2561. 
+!inspect_nuclear_plant2561 : true & .intend(inspect_nuclear_plant256, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield256_id319_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield256", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield256", "G(add_belief(perc_rad256(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield256", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield256").
-!inspect_nuclear_plant256 : .intend(inspect_nuclear_plant256, I) & violated(I, "shield256", Cmds) & (count(I, "shield256", Count) | (not(count(I, "shield256", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant256.
-!inspect_nuclear_plant256 : .intend(inspect_nuclear_plant256, I) & (count(I, "shield256", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield256"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant257 : true <- !inspect_nuclear_plant2571. 
+!inspect_nuclear_plant2571 : fast & .intend(inspect_nuclear_plant257, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield257_id320_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield257", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield257", "G(add_belief(perc_rad257(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield257", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield257").
+!inspect_nuclear_plant257 : true <- !inspect_nuclear_plant2571. 
+!inspect_nuclear_plant2571 : true & .intend(inspect_nuclear_plant257, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield257_id321_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield257", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield257", "G(add_belief(perc_rad257(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield257", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield257").
-!inspect_nuclear_plant257 : .intend(inspect_nuclear_plant257, I) & violated(I, "shield257", Cmds) & (count(I, "shield257", Count) | (not(count(I, "shield257", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant257.
-!inspect_nuclear_plant257 : .intend(inspect_nuclear_plant257, I) & (count(I, "shield257", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield257"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant258 : true <- !inspect_nuclear_plant2581. 
+!inspect_nuclear_plant2581 : fast & .intend(inspect_nuclear_plant258, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield258_id322_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield258", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield258", "G(add_belief(perc_rad258(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield258", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield258").
+!inspect_nuclear_plant258 : true <- !inspect_nuclear_plant2581. 
+!inspect_nuclear_plant2581 : true & .intend(inspect_nuclear_plant258, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield258_id323_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield258", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield258", "G(add_belief(perc_rad258(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield258", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield258").
-!inspect_nuclear_plant258 : .intend(inspect_nuclear_plant258, I) & violated(I, "shield258", Cmds) & (count(I, "shield258", Count) | (not(count(I, "shield258", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant258.
-!inspect_nuclear_plant258 : .intend(inspect_nuclear_plant258, I) & (count(I, "shield258", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield258"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant259 : true <- !inspect_nuclear_plant2591. 
+!inspect_nuclear_plant2591 : fast & .intend(inspect_nuclear_plant259, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield259_id324_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield259", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield259", "G(add_belief(perc_rad259(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield259", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield259").
+!inspect_nuclear_plant259 : true <- !inspect_nuclear_plant2591. 
+!inspect_nuclear_plant2591 : true & .intend(inspect_nuclear_plant259, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield259_id325_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield259", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield259", "G(add_belief(perc_rad259(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield259", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield259").
-!inspect_nuclear_plant259 : .intend(inspect_nuclear_plant259, I) & violated(I, "shield259", Cmds) & (count(I, "shield259", Count) | (not(count(I, "shield259", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant259.
-!inspect_nuclear_plant259 : .intend(inspect_nuclear_plant259, I) & (count(I, "shield259", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield259"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant260 : true <- !inspect_nuclear_plant2601. 
+!inspect_nuclear_plant2601 : fast & .intend(inspect_nuclear_plant260, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield260_id326_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield260", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield260", "G(add_belief(perc_rad260(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield260", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield260").
+!inspect_nuclear_plant260 : true <- !inspect_nuclear_plant2601. 
+!inspect_nuclear_plant2601 : true & .intend(inspect_nuclear_plant260, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield260_id327_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield260", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield260", "G(add_belief(perc_rad260(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield260", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield260").
-!inspect_nuclear_plant260 : .intend(inspect_nuclear_plant260, I) & violated(I, "shield260", Cmds) & (count(I, "shield260", Count) | (not(count(I, "shield260", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant260.
-!inspect_nuclear_plant260 : .intend(inspect_nuclear_plant260, I) & (count(I, "shield260", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield260"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant261 : true <- !inspect_nuclear_plant2611. 
+!inspect_nuclear_plant2611 : fast & .intend(inspect_nuclear_plant261, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield261_id328_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield261", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield261", "G(add_belief(perc_rad261(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield261", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield261").
+!inspect_nuclear_plant261 : true <- !inspect_nuclear_plant2611. 
+!inspect_nuclear_plant2611 : true & .intend(inspect_nuclear_plant261, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield261_id329_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield261", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield261", "G(add_belief(perc_rad261(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield261", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield261").
-!inspect_nuclear_plant261 : .intend(inspect_nuclear_plant261, I) & violated(I, "shield261", Cmds) & (count(I, "shield261", Count) | (not(count(I, "shield261", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant261.
-!inspect_nuclear_plant261 : .intend(inspect_nuclear_plant261, I) & (count(I, "shield261", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield261"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant262 : true <- !inspect_nuclear_plant2621. 
+!inspect_nuclear_plant2621 : fast & .intend(inspect_nuclear_plant262, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield262_id330_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield262", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield262", "G(add_belief(perc_rad262(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield262", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield262").
+!inspect_nuclear_plant262 : true <- !inspect_nuclear_plant2621. 
+!inspect_nuclear_plant2621 : true & .intend(inspect_nuclear_plant262, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield262_id331_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield262", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield262", "G(add_belief(perc_rad262(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield262", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield262").
-!inspect_nuclear_plant262 : .intend(inspect_nuclear_plant262, I) & violated(I, "shield262", Cmds) & (count(I, "shield262", Count) | (not(count(I, "shield262", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant262.
-!inspect_nuclear_plant262 : .intend(inspect_nuclear_plant262, I) & (count(I, "shield262", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield262"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant263 : true <- !inspect_nuclear_plant2631. 
+!inspect_nuclear_plant2631 : fast & .intend(inspect_nuclear_plant263, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield263_id332_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield263", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield263", "G(add_belief(perc_rad263(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield263", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield263").
+!inspect_nuclear_plant263 : true <- !inspect_nuclear_plant2631. 
+!inspect_nuclear_plant2631 : true & .intend(inspect_nuclear_plant263, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield263_id333_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield263", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield263", "G(add_belief(perc_rad263(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield263", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield263").
-!inspect_nuclear_plant263 : .intend(inspect_nuclear_plant263, I) & violated(I, "shield263", Cmds) & (count(I, "shield263", Count) | (not(count(I, "shield263", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant263.
-!inspect_nuclear_plant263 : .intend(inspect_nuclear_plant263, I) & (count(I, "shield263", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield263"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant264 : true <- !inspect_nuclear_plant2641. 
+!inspect_nuclear_plant2641 : fast & .intend(inspect_nuclear_plant264, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield264_id334_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield264", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield264", "G(add_belief(perc_rad264(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield264", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield264").
+!inspect_nuclear_plant264 : true <- !inspect_nuclear_plant2641. 
+!inspect_nuclear_plant2641 : true & .intend(inspect_nuclear_plant264, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield264_id335_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield264", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield264", "G(add_belief(perc_rad264(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield264", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield264").
-!inspect_nuclear_plant264 : .intend(inspect_nuclear_plant264, I) & violated(I, "shield264", Cmds) & (count(I, "shield264", Count) | (not(count(I, "shield264", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant264.
-!inspect_nuclear_plant264 : .intend(inspect_nuclear_plant264, I) & (count(I, "shield264", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield264"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant265 : true <- !inspect_nuclear_plant2651. 
+!inspect_nuclear_plant2651 : fast & .intend(inspect_nuclear_plant265, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield265_id336_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield265", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield265", "G(add_belief(perc_rad265(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield265", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield265").
+!inspect_nuclear_plant265 : true <- !inspect_nuclear_plant2651. 
+!inspect_nuclear_plant2651 : true & .intend(inspect_nuclear_plant265, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield265_id337_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield265", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield265", "G(add_belief(perc_rad265(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield265", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield265").
-!inspect_nuclear_plant265 : .intend(inspect_nuclear_plant265, I) & violated(I, "shield265", Cmds) & (count(I, "shield265", Count) | (not(count(I, "shield265", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant265.
-!inspect_nuclear_plant265 : .intend(inspect_nuclear_plant265, I) & (count(I, "shield265", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield265"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant266 : true <- !inspect_nuclear_plant2661. 
+!inspect_nuclear_plant2661 : fast & .intend(inspect_nuclear_plant266, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield266_id338_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield266", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield266", "G(add_belief(perc_rad266(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield266", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield266").
+!inspect_nuclear_plant266 : true <- !inspect_nuclear_plant2661. 
+!inspect_nuclear_plant2661 : true & .intend(inspect_nuclear_plant266, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield266_id339_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield266", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield266", "G(add_belief(perc_rad266(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield266", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield266").
-!inspect_nuclear_plant266 : .intend(inspect_nuclear_plant266, I) & violated(I, "shield266", Cmds) & (count(I, "shield266", Count) | (not(count(I, "shield266", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant266.
-!inspect_nuclear_plant266 : .intend(inspect_nuclear_plant266, I) & (count(I, "shield266", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield266"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant267 : true <- !inspect_nuclear_plant2671. 
+!inspect_nuclear_plant2671 : fast & .intend(inspect_nuclear_plant267, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield267_id340_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield267", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield267", "G(add_belief(perc_rad267(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield267", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield267").
+!inspect_nuclear_plant267 : true <- !inspect_nuclear_plant2671. 
+!inspect_nuclear_plant2671 : true & .intend(inspect_nuclear_plant267, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield267_id341_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield267", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield267", "G(add_belief(perc_rad267(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield267", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield267").
-!inspect_nuclear_plant267 : .intend(inspect_nuclear_plant267, I) & violated(I, "shield267", Cmds) & (count(I, "shield267", Count) | (not(count(I, "shield267", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant267.
-!inspect_nuclear_plant267 : .intend(inspect_nuclear_plant267, I) & (count(I, "shield267", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield267"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant268 : true <- !inspect_nuclear_plant2681. 
+!inspect_nuclear_plant2681 : fast & .intend(inspect_nuclear_plant268, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield268_id342_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield268", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield268", "G(add_belief(perc_rad268(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield268", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield268").
+!inspect_nuclear_plant268 : true <- !inspect_nuclear_plant2681. 
+!inspect_nuclear_plant2681 : true & .intend(inspect_nuclear_plant268, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield268_id343_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield268", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield268", "G(add_belief(perc_rad268(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield268", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield268").
-!inspect_nuclear_plant268 : .intend(inspect_nuclear_plant268, I) & violated(I, "shield268", Cmds) & (count(I, "shield268", Count) | (not(count(I, "shield268", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant268.
-!inspect_nuclear_plant268 : .intend(inspect_nuclear_plant268, I) & (count(I, "shield268", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield268"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant269 : true <- !inspect_nuclear_plant2691. 
+!inspect_nuclear_plant2691 : fast & .intend(inspect_nuclear_plant269, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield269_id344_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield269", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield269", "G(add_belief(perc_rad269(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield269", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield269").
+!inspect_nuclear_plant269 : true <- !inspect_nuclear_plant2691. 
+!inspect_nuclear_plant2691 : true & .intend(inspect_nuclear_plant269, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield269_id345_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield269", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield269", "G(add_belief(perc_rad269(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield269", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield269").
-!inspect_nuclear_plant269 : .intend(inspect_nuclear_plant269, I) & violated(I, "shield269", Cmds) & (count(I, "shield269", Count) | (not(count(I, "shield269", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant269.
-!inspect_nuclear_plant269 : .intend(inspect_nuclear_plant269, I) & (count(I, "shield269", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield269"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant270 : true <- !inspect_nuclear_plant2701. 
+!inspect_nuclear_plant2701 : fast & .intend(inspect_nuclear_plant270, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield270_id346_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield270", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield270", "G(add_belief(perc_rad270(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield270", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield270").
+!inspect_nuclear_plant270 : true <- !inspect_nuclear_plant2701. 
+!inspect_nuclear_plant2701 : true & .intend(inspect_nuclear_plant270, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield270_id347_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield270", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield270", "G(add_belief(perc_rad270(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield270", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield270").
-!inspect_nuclear_plant270 : .intend(inspect_nuclear_plant270, I) & violated(I, "shield270", Cmds) & (count(I, "shield270", Count) | (not(count(I, "shield270", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant270.
-!inspect_nuclear_plant270 : .intend(inspect_nuclear_plant270, I) & (count(I, "shield270", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield270"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant271 : true <- !inspect_nuclear_plant2711. 
+!inspect_nuclear_plant2711 : fast & .intend(inspect_nuclear_plant271, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield271_id348_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield271", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield271", "G(add_belief(perc_rad271(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield271", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield271").
+!inspect_nuclear_plant271 : true <- !inspect_nuclear_plant2711. 
+!inspect_nuclear_plant2711 : true & .intend(inspect_nuclear_plant271, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield271_id349_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield271", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield271", "G(add_belief(perc_rad271(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield271", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield271").
-!inspect_nuclear_plant271 : .intend(inspect_nuclear_plant271, I) & violated(I, "shield271", Cmds) & (count(I, "shield271", Count) | (not(count(I, "shield271", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant271.
-!inspect_nuclear_plant271 : .intend(inspect_nuclear_plant271, I) & (count(I, "shield271", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield271"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant272 : true <- !inspect_nuclear_plant2721. 
+!inspect_nuclear_plant2721 : fast & .intend(inspect_nuclear_plant272, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield272_id350_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield272", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield272", "G(add_belief(perc_rad272(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield272", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield272").
+!inspect_nuclear_plant272 : true <- !inspect_nuclear_plant2721. 
+!inspect_nuclear_plant2721 : true & .intend(inspect_nuclear_plant272, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield272_id351_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield272", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield272", "G(add_belief(perc_rad272(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield272", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield272").
-!inspect_nuclear_plant272 : .intend(inspect_nuclear_plant272, I) & violated(I, "shield272", Cmds) & (count(I, "shield272", Count) | (not(count(I, "shield272", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant272.
-!inspect_nuclear_plant272 : .intend(inspect_nuclear_plant272, I) & (count(I, "shield272", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield272"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant273 : true <- !inspect_nuclear_plant2731. 
+!inspect_nuclear_plant2731 : fast & .intend(inspect_nuclear_plant273, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield273_id352_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield273", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield273", "G(add_belief(perc_rad273(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield273", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield273").
+!inspect_nuclear_plant273 : true <- !inspect_nuclear_plant2731. 
+!inspect_nuclear_plant2731 : true & .intend(inspect_nuclear_plant273, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield273_id353_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield273", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield273", "G(add_belief(perc_rad273(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield273", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield273").
-!inspect_nuclear_plant273 : .intend(inspect_nuclear_plant273, I) & violated(I, "shield273", Cmds) & (count(I, "shield273", Count) | (not(count(I, "shield273", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant273.
-!inspect_nuclear_plant273 : .intend(inspect_nuclear_plant273, I) & (count(I, "shield273", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield273"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant274 : true <- !inspect_nuclear_plant2741. 
+!inspect_nuclear_plant2741 : fast & .intend(inspect_nuclear_plant274, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield274_id354_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield274", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield274", "G(add_belief(perc_rad274(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield274", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield274").
+!inspect_nuclear_plant274 : true <- !inspect_nuclear_plant2741. 
+!inspect_nuclear_plant2741 : true & .intend(inspect_nuclear_plant274, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield274_id355_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield274", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield274", "G(add_belief(perc_rad274(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield274", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield274").
-!inspect_nuclear_plant274 : .intend(inspect_nuclear_plant274, I) & violated(I, "shield274", Cmds) & (count(I, "shield274", Count) | (not(count(I, "shield274", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant274.
-!inspect_nuclear_plant274 : .intend(inspect_nuclear_plant274, I) & (count(I, "shield274", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield274"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant275 : true <- !inspect_nuclear_plant2751. 
+!inspect_nuclear_plant2751 : fast & .intend(inspect_nuclear_plant275, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield275_id356_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield275", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield275", "G(add_belief(perc_rad275(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield275", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield275").
+!inspect_nuclear_plant275 : true <- !inspect_nuclear_plant2751. 
+!inspect_nuclear_plant2751 : true & .intend(inspect_nuclear_plant275, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield275_id357_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield275", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield275", "G(add_belief(perc_rad275(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield275", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield275").
-!inspect_nuclear_plant275 : .intend(inspect_nuclear_plant275, I) & violated(I, "shield275", Cmds) & (count(I, "shield275", Count) | (not(count(I, "shield275", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant275.
-!inspect_nuclear_plant275 : .intend(inspect_nuclear_plant275, I) & (count(I, "shield275", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield275"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant276 : true <- !inspect_nuclear_plant2761. 
+!inspect_nuclear_plant2761 : fast & .intend(inspect_nuclear_plant276, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield276_id358_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield276", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield276", "G(add_belief(perc_rad276(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield276", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield276").
+!inspect_nuclear_plant276 : true <- !inspect_nuclear_plant2761. 
+!inspect_nuclear_plant2761 : true & .intend(inspect_nuclear_plant276, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield276_id359_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield276", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield276", "G(add_belief(perc_rad276(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield276", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield276").
-!inspect_nuclear_plant276 : .intend(inspect_nuclear_plant276, I) & violated(I, "shield276", Cmds) & (count(I, "shield276", Count) | (not(count(I, "shield276", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant276.
-!inspect_nuclear_plant276 : .intend(inspect_nuclear_plant276, I) & (count(I, "shield276", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield276"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant277 : true <- !inspect_nuclear_plant2771. 
+!inspect_nuclear_plant2771 : fast & .intend(inspect_nuclear_plant277, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield277_id360_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield277", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield277", "G(add_belief(perc_rad277(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield277", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield277").
+!inspect_nuclear_plant277 : true <- !inspect_nuclear_plant2771. 
+!inspect_nuclear_plant2771 : true & .intend(inspect_nuclear_plant277, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield277_id361_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield277", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield277", "G(add_belief(perc_rad277(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield277", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield277").
-!inspect_nuclear_plant277 : .intend(inspect_nuclear_plant277, I) & violated(I, "shield277", Cmds) & (count(I, "shield277", Count) | (not(count(I, "shield277", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant277.
-!inspect_nuclear_plant277 : .intend(inspect_nuclear_plant277, I) & (count(I, "shield277", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield277"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant278 : true <- !inspect_nuclear_plant2781. 
+!inspect_nuclear_plant2781 : fast & .intend(inspect_nuclear_plant278, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield278_id362_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield278", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield278", "G(add_belief(perc_rad278(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield278", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield278").
+!inspect_nuclear_plant278 : true <- !inspect_nuclear_plant2781. 
+!inspect_nuclear_plant2781 : true & .intend(inspect_nuclear_plant278, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield278_id363_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield278", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield278", "G(add_belief(perc_rad278(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield278", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield278").
-!inspect_nuclear_plant278 : .intend(inspect_nuclear_plant278, I) & violated(I, "shield278", Cmds) & (count(I, "shield278", Count) | (not(count(I, "shield278", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant278.
-!inspect_nuclear_plant278 : .intend(inspect_nuclear_plant278, I) & (count(I, "shield278", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield278"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant279 : true <- !inspect_nuclear_plant2791. 
+!inspect_nuclear_plant2791 : fast & .intend(inspect_nuclear_plant279, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield279_id364_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield279", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield279", "G(add_belief(perc_rad279(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield279", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield279").
+!inspect_nuclear_plant279 : true <- !inspect_nuclear_plant2791. 
+!inspect_nuclear_plant2791 : true & .intend(inspect_nuclear_plant279, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield279_id365_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield279", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield279", "G(add_belief(perc_rad279(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield279", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield279").
-!inspect_nuclear_plant279 : .intend(inspect_nuclear_plant279, I) & violated(I, "shield279", Cmds) & (count(I, "shield279", Count) | (not(count(I, "shield279", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant279.
-!inspect_nuclear_plant279 : .intend(inspect_nuclear_plant279, I) & (count(I, "shield279", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield279"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant280 : true <- !inspect_nuclear_plant2801. 
+!inspect_nuclear_plant2801 : fast & .intend(inspect_nuclear_plant280, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield280_id366_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield280", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield280", "G(add_belief(perc_rad280(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield280", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield280").
+!inspect_nuclear_plant280 : true <- !inspect_nuclear_plant2801. 
+!inspect_nuclear_plant2801 : true & .intend(inspect_nuclear_plant280, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield280_id367_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield280", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield280", "G(add_belief(perc_rad280(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield280", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield280").
-!inspect_nuclear_plant280 : .intend(inspect_nuclear_plant280, I) & violated(I, "shield280", Cmds) & (count(I, "shield280", Count) | (not(count(I, "shield280", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant280.
-!inspect_nuclear_plant280 : .intend(inspect_nuclear_plant280, I) & (count(I, "shield280", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield280"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant281 : true <- !inspect_nuclear_plant2811. 
+!inspect_nuclear_plant2811 : fast & .intend(inspect_nuclear_plant281, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield281_id368_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield281", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield281", "G(add_belief(perc_rad281(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield281", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield281").
+!inspect_nuclear_plant281 : true <- !inspect_nuclear_plant2811. 
+!inspect_nuclear_plant2811 : true & .intend(inspect_nuclear_plant281, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield281_id369_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield281", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield281", "G(add_belief(perc_rad281(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield281", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield281").
-!inspect_nuclear_plant281 : .intend(inspect_nuclear_plant281, I) & violated(I, "shield281", Cmds) & (count(I, "shield281", Count) | (not(count(I, "shield281", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant281.
-!inspect_nuclear_plant281 : .intend(inspect_nuclear_plant281, I) & (count(I, "shield281", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield281"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant282 : true <- !inspect_nuclear_plant2821. 
+!inspect_nuclear_plant2821 : fast & .intend(inspect_nuclear_plant282, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield282_id370_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield282", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield282", "G(add_belief(perc_rad282(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield282", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield282").
+!inspect_nuclear_plant282 : true <- !inspect_nuclear_plant2821. 
+!inspect_nuclear_plant2821 : true & .intend(inspect_nuclear_plant282, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield282_id371_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield282", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield282", "G(add_belief(perc_rad282(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield282", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield282").
-!inspect_nuclear_plant282 : .intend(inspect_nuclear_plant282, I) & violated(I, "shield282", Cmds) & (count(I, "shield282", Count) | (not(count(I, "shield282", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant282.
-!inspect_nuclear_plant282 : .intend(inspect_nuclear_plant282, I) & (count(I, "shield282", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield282"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant283 : true <- !inspect_nuclear_plant2831. 
+!inspect_nuclear_plant2831 : fast & .intend(inspect_nuclear_plant283, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield283_id372_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield283", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield283", "G(add_belief(perc_rad283(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield283", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield283").
+!inspect_nuclear_plant283 : true <- !inspect_nuclear_plant2831. 
+!inspect_nuclear_plant2831 : true & .intend(inspect_nuclear_plant283, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield283_id373_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield283", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield283", "G(add_belief(perc_rad283(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield283", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield283").
-!inspect_nuclear_plant283 : .intend(inspect_nuclear_plant283, I) & violated(I, "shield283", Cmds) & (count(I, "shield283", Count) | (not(count(I, "shield283", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant283.
-!inspect_nuclear_plant283 : .intend(inspect_nuclear_plant283, I) & (count(I, "shield283", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield283"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant284 : true <- !inspect_nuclear_plant2841. 
+!inspect_nuclear_plant2841 : fast & .intend(inspect_nuclear_plant284, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield284_id374_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield284", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield284", "G(add_belief(perc_rad284(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield284", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield284").
+!inspect_nuclear_plant284 : true <- !inspect_nuclear_plant2841. 
+!inspect_nuclear_plant2841 : true & .intend(inspect_nuclear_plant284, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield284_id375_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield284", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield284", "G(add_belief(perc_rad284(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield284", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield284").
-!inspect_nuclear_plant284 : .intend(inspect_nuclear_plant284, I) & violated(I, "shield284", Cmds) & (count(I, "shield284", Count) | (not(count(I, "shield284", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant284.
-!inspect_nuclear_plant284 : .intend(inspect_nuclear_plant284, I) & (count(I, "shield284", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield284"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant285 : true <- !inspect_nuclear_plant2851. 
+!inspect_nuclear_plant2851 : fast & .intend(inspect_nuclear_plant285, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield285_id376_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield285", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield285", "G(add_belief(perc_rad285(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield285", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield285").
+!inspect_nuclear_plant285 : true <- !inspect_nuclear_plant2851. 
+!inspect_nuclear_plant2851 : true & .intend(inspect_nuclear_plant285, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield285_id377_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield285", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield285", "G(add_belief(perc_rad285(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield285", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield285").
-!inspect_nuclear_plant285 : .intend(inspect_nuclear_plant285, I) & violated(I, "shield285", Cmds) & (count(I, "shield285", Count) | (not(count(I, "shield285", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant285.
-!inspect_nuclear_plant285 : .intend(inspect_nuclear_plant285, I) & (count(I, "shield285", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield285"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant286 : true <- !inspect_nuclear_plant2861. 
+!inspect_nuclear_plant2861 : fast & .intend(inspect_nuclear_plant286, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield286_id378_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield286", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield286", "G(add_belief(perc_rad286(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield286", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield286").
+!inspect_nuclear_plant286 : true <- !inspect_nuclear_plant2861. 
+!inspect_nuclear_plant2861 : true & .intend(inspect_nuclear_plant286, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield286_id379_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield286", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield286", "G(add_belief(perc_rad286(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield286", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield286").
-!inspect_nuclear_plant286 : .intend(inspect_nuclear_plant286, I) & violated(I, "shield286", Cmds) & (count(I, "shield286", Count) | (not(count(I, "shield286", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant286.
-!inspect_nuclear_plant286 : .intend(inspect_nuclear_plant286, I) & (count(I, "shield286", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield286"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant287 : true <- !inspect_nuclear_plant2871. 
+!inspect_nuclear_plant2871 : fast & .intend(inspect_nuclear_plant287, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield287_id380_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield287", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield287", "G(add_belief(perc_rad287(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield287", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield287").
+!inspect_nuclear_plant287 : true <- !inspect_nuclear_plant2871. 
+!inspect_nuclear_plant2871 : true & .intend(inspect_nuclear_plant287, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield287_id381_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield287", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield287", "G(add_belief(perc_rad287(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield287", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield287").
-!inspect_nuclear_plant287 : .intend(inspect_nuclear_plant287, I) & violated(I, "shield287", Cmds) & (count(I, "shield287", Count) | (not(count(I, "shield287", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant287.
-!inspect_nuclear_plant287 : .intend(inspect_nuclear_plant287, I) & (count(I, "shield287", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield287"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant288 : true <- !inspect_nuclear_plant2881. 
+!inspect_nuclear_plant2881 : fast & .intend(inspect_nuclear_plant288, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield288_id382_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield288", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield288", "G(add_belief(perc_rad288(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield288", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield288").
+!inspect_nuclear_plant288 : true <- !inspect_nuclear_plant2881. 
+!inspect_nuclear_plant2881 : true & .intend(inspect_nuclear_plant288, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield288_id383_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield288", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield288", "G(add_belief(perc_rad288(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield288", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield288").
-!inspect_nuclear_plant288 : .intend(inspect_nuclear_plant288, I) & violated(I, "shield288", Cmds) & (count(I, "shield288", Count) | (not(count(I, "shield288", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant288.
-!inspect_nuclear_plant288 : .intend(inspect_nuclear_plant288, I) & (count(I, "shield288", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield288"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant289 : true <- !inspect_nuclear_plant2891. 
+!inspect_nuclear_plant2891 : fast & .intend(inspect_nuclear_plant289, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield289_id384_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield289", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield289", "G(add_belief(perc_rad289(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield289", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield289").
+!inspect_nuclear_plant289 : true <- !inspect_nuclear_plant2891. 
+!inspect_nuclear_plant2891 : true & .intend(inspect_nuclear_plant289, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield289_id385_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield289", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield289", "G(add_belief(perc_rad289(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield289", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield289").
-!inspect_nuclear_plant289 : .intend(inspect_nuclear_plant289, I) & violated(I, "shield289", Cmds) & (count(I, "shield289", Count) | (not(count(I, "shield289", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant289.
-!inspect_nuclear_plant289 : .intend(inspect_nuclear_plant289, I) & (count(I, "shield289", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield289"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant290 : true <- !inspect_nuclear_plant2901. 
+!inspect_nuclear_plant2901 : fast & .intend(inspect_nuclear_plant290, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield290_id386_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield290", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield290", "G(add_belief(perc_rad290(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield290", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield290").
+!inspect_nuclear_plant290 : true <- !inspect_nuclear_plant2901. 
+!inspect_nuclear_plant2901 : true & .intend(inspect_nuclear_plant290, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield290_id387_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield290", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield290", "G(add_belief(perc_rad290(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield290", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield290").
-!inspect_nuclear_plant290 : .intend(inspect_nuclear_plant290, I) & violated(I, "shield290", Cmds) & (count(I, "shield290", Count) | (not(count(I, "shield290", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant290.
-!inspect_nuclear_plant290 : .intend(inspect_nuclear_plant290, I) & (count(I, "shield290", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield290"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant291 : true <- !inspect_nuclear_plant2911. 
+!inspect_nuclear_plant2911 : fast & .intend(inspect_nuclear_plant291, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield291_id388_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield291", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield291", "G(add_belief(perc_rad291(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield291", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield291").
+!inspect_nuclear_plant291 : true <- !inspect_nuclear_plant2911. 
+!inspect_nuclear_plant2911 : true & .intend(inspect_nuclear_plant291, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield291_id389_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield291", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield291", "G(add_belief(perc_rad291(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield291", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield291").
-!inspect_nuclear_plant291 : .intend(inspect_nuclear_plant291, I) & violated(I, "shield291", Cmds) & (count(I, "shield291", Count) | (not(count(I, "shield291", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant291.
-!inspect_nuclear_plant291 : .intend(inspect_nuclear_plant291, I) & (count(I, "shield291", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield291"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant292 : true <- !inspect_nuclear_plant2921. 
+!inspect_nuclear_plant2921 : fast & .intend(inspect_nuclear_plant292, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield292_id390_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield292", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield292", "G(add_belief(perc_rad292(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield292", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield292").
+!inspect_nuclear_plant292 : true <- !inspect_nuclear_plant2921. 
+!inspect_nuclear_plant2921 : true & .intend(inspect_nuclear_plant292, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield292_id391_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield292", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield292", "G(add_belief(perc_rad292(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield292", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield292").
-!inspect_nuclear_plant292 : .intend(inspect_nuclear_plant292, I) & violated(I, "shield292", Cmds) & (count(I, "shield292", Count) | (not(count(I, "shield292", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant292.
-!inspect_nuclear_plant292 : .intend(inspect_nuclear_plant292, I) & (count(I, "shield292", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield292"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant293 : true <- !inspect_nuclear_plant2931. 
+!inspect_nuclear_plant2931 : fast & .intend(inspect_nuclear_plant293, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield293_id392_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield293", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield293", "G(add_belief(perc_rad293(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield293", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield293").
+!inspect_nuclear_plant293 : true <- !inspect_nuclear_plant2931. 
+!inspect_nuclear_plant2931 : true & .intend(inspect_nuclear_plant293, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield293_id393_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield293", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield293", "G(add_belief(perc_rad293(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield293", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield293").
-!inspect_nuclear_plant293 : .intend(inspect_nuclear_plant293, I) & violated(I, "shield293", Cmds) & (count(I, "shield293", Count) | (not(count(I, "shield293", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant293.
-!inspect_nuclear_plant293 : .intend(inspect_nuclear_plant293, I) & (count(I, "shield293", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield293"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant294 : true <- !inspect_nuclear_plant2941. 
+!inspect_nuclear_plant2941 : fast & .intend(inspect_nuclear_plant294, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield294_id394_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield294", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield294", "G(add_belief(perc_rad294(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield294", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield294").
+!inspect_nuclear_plant294 : true <- !inspect_nuclear_plant2941. 
+!inspect_nuclear_plant2941 : true & .intend(inspect_nuclear_plant294, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield294_id395_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield294", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield294", "G(add_belief(perc_rad294(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield294", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield294").
-!inspect_nuclear_plant294 : .intend(inspect_nuclear_plant294, I) & violated(I, "shield294", Cmds) & (count(I, "shield294", Count) | (not(count(I, "shield294", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant294.
-!inspect_nuclear_plant294 : .intend(inspect_nuclear_plant294, I) & (count(I, "shield294", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield294"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant295 : true <- !inspect_nuclear_plant2951. 
+!inspect_nuclear_plant2951 : fast & .intend(inspect_nuclear_plant295, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield295_id396_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield295", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield295", "G(add_belief(perc_rad295(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield295", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield295").
+!inspect_nuclear_plant295 : true <- !inspect_nuclear_plant2951. 
+!inspect_nuclear_plant2951 : true & .intend(inspect_nuclear_plant295, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield295_id397_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield295", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield295", "G(add_belief(perc_rad295(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield295", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield295").
-!inspect_nuclear_plant295 : .intend(inspect_nuclear_plant295, I) & violated(I, "shield295", Cmds) & (count(I, "shield295", Count) | (not(count(I, "shield295", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant295.
-!inspect_nuclear_plant295 : .intend(inspect_nuclear_plant295, I) & (count(I, "shield295", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield295"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant296 : true <- !inspect_nuclear_plant2961. 
+!inspect_nuclear_plant2961 : fast & .intend(inspect_nuclear_plant296, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield296_id398_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield296", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield296", "G(add_belief(perc_rad296(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield296", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield296").
+!inspect_nuclear_plant296 : true <- !inspect_nuclear_plant2961. 
+!inspect_nuclear_plant2961 : true & .intend(inspect_nuclear_plant296, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield296_id399_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield296", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield296", "G(add_belief(perc_rad296(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield296", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield296").
-!inspect_nuclear_plant296 : .intend(inspect_nuclear_plant296, I) & violated(I, "shield296", Cmds) & (count(I, "shield296", Count) | (not(count(I, "shield296", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant296.
-!inspect_nuclear_plant296 : .intend(inspect_nuclear_plant296, I) & (count(I, "shield296", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield296"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant297 : true <- !inspect_nuclear_plant2971. 
+!inspect_nuclear_plant2971 : fast & .intend(inspect_nuclear_plant297, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield297_id400_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield297", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield297", "G(add_belief(perc_rad297(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield297", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield297").
+!inspect_nuclear_plant297 : true <- !inspect_nuclear_plant2971. 
+!inspect_nuclear_plant2971 : true & .intend(inspect_nuclear_plant297, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield297_id401_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield297", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield297", "G(add_belief(perc_rad297(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield297", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield297").
-!inspect_nuclear_plant297 : .intend(inspect_nuclear_plant297, I) & violated(I, "shield297", Cmds) & (count(I, "shield297", Count) | (not(count(I, "shield297", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant297.
-!inspect_nuclear_plant297 : .intend(inspect_nuclear_plant297, I) & (count(I, "shield297", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield297"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant298 : true <- !inspect_nuclear_plant2981. 
+!inspect_nuclear_plant2981 : fast & .intend(inspect_nuclear_plant298, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield298_id402_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield298", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield298", "G(add_belief(perc_rad298(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield298", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield298").
+!inspect_nuclear_plant298 : true <- !inspect_nuclear_plant2981. 
+!inspect_nuclear_plant2981 : true & .intend(inspect_nuclear_plant298, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield298_id403_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield298", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield298", "G(add_belief(perc_rad298(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield298", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield298").
-!inspect_nuclear_plant298 : .intend(inspect_nuclear_plant298, I) & violated(I, "shield298", Cmds) & (count(I, "shield298", Count) | (not(count(I, "shield298", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant298.
-!inspect_nuclear_plant298 : .intend(inspect_nuclear_plant298, I) & (count(I, "shield298", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield298"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant299 : true <- !inspect_nuclear_plant2991. 
+!inspect_nuclear_plant2991 : fast & .intend(inspect_nuclear_plant299, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield299_id404_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield299", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield299", "G(add_belief(perc_rad299(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield299", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield299").
+!inspect_nuclear_plant299 : true <- !inspect_nuclear_plant2991. 
+!inspect_nuclear_plant2991 : true & .intend(inspect_nuclear_plant299, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield299_id405_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield299", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield299", "G(add_belief(perc_rad299(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield299", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield299").
-!inspect_nuclear_plant299 : .intend(inspect_nuclear_plant299, I) & violated(I, "shield299", Cmds) & (count(I, "shield299", Count) | (not(count(I, "shield299", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant299.
-!inspect_nuclear_plant299 : .intend(inspect_nuclear_plant299, I) & (count(I, "shield299", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield299"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant300 : true <- !inspect_nuclear_plant3001. 
+!inspect_nuclear_plant3001 : fast & .intend(inspect_nuclear_plant300, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield300_id406_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield300", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield300", "G(add_belief(perc_rad300(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield300", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield300").
+!inspect_nuclear_plant300 : true <- !inspect_nuclear_plant3001. 
+!inspect_nuclear_plant3001 : true & .intend(inspect_nuclear_plant300, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield300_id407_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield300", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield300", "G(add_belief(perc_rad300(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield300", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield300").
-!inspect_nuclear_plant300 : .intend(inspect_nuclear_plant300, I) & violated(I, "shield300", Cmds) & (count(I, "shield300", Count) | (not(count(I, "shield300", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant300.
-!inspect_nuclear_plant300 : .intend(inspect_nuclear_plant300, I) & (count(I, "shield300", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield300"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant301 : true <- !inspect_nuclear_plant3011. 
+!inspect_nuclear_plant3011 : fast & .intend(inspect_nuclear_plant301, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield301_id408_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield301", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield301", "G(add_belief(perc_rad301(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield301", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield301").
+!inspect_nuclear_plant301 : true <- !inspect_nuclear_plant3011. 
+!inspect_nuclear_plant3011 : true & .intend(inspect_nuclear_plant301, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield301_id409_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield301", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield301", "G(add_belief(perc_rad301(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield301", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield301").
-!inspect_nuclear_plant301 : .intend(inspect_nuclear_plant301, I) & violated(I, "shield301", Cmds) & (count(I, "shield301", Count) | (not(count(I, "shield301", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant301.
-!inspect_nuclear_plant301 : .intend(inspect_nuclear_plant301, I) & (count(I, "shield301", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield301"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant302 : true <- !inspect_nuclear_plant3021. 
+!inspect_nuclear_plant3021 : fast & .intend(inspect_nuclear_plant302, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield302_id410_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield302", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield302", "G(add_belief(perc_rad302(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield302", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield302").
+!inspect_nuclear_plant302 : true <- !inspect_nuclear_plant3021. 
+!inspect_nuclear_plant3021 : true & .intend(inspect_nuclear_plant302, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield302_id411_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield302", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield302", "G(add_belief(perc_rad302(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield302", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield302").
-!inspect_nuclear_plant302 : .intend(inspect_nuclear_plant302, I) & violated(I, "shield302", Cmds) & (count(I, "shield302", Count) | (not(count(I, "shield302", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant302.
-!inspect_nuclear_plant302 : .intend(inspect_nuclear_plant302, I) & (count(I, "shield302", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield302"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant303 : true <- !inspect_nuclear_plant3031. 
+!inspect_nuclear_plant3031 : fast & .intend(inspect_nuclear_plant303, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield303_id412_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield303", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield303", "G(add_belief(perc_rad303(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield303", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield303").
+!inspect_nuclear_plant303 : true <- !inspect_nuclear_plant3031. 
+!inspect_nuclear_plant3031 : true & .intend(inspect_nuclear_plant303, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield303_id413_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield303", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield303", "G(add_belief(perc_rad303(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield303", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield303").
-!inspect_nuclear_plant303 : .intend(inspect_nuclear_plant303, I) & violated(I, "shield303", Cmds) & (count(I, "shield303", Count) | (not(count(I, "shield303", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant303.
-!inspect_nuclear_plant303 : .intend(inspect_nuclear_plant303, I) & (count(I, "shield303", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield303"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant304 : true <- !inspect_nuclear_plant3041. 
+!inspect_nuclear_plant3041 : fast & .intend(inspect_nuclear_plant304, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield304_id414_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield304", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield304", "G(add_belief(perc_rad304(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield304", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield304").
+!inspect_nuclear_plant304 : true <- !inspect_nuclear_plant3041. 
+!inspect_nuclear_plant3041 : true & .intend(inspect_nuclear_plant304, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield304_id415_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield304", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield304", "G(add_belief(perc_rad304(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield304", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield304").
-!inspect_nuclear_plant304 : .intend(inspect_nuclear_plant304, I) & violated(I, "shield304", Cmds) & (count(I, "shield304", Count) | (not(count(I, "shield304", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant304.
-!inspect_nuclear_plant304 : .intend(inspect_nuclear_plant304, I) & (count(I, "shield304", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield304"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant305 : true <- !inspect_nuclear_plant3051. 
+!inspect_nuclear_plant3051 : fast & .intend(inspect_nuclear_plant305, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield305_id416_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield305", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield305", "G(add_belief(perc_rad305(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield305", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield305").
+!inspect_nuclear_plant305 : true <- !inspect_nuclear_plant3051. 
+!inspect_nuclear_plant3051 : true & .intend(inspect_nuclear_plant305, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield305_id417_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield305", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield305", "G(add_belief(perc_rad305(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield305", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield305").
-!inspect_nuclear_plant305 : .intend(inspect_nuclear_plant305, I) & violated(I, "shield305", Cmds) & (count(I, "shield305", Count) | (not(count(I, "shield305", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant305.
-!inspect_nuclear_plant305 : .intend(inspect_nuclear_plant305, I) & (count(I, "shield305", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield305"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant306 : true <- !inspect_nuclear_plant3061. 
+!inspect_nuclear_plant3061 : fast & .intend(inspect_nuclear_plant306, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield306_id418_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield306", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield306", "G(add_belief(perc_rad306(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield306", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield306").
+!inspect_nuclear_plant306 : true <- !inspect_nuclear_plant3061. 
+!inspect_nuclear_plant3061 : true & .intend(inspect_nuclear_plant306, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield306_id419_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield306", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield306", "G(add_belief(perc_rad306(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield306", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield306").
-!inspect_nuclear_plant306 : .intend(inspect_nuclear_plant306, I) & violated(I, "shield306", Cmds) & (count(I, "shield306", Count) | (not(count(I, "shield306", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant306.
-!inspect_nuclear_plant306 : .intend(inspect_nuclear_plant306, I) & (count(I, "shield306", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield306"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant307 : true <- !inspect_nuclear_plant3071. 
+!inspect_nuclear_plant3071 : fast & .intend(inspect_nuclear_plant307, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield307_id420_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield307", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield307", "G(add_belief(perc_rad307(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield307", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield307").
+!inspect_nuclear_plant307 : true <- !inspect_nuclear_plant3071. 
+!inspect_nuclear_plant3071 : true & .intend(inspect_nuclear_plant307, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield307_id421_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield307", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield307", "G(add_belief(perc_rad307(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield307", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield307").
-!inspect_nuclear_plant307 : .intend(inspect_nuclear_plant307, I) & violated(I, "shield307", Cmds) & (count(I, "shield307", Count) | (not(count(I, "shield307", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant307.
-!inspect_nuclear_plant307 : .intend(inspect_nuclear_plant307, I) & (count(I, "shield307", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield307"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant308 : true <- !inspect_nuclear_plant3081. 
+!inspect_nuclear_plant3081 : fast & .intend(inspect_nuclear_plant308, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield308_id422_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield308", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield308", "G(add_belief(perc_rad308(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield308", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield308").
+!inspect_nuclear_plant308 : true <- !inspect_nuclear_plant3081. 
+!inspect_nuclear_plant3081 : true & .intend(inspect_nuclear_plant308, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield308_id423_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield308", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield308", "G(add_belief(perc_rad308(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield308", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield308").
-!inspect_nuclear_plant308 : .intend(inspect_nuclear_plant308, I) & violated(I, "shield308", Cmds) & (count(I, "shield308", Count) | (not(count(I, "shield308", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant308.
-!inspect_nuclear_plant308 : .intend(inspect_nuclear_plant308, I) & (count(I, "shield308", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield308"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant309 : true <- !inspect_nuclear_plant3091. 
+!inspect_nuclear_plant3091 : fast & .intend(inspect_nuclear_plant309, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield309_id424_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield309", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield309", "G(add_belief(perc_rad309(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield309", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield309").
+!inspect_nuclear_plant309 : true <- !inspect_nuclear_plant3091. 
+!inspect_nuclear_plant3091 : true & .intend(inspect_nuclear_plant309, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield309_id425_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield309", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield309", "G(add_belief(perc_rad309(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield309", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield309").
-!inspect_nuclear_plant309 : .intend(inspect_nuclear_plant309, I) & violated(I, "shield309", Cmds) & (count(I, "shield309", Count) | (not(count(I, "shield309", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant309.
-!inspect_nuclear_plant309 : .intend(inspect_nuclear_plant309, I) & (count(I, "shield309", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield309"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant310 : true <- !inspect_nuclear_plant3101. 
+!inspect_nuclear_plant3101 : fast & .intend(inspect_nuclear_plant310, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield310_id426_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield310", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield310", "G(add_belief(perc_rad310(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield310", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield310").
+!inspect_nuclear_plant310 : true <- !inspect_nuclear_plant3101. 
+!inspect_nuclear_plant3101 : true & .intend(inspect_nuclear_plant310, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield310_id427_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield310", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield310", "G(add_belief(perc_rad310(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield310", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield310").
-!inspect_nuclear_plant310 : .intend(inspect_nuclear_plant310, I) & violated(I, "shield310", Cmds) & (count(I, "shield310", Count) | (not(count(I, "shield310", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant310.
-!inspect_nuclear_plant310 : .intend(inspect_nuclear_plant310, I) & (count(I, "shield310", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield310"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant311 : true <- !inspect_nuclear_plant3111. 
+!inspect_nuclear_plant3111 : fast & .intend(inspect_nuclear_plant311, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield311_id428_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield311", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield311", "G(add_belief(perc_rad311(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield311", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield311").
+!inspect_nuclear_plant311 : true <- !inspect_nuclear_plant3111. 
+!inspect_nuclear_plant3111 : true & .intend(inspect_nuclear_plant311, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield311_id429_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield311", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield311", "G(add_belief(perc_rad311(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield311", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield311").
-!inspect_nuclear_plant311 : .intend(inspect_nuclear_plant311, I) & violated(I, "shield311", Cmds) & (count(I, "shield311", Count) | (not(count(I, "shield311", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant311.
-!inspect_nuclear_plant311 : .intend(inspect_nuclear_plant311, I) & (count(I, "shield311", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield311"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant312 : true <- !inspect_nuclear_plant3121. 
+!inspect_nuclear_plant3121 : fast & .intend(inspect_nuclear_plant312, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield312_id430_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield312", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield312", "G(add_belief(perc_rad312(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield312", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield312").
+!inspect_nuclear_plant312 : true <- !inspect_nuclear_plant3121. 
+!inspect_nuclear_plant3121 : true & .intend(inspect_nuclear_plant312, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield312_id431_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield312", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield312", "G(add_belief(perc_rad312(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield312", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield312").
-!inspect_nuclear_plant312 : .intend(inspect_nuclear_plant312, I) & violated(I, "shield312", Cmds) & (count(I, "shield312", Count) | (not(count(I, "shield312", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant312.
-!inspect_nuclear_plant312 : .intend(inspect_nuclear_plant312, I) & (count(I, "shield312", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield312"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant313 : true <- !inspect_nuclear_plant3131. 
+!inspect_nuclear_plant3131 : fast & .intend(inspect_nuclear_plant313, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield313_id432_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield313", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield313", "G(add_belief(perc_rad313(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield313", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield313").
+!inspect_nuclear_plant313 : true <- !inspect_nuclear_plant3131. 
+!inspect_nuclear_plant3131 : true & .intend(inspect_nuclear_plant313, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield313_id433_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield313", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield313", "G(add_belief(perc_rad313(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield313", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield313").
-!inspect_nuclear_plant313 : .intend(inspect_nuclear_plant313, I) & violated(I, "shield313", Cmds) & (count(I, "shield313", Count) | (not(count(I, "shield313", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant313.
-!inspect_nuclear_plant313 : .intend(inspect_nuclear_plant313, I) & (count(I, "shield313", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield313"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant314 : true <- !inspect_nuclear_plant3141. 
+!inspect_nuclear_plant3141 : fast & .intend(inspect_nuclear_plant314, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield314_id434_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield314", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield314", "G(add_belief(perc_rad314(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield314", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield314").
+!inspect_nuclear_plant314 : true <- !inspect_nuclear_plant3141. 
+!inspect_nuclear_plant3141 : true & .intend(inspect_nuclear_plant314, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield314_id435_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield314", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield314", "G(add_belief(perc_rad314(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield314", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield314").
-!inspect_nuclear_plant314 : .intend(inspect_nuclear_plant314, I) & violated(I, "shield314", Cmds) & (count(I, "shield314", Count) | (not(count(I, "shield314", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant314.
-!inspect_nuclear_plant314 : .intend(inspect_nuclear_plant314, I) & (count(I, "shield314", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield314"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant315 : true <- !inspect_nuclear_plant3151. 
+!inspect_nuclear_plant3151 : fast & .intend(inspect_nuclear_plant315, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield315_id436_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield315", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield315", "G(add_belief(perc_rad315(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield315", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield315").
+!inspect_nuclear_plant315 : true <- !inspect_nuclear_plant3151. 
+!inspect_nuclear_plant3151 : true & .intend(inspect_nuclear_plant315, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield315_id437_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield315", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield315", "G(add_belief(perc_rad315(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield315", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield315").
-!inspect_nuclear_plant315 : .intend(inspect_nuclear_plant315, I) & violated(I, "shield315", Cmds) & (count(I, "shield315", Count) | (not(count(I, "shield315", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant315.
-!inspect_nuclear_plant315 : .intend(inspect_nuclear_plant315, I) & (count(I, "shield315", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield315"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant316 : true <- !inspect_nuclear_plant3161. 
+!inspect_nuclear_plant3161 : fast & .intend(inspect_nuclear_plant316, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield316_id438_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield316", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield316", "G(add_belief(perc_rad316(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield316", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield316").
+!inspect_nuclear_plant316 : true <- !inspect_nuclear_plant3161. 
+!inspect_nuclear_plant3161 : true & .intend(inspect_nuclear_plant316, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield316_id439_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield316", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield316", "G(add_belief(perc_rad316(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield316", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield316").
-!inspect_nuclear_plant316 : .intend(inspect_nuclear_plant316, I) & violated(I, "shield316", Cmds) & (count(I, "shield316", Count) | (not(count(I, "shield316", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant316.
-!inspect_nuclear_plant316 : .intend(inspect_nuclear_plant316, I) & (count(I, "shield316", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield316"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant317 : true <- !inspect_nuclear_plant3171. 
+!inspect_nuclear_plant3171 : fast & .intend(inspect_nuclear_plant317, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield317_id440_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield317", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield317", "G(add_belief(perc_rad317(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield317", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield317").
+!inspect_nuclear_plant317 : true <- !inspect_nuclear_plant3171. 
+!inspect_nuclear_plant3171 : true & .intend(inspect_nuclear_plant317, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield317_id441_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield317", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield317", "G(add_belief(perc_rad317(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield317", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield317").
-!inspect_nuclear_plant317 : .intend(inspect_nuclear_plant317, I) & violated(I, "shield317", Cmds) & (count(I, "shield317", Count) | (not(count(I, "shield317", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant317.
-!inspect_nuclear_plant317 : .intend(inspect_nuclear_plant317, I) & (count(I, "shield317", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield317"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant318 : true <- !inspect_nuclear_plant3181. 
+!inspect_nuclear_plant3181 : fast & .intend(inspect_nuclear_plant318, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield318_id442_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield318", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield318", "G(add_belief(perc_rad318(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield318", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield318").
+!inspect_nuclear_plant318 : true <- !inspect_nuclear_plant3181. 
+!inspect_nuclear_plant3181 : true & .intend(inspect_nuclear_plant318, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield318_id443_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield318", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield318", "G(add_belief(perc_rad318(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield318", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield318").
-!inspect_nuclear_plant318 : .intend(inspect_nuclear_plant318, I) & violated(I, "shield318", Cmds) & (count(I, "shield318", Count) | (not(count(I, "shield318", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant318.
-!inspect_nuclear_plant318 : .intend(inspect_nuclear_plant318, I) & (count(I, "shield318", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield318"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant319 : true <- !inspect_nuclear_plant3191. 
+!inspect_nuclear_plant3191 : fast & .intend(inspect_nuclear_plant319, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield319_id444_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield319", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield319", "G(add_belief(perc_rad319(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield319", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield319").
+!inspect_nuclear_plant319 : true <- !inspect_nuclear_plant3191. 
+!inspect_nuclear_plant3191 : true & .intend(inspect_nuclear_plant319, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield319_id445_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield319", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield319", "G(add_belief(perc_rad319(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield319", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield319").
-!inspect_nuclear_plant319 : .intend(inspect_nuclear_plant319, I) & violated(I, "shield319", Cmds) & (count(I, "shield319", Count) | (not(count(I, "shield319", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant319.
-!inspect_nuclear_plant319 : .intend(inspect_nuclear_plant319, I) & (count(I, "shield319", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield319"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant320 : true <- !inspect_nuclear_plant3201. 
+!inspect_nuclear_plant3201 : fast & .intend(inspect_nuclear_plant320, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield320_id446_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield320", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield320", "G(add_belief(perc_rad320(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield320", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield320").
+!inspect_nuclear_plant320 : true <- !inspect_nuclear_plant3201. 
+!inspect_nuclear_plant3201 : true & .intend(inspect_nuclear_plant320, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield320_id447_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield320", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield320", "G(add_belief(perc_rad320(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield320", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield320").
-!inspect_nuclear_plant320 : .intend(inspect_nuclear_plant320, I) & violated(I, "shield320", Cmds) & (count(I, "shield320", Count) | (not(count(I, "shield320", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant320.
-!inspect_nuclear_plant320 : .intend(inspect_nuclear_plant320, I) & (count(I, "shield320", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield320"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant321 : true <- !inspect_nuclear_plant3211. 
+!inspect_nuclear_plant3211 : fast & .intend(inspect_nuclear_plant321, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield321_id448_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield321", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield321", "G(add_belief(perc_rad321(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield321", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield321").
+!inspect_nuclear_plant321 : true <- !inspect_nuclear_plant3211. 
+!inspect_nuclear_plant3211 : true & .intend(inspect_nuclear_plant321, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield321_id449_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield321", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield321", "G(add_belief(perc_rad321(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield321", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield321").
-!inspect_nuclear_plant321 : .intend(inspect_nuclear_plant321, I) & violated(I, "shield321", Cmds) & (count(I, "shield321", Count) | (not(count(I, "shield321", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant321.
-!inspect_nuclear_plant321 : .intend(inspect_nuclear_plant321, I) & (count(I, "shield321", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield321"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant322 : true <- !inspect_nuclear_plant3221. 
+!inspect_nuclear_plant3221 : fast & .intend(inspect_nuclear_plant322, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield322_id450_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield322", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield322", "G(add_belief(perc_rad322(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield322", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield322").
+!inspect_nuclear_plant322 : true <- !inspect_nuclear_plant3221. 
+!inspect_nuclear_plant3221 : true & .intend(inspect_nuclear_plant322, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield322_id451_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield322", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield322", "G(add_belief(perc_rad322(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield322", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield322").
-!inspect_nuclear_plant322 : .intend(inspect_nuclear_plant322, I) & violated(I, "shield322", Cmds) & (count(I, "shield322", Count) | (not(count(I, "shield322", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant322.
-!inspect_nuclear_plant322 : .intend(inspect_nuclear_plant322, I) & (count(I, "shield322", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield322"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant323 : true <- !inspect_nuclear_plant3231. 
+!inspect_nuclear_plant3231 : fast & .intend(inspect_nuclear_plant323, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield323_id452_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield323", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield323", "G(add_belief(perc_rad323(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield323", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield323").
+!inspect_nuclear_plant323 : true <- !inspect_nuclear_plant3231. 
+!inspect_nuclear_plant3231 : true & .intend(inspect_nuclear_plant323, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield323_id453_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield323", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield323", "G(add_belief(perc_rad323(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield323", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield323").
-!inspect_nuclear_plant323 : .intend(inspect_nuclear_plant323, I) & violated(I, "shield323", Cmds) & (count(I, "shield323", Count) | (not(count(I, "shield323", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant323.
-!inspect_nuclear_plant323 : .intend(inspect_nuclear_plant323, I) & (count(I, "shield323", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield323"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant324 : true <- !inspect_nuclear_plant3241. 
+!inspect_nuclear_plant3241 : fast & .intend(inspect_nuclear_plant324, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield324_id454_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield324", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield324", "G(add_belief(perc_rad324(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield324", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield324").
+!inspect_nuclear_plant324 : true <- !inspect_nuclear_plant3241. 
+!inspect_nuclear_plant3241 : true & .intend(inspect_nuclear_plant324, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield324_id455_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield324", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield324", "G(add_belief(perc_rad324(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield324", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield324").
-!inspect_nuclear_plant324 : .intend(inspect_nuclear_plant324, I) & violated(I, "shield324", Cmds) & (count(I, "shield324", Count) | (not(count(I, "shield324", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant324.
-!inspect_nuclear_plant324 : .intend(inspect_nuclear_plant324, I) & (count(I, "shield324", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield324"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant325 : true <- !inspect_nuclear_plant3251. 
+!inspect_nuclear_plant3251 : fast & .intend(inspect_nuclear_plant325, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield325_id456_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield325", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield325", "G(add_belief(perc_rad325(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield325", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield325").
+!inspect_nuclear_plant325 : true <- !inspect_nuclear_plant3251. 
+!inspect_nuclear_plant3251 : true & .intend(inspect_nuclear_plant325, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield325_id457_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield325", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield325", "G(add_belief(perc_rad325(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield325", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield325").
-!inspect_nuclear_plant325 : .intend(inspect_nuclear_plant325, I) & violated(I, "shield325", Cmds) & (count(I, "shield325", Count) | (not(count(I, "shield325", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant325.
-!inspect_nuclear_plant325 : .intend(inspect_nuclear_plant325, I) & (count(I, "shield325", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield325"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant326 : true <- !inspect_nuclear_plant3261. 
+!inspect_nuclear_plant3261 : fast & .intend(inspect_nuclear_plant326, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield326_id458_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield326", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield326", "G(add_belief(perc_rad326(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield326", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield326").
+!inspect_nuclear_plant326 : true <- !inspect_nuclear_plant3261. 
+!inspect_nuclear_plant3261 : true & .intend(inspect_nuclear_plant326, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield326_id459_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield326", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield326", "G(add_belief(perc_rad326(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield326", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield326").
-!inspect_nuclear_plant326 : .intend(inspect_nuclear_plant326, I) & violated(I, "shield326", Cmds) & (count(I, "shield326", Count) | (not(count(I, "shield326", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant326.
-!inspect_nuclear_plant326 : .intend(inspect_nuclear_plant326, I) & (count(I, "shield326", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield326"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant327 : true <- !inspect_nuclear_plant3271. 
+!inspect_nuclear_plant3271 : fast & .intend(inspect_nuclear_plant327, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield327_id460_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield327", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield327", "G(add_belief(perc_rad327(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield327", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield327").
+!inspect_nuclear_plant327 : true <- !inspect_nuclear_plant3271. 
+!inspect_nuclear_plant3271 : true & .intend(inspect_nuclear_plant327, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield327_id461_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield327", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield327", "G(add_belief(perc_rad327(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield327", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield327").
-!inspect_nuclear_plant327 : .intend(inspect_nuclear_plant327, I) & violated(I, "shield327", Cmds) & (count(I, "shield327", Count) | (not(count(I, "shield327", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant327.
-!inspect_nuclear_plant327 : .intend(inspect_nuclear_plant327, I) & (count(I, "shield327", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield327"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant328 : true <- !inspect_nuclear_plant3281. 
+!inspect_nuclear_plant3281 : fast & .intend(inspect_nuclear_plant328, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield328_id462_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield328", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield328", "G(add_belief(perc_rad328(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield328", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield328").
+!inspect_nuclear_plant328 : true <- !inspect_nuclear_plant3281. 
+!inspect_nuclear_plant3281 : true & .intend(inspect_nuclear_plant328, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield328_id463_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield328", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield328", "G(add_belief(perc_rad328(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield328", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield328").
-!inspect_nuclear_plant328 : .intend(inspect_nuclear_plant328, I) & violated(I, "shield328", Cmds) & (count(I, "shield328", Count) | (not(count(I, "shield328", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant328.
-!inspect_nuclear_plant328 : .intend(inspect_nuclear_plant328, I) & (count(I, "shield328", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield328"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant329 : true <- !inspect_nuclear_plant3291. 
+!inspect_nuclear_plant3291 : fast & .intend(inspect_nuclear_plant329, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield329_id464_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield329", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield329", "G(add_belief(perc_rad329(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield329", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield329").
+!inspect_nuclear_plant329 : true <- !inspect_nuclear_plant3291. 
+!inspect_nuclear_plant3291 : true & .intend(inspect_nuclear_plant329, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield329_id465_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield329", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield329", "G(add_belief(perc_rad329(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield329", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield329").
-!inspect_nuclear_plant329 : .intend(inspect_nuclear_plant329, I) & violated(I, "shield329", Cmds) & (count(I, "shield329", Count) | (not(count(I, "shield329", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant329.
-!inspect_nuclear_plant329 : .intend(inspect_nuclear_plant329, I) & (count(I, "shield329", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield329"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant330 : true <- !inspect_nuclear_plant3301. 
+!inspect_nuclear_plant3301 : fast & .intend(inspect_nuclear_plant330, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield330_id466_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield330", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield330", "G(add_belief(perc_rad330(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield330", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield330").
+!inspect_nuclear_plant330 : true <- !inspect_nuclear_plant3301. 
+!inspect_nuclear_plant3301 : true & .intend(inspect_nuclear_plant330, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield330_id467_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield330", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield330", "G(add_belief(perc_rad330(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield330", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield330").
-!inspect_nuclear_plant330 : .intend(inspect_nuclear_plant330, I) & violated(I, "shield330", Cmds) & (count(I, "shield330", Count) | (not(count(I, "shield330", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant330.
-!inspect_nuclear_plant330 : .intend(inspect_nuclear_plant330, I) & (count(I, "shield330", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield330"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant331 : true <- !inspect_nuclear_plant3311. 
+!inspect_nuclear_plant3311 : fast & .intend(inspect_nuclear_plant331, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield331_id468_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield331", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield331", "G(add_belief(perc_rad331(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield331", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield331").
+!inspect_nuclear_plant331 : true <- !inspect_nuclear_plant3311. 
+!inspect_nuclear_plant3311 : true & .intend(inspect_nuclear_plant331, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield331_id469_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield331", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield331", "G(add_belief(perc_rad331(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield331", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield331").
-!inspect_nuclear_plant331 : .intend(inspect_nuclear_plant331, I) & violated(I, "shield331", Cmds) & (count(I, "shield331", Count) | (not(count(I, "shield331", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant331.
-!inspect_nuclear_plant331 : .intend(inspect_nuclear_plant331, I) & (count(I, "shield331", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield331"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant332 : true <- !inspect_nuclear_plant3321. 
+!inspect_nuclear_plant3321 : fast & .intend(inspect_nuclear_plant332, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield332_id470_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield332", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield332", "G(add_belief(perc_rad332(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield332", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield332").
+!inspect_nuclear_plant332 : true <- !inspect_nuclear_plant3321. 
+!inspect_nuclear_plant3321 : true & .intend(inspect_nuclear_plant332, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield332_id471_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield332", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield332", "G(add_belief(perc_rad332(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield332", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield332").
-!inspect_nuclear_plant332 : .intend(inspect_nuclear_plant332, I) & violated(I, "shield332", Cmds) & (count(I, "shield332", Count) | (not(count(I, "shield332", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant332.
-!inspect_nuclear_plant332 : .intend(inspect_nuclear_plant332, I) & (count(I, "shield332", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield332"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant333 : true <- !inspect_nuclear_plant3331. 
+!inspect_nuclear_plant3331 : fast & .intend(inspect_nuclear_plant333, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield333_id472_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield333", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield333", "G(add_belief(perc_rad333(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield333", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield333").
+!inspect_nuclear_plant333 : true <- !inspect_nuclear_plant3331. 
+!inspect_nuclear_plant3331 : true & .intend(inspect_nuclear_plant333, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield333_id473_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield333", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield333", "G(add_belief(perc_rad333(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield333", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield333").
-!inspect_nuclear_plant333 : .intend(inspect_nuclear_plant333, I) & violated(I, "shield333", Cmds) & (count(I, "shield333", Count) | (not(count(I, "shield333", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant333.
-!inspect_nuclear_plant333 : .intend(inspect_nuclear_plant333, I) & (count(I, "shield333", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield333"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant334 : true <- !inspect_nuclear_plant3341. 
+!inspect_nuclear_plant3341 : fast & .intend(inspect_nuclear_plant334, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield334_id474_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield334", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield334", "G(add_belief(perc_rad334(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield334", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield334").
+!inspect_nuclear_plant334 : true <- !inspect_nuclear_plant3341. 
+!inspect_nuclear_plant3341 : true & .intend(inspect_nuclear_plant334, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield334_id475_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield334", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield334", "G(add_belief(perc_rad334(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield334", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield334").
-!inspect_nuclear_plant334 : .intend(inspect_nuclear_plant334, I) & violated(I, "shield334", Cmds) & (count(I, "shield334", Count) | (not(count(I, "shield334", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant334.
-!inspect_nuclear_plant334 : .intend(inspect_nuclear_plant334, I) & (count(I, "shield334", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield334"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant335 : true <- !inspect_nuclear_plant3351. 
+!inspect_nuclear_plant3351 : fast & .intend(inspect_nuclear_plant335, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield335_id476_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield335", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield335", "G(add_belief(perc_rad335(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield335", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield335").
+!inspect_nuclear_plant335 : true <- !inspect_nuclear_plant3351. 
+!inspect_nuclear_plant3351 : true & .intend(inspect_nuclear_plant335, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield335_id477_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield335", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield335", "G(add_belief(perc_rad335(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield335", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield335").
-!inspect_nuclear_plant335 : .intend(inspect_nuclear_plant335, I) & violated(I, "shield335", Cmds) & (count(I, "shield335", Count) | (not(count(I, "shield335", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant335.
-!inspect_nuclear_plant335 : .intend(inspect_nuclear_plant335, I) & (count(I, "shield335", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield335"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant336 : true <- !inspect_nuclear_plant3361. 
+!inspect_nuclear_plant3361 : fast & .intend(inspect_nuclear_plant336, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield336_id478_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield336", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield336", "G(add_belief(perc_rad336(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield336", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield336").
+!inspect_nuclear_plant336 : true <- !inspect_nuclear_plant3361. 
+!inspect_nuclear_plant3361 : true & .intend(inspect_nuclear_plant336, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield336_id479_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield336", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield336", "G(add_belief(perc_rad336(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield336", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield336").
-!inspect_nuclear_plant336 : .intend(inspect_nuclear_plant336, I) & violated(I, "shield336", Cmds) & (count(I, "shield336", Count) | (not(count(I, "shield336", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant336.
-!inspect_nuclear_plant336 : .intend(inspect_nuclear_plant336, I) & (count(I, "shield336", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield336"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant337 : true <- !inspect_nuclear_plant3371. 
+!inspect_nuclear_plant3371 : fast & .intend(inspect_nuclear_plant337, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield337_id480_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield337", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield337", "G(add_belief(perc_rad337(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield337", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield337").
+!inspect_nuclear_plant337 : true <- !inspect_nuclear_plant3371. 
+!inspect_nuclear_plant3371 : true & .intend(inspect_nuclear_plant337, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield337_id481_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield337", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield337", "G(add_belief(perc_rad337(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield337", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield337").
-!inspect_nuclear_plant337 : .intend(inspect_nuclear_plant337, I) & violated(I, "shield337", Cmds) & (count(I, "shield337", Count) | (not(count(I, "shield337", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant337.
-!inspect_nuclear_plant337 : .intend(inspect_nuclear_plant337, I) & (count(I, "shield337", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield337"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant338 : true <- !inspect_nuclear_plant3381. 
+!inspect_nuclear_plant3381 : fast & .intend(inspect_nuclear_plant338, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield338_id482_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield338", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield338", "G(add_belief(perc_rad338(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield338", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield338").
+!inspect_nuclear_plant338 : true <- !inspect_nuclear_plant3381. 
+!inspect_nuclear_plant3381 : true & .intend(inspect_nuclear_plant338, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield338_id483_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield338", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield338", "G(add_belief(perc_rad338(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield338", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield338").
-!inspect_nuclear_plant338 : .intend(inspect_nuclear_plant338, I) & violated(I, "shield338", Cmds) & (count(I, "shield338", Count) | (not(count(I, "shield338", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant338.
-!inspect_nuclear_plant338 : .intend(inspect_nuclear_plant338, I) & (count(I, "shield338", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield338"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant339 : true <- !inspect_nuclear_plant3391. 
+!inspect_nuclear_plant3391 : fast & .intend(inspect_nuclear_plant339, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield339_id484_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield339", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield339", "G(add_belief(perc_rad339(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield339", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield339").
+!inspect_nuclear_plant339 : true <- !inspect_nuclear_plant3391. 
+!inspect_nuclear_plant3391 : true & .intend(inspect_nuclear_plant339, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield339_id485_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield339", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield339", "G(add_belief(perc_rad339(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield339", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield339").
-!inspect_nuclear_plant339 : .intend(inspect_nuclear_plant339, I) & violated(I, "shield339", Cmds) & (count(I, "shield339", Count) | (not(count(I, "shield339", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant339.
-!inspect_nuclear_plant339 : .intend(inspect_nuclear_plant339, I) & (count(I, "shield339", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield339"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant340 : true <- !inspect_nuclear_plant3401. 
+!inspect_nuclear_plant3401 : fast & .intend(inspect_nuclear_plant340, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield340_id486_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield340", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield340", "G(add_belief(perc_rad340(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield340", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield340").
+!inspect_nuclear_plant340 : true <- !inspect_nuclear_plant3401. 
+!inspect_nuclear_plant3401 : true & .intend(inspect_nuclear_plant340, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield340_id487_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield340", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield340", "G(add_belief(perc_rad340(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield340", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield340").
-!inspect_nuclear_plant340 : .intend(inspect_nuclear_plant340, I) & violated(I, "shield340", Cmds) & (count(I, "shield340", Count) | (not(count(I, "shield340", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant340.
-!inspect_nuclear_plant340 : .intend(inspect_nuclear_plant340, I) & (count(I, "shield340", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield340"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant341 : true <- !inspect_nuclear_plant3411. 
+!inspect_nuclear_plant3411 : fast & .intend(inspect_nuclear_plant341, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield341_id488_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield341", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield341", "G(add_belief(perc_rad341(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield341", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield341").
+!inspect_nuclear_plant341 : true <- !inspect_nuclear_plant3411. 
+!inspect_nuclear_plant3411 : true & .intend(inspect_nuclear_plant341, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield341_id489_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield341", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield341", "G(add_belief(perc_rad341(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield341", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield341").
-!inspect_nuclear_plant341 : .intend(inspect_nuclear_plant341, I) & violated(I, "shield341", Cmds) & (count(I, "shield341", Count) | (not(count(I, "shield341", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant341.
-!inspect_nuclear_plant341 : .intend(inspect_nuclear_plant341, I) & (count(I, "shield341", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield341"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant342 : true <- !inspect_nuclear_plant3421. 
+!inspect_nuclear_plant3421 : fast & .intend(inspect_nuclear_plant342, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield342_id490_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield342", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield342", "G(add_belief(perc_rad342(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield342", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield342").
+!inspect_nuclear_plant342 : true <- !inspect_nuclear_plant3421. 
+!inspect_nuclear_plant3421 : true & .intend(inspect_nuclear_plant342, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield342_id491_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield342", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield342", "G(add_belief(perc_rad342(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield342", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield342").
-!inspect_nuclear_plant342 : .intend(inspect_nuclear_plant342, I) & violated(I, "shield342", Cmds) & (count(I, "shield342", Count) | (not(count(I, "shield342", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant342.
-!inspect_nuclear_plant342 : .intend(inspect_nuclear_plant342, I) & (count(I, "shield342", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield342"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant343 : true <- !inspect_nuclear_plant3431. 
+!inspect_nuclear_plant3431 : fast & .intend(inspect_nuclear_plant343, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield343_id492_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield343", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield343", "G(add_belief(perc_rad343(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield343", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield343").
+!inspect_nuclear_plant343 : true <- !inspect_nuclear_plant3431. 
+!inspect_nuclear_plant3431 : true & .intend(inspect_nuclear_plant343, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield343_id493_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield343", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield343", "G(add_belief(perc_rad343(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield343", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield343").
-!inspect_nuclear_plant343 : .intend(inspect_nuclear_plant343, I) & violated(I, "shield343", Cmds) & (count(I, "shield343", Count) | (not(count(I, "shield343", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant343.
-!inspect_nuclear_plant343 : .intend(inspect_nuclear_plant343, I) & (count(I, "shield343", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield343"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant344 : true <- !inspect_nuclear_plant3441. 
+!inspect_nuclear_plant3441 : fast & .intend(inspect_nuclear_plant344, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield344_id494_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield344", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield344", "G(add_belief(perc_rad344(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield344", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield344").
+!inspect_nuclear_plant344 : true <- !inspect_nuclear_plant3441. 
+!inspect_nuclear_plant3441 : true & .intend(inspect_nuclear_plant344, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield344_id495_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield344", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield344", "G(add_belief(perc_rad344(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield344", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield344").
-!inspect_nuclear_plant344 : .intend(inspect_nuclear_plant344, I) & violated(I, "shield344", Cmds) & (count(I, "shield344", Count) | (not(count(I, "shield344", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant344.
-!inspect_nuclear_plant344 : .intend(inspect_nuclear_plant344, I) & (count(I, "shield344", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield344"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant345 : true <- !inspect_nuclear_plant3451. 
+!inspect_nuclear_plant3451 : fast & .intend(inspect_nuclear_plant345, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield345_id496_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield345", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield345", "G(add_belief(perc_rad345(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield345", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield345").
+!inspect_nuclear_plant345 : true <- !inspect_nuclear_plant3451. 
+!inspect_nuclear_plant3451 : true & .intend(inspect_nuclear_plant345, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield345_id497_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield345", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield345", "G(add_belief(perc_rad345(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield345", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield345").
-!inspect_nuclear_plant345 : .intend(inspect_nuclear_plant345, I) & violated(I, "shield345", Cmds) & (count(I, "shield345", Count) | (not(count(I, "shield345", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant345.
-!inspect_nuclear_plant345 : .intend(inspect_nuclear_plant345, I) & (count(I, "shield345", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield345"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant346 : true <- !inspect_nuclear_plant3461. 
+!inspect_nuclear_plant3461 : fast & .intend(inspect_nuclear_plant346, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield346_id498_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield346", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield346", "G(add_belief(perc_rad346(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield346", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield346").
+!inspect_nuclear_plant346 : true <- !inspect_nuclear_plant3461. 
+!inspect_nuclear_plant3461 : true & .intend(inspect_nuclear_plant346, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield346_id499_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield346", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield346", "G(add_belief(perc_rad346(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield346", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield346").
-!inspect_nuclear_plant346 : .intend(inspect_nuclear_plant346, I) & violated(I, "shield346", Cmds) & (count(I, "shield346", Count) | (not(count(I, "shield346", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant346.
-!inspect_nuclear_plant346 : .intend(inspect_nuclear_plant346, I) & (count(I, "shield346", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield346"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant347 : true <- !inspect_nuclear_plant3471. 
+!inspect_nuclear_plant3471 : fast & .intend(inspect_nuclear_plant347, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield347_id500_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield347", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield347", "G(add_belief(perc_rad347(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield347", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield347").
+!inspect_nuclear_plant347 : true <- !inspect_nuclear_plant3471. 
+!inspect_nuclear_plant3471 : true & .intend(inspect_nuclear_plant347, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield347_id501_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield347", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield347", "G(add_belief(perc_rad347(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield347", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield347").
-!inspect_nuclear_plant347 : .intend(inspect_nuclear_plant347, I) & violated(I, "shield347", Cmds) & (count(I, "shield347", Count) | (not(count(I, "shield347", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant347.
-!inspect_nuclear_plant347 : .intend(inspect_nuclear_plant347, I) & (count(I, "shield347", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield347"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant348 : true <- !inspect_nuclear_plant3481. 
+!inspect_nuclear_plant3481 : fast & .intend(inspect_nuclear_plant348, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield348_id502_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield348", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield348", "G(add_belief(perc_rad348(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield348", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield348").
+!inspect_nuclear_plant348 : true <- !inspect_nuclear_plant3481. 
+!inspect_nuclear_plant3481 : true & .intend(inspect_nuclear_plant348, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield348_id503_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield348", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield348", "G(add_belief(perc_rad348(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield348", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield348").
-!inspect_nuclear_plant348 : .intend(inspect_nuclear_plant348, I) & violated(I, "shield348", Cmds) & (count(I, "shield348", Count) | (not(count(I, "shield348", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant348.
-!inspect_nuclear_plant348 : .intend(inspect_nuclear_plant348, I) & (count(I, "shield348", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield348"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant349 : true <- !inspect_nuclear_plant3491. 
+!inspect_nuclear_plant3491 : fast & .intend(inspect_nuclear_plant349, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield349_id504_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield349", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield349", "G(add_belief(perc_rad349(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield349", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield349").
+!inspect_nuclear_plant349 : true <- !inspect_nuclear_plant3491. 
+!inspect_nuclear_plant3491 : true & .intend(inspect_nuclear_plant349, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield349_id505_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield349", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield349", "G(add_belief(perc_rad349(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield349", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield349").
-!inspect_nuclear_plant349 : .intend(inspect_nuclear_plant349, I) & violated(I, "shield349", Cmds) & (count(I, "shield349", Count) | (not(count(I, "shield349", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant349.
-!inspect_nuclear_plant349 : .intend(inspect_nuclear_plant349, I) & (count(I, "shield349", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield349"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant350 : true <- !inspect_nuclear_plant3501. 
+!inspect_nuclear_plant3501 : fast & .intend(inspect_nuclear_plant350, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield350_id506_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield350", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield350", "G(add_belief(perc_rad350(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield350", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield350").
+!inspect_nuclear_plant350 : true <- !inspect_nuclear_plant3501. 
+!inspect_nuclear_plant3501 : true & .intend(inspect_nuclear_plant350, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield350_id507_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield350", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield350", "G(add_belief(perc_rad350(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield350", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield350").
-!inspect_nuclear_plant350 : .intend(inspect_nuclear_plant350, I) & violated(I, "shield350", Cmds) & (count(I, "shield350", Count) | (not(count(I, "shield350", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant350.
-!inspect_nuclear_plant350 : .intend(inspect_nuclear_plant350, I) & (count(I, "shield350", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield350"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant351 : true <- !inspect_nuclear_plant3511. 
+!inspect_nuclear_plant3511 : fast & .intend(inspect_nuclear_plant351, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield351_id508_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield351", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield351", "G(add_belief(perc_rad351(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield351", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield351").
+!inspect_nuclear_plant351 : true <- !inspect_nuclear_plant3511. 
+!inspect_nuclear_plant3511 : true & .intend(inspect_nuclear_plant351, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield351_id509_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield351", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield351", "G(add_belief(perc_rad351(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield351", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield351").
-!inspect_nuclear_plant351 : .intend(inspect_nuclear_plant351, I) & violated(I, "shield351", Cmds) & (count(I, "shield351", Count) | (not(count(I, "shield351", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant351.
-!inspect_nuclear_plant351 : .intend(inspect_nuclear_plant351, I) & (count(I, "shield351", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield351"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant352 : true <- !inspect_nuclear_plant3521. 
+!inspect_nuclear_plant3521 : fast & .intend(inspect_nuclear_plant352, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield352_id510_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield352", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield352", "G(add_belief(perc_rad352(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield352", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield352").
+!inspect_nuclear_plant352 : true <- !inspect_nuclear_plant3521. 
+!inspect_nuclear_plant3521 : true & .intend(inspect_nuclear_plant352, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield352_id511_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield352", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield352", "G(add_belief(perc_rad352(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield352", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield352").
-!inspect_nuclear_plant352 : .intend(inspect_nuclear_plant352, I) & violated(I, "shield352", Cmds) & (count(I, "shield352", Count) | (not(count(I, "shield352", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant352.
-!inspect_nuclear_plant352 : .intend(inspect_nuclear_plant352, I) & (count(I, "shield352", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield352"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant353 : true <- !inspect_nuclear_plant3531. 
+!inspect_nuclear_plant3531 : fast & .intend(inspect_nuclear_plant353, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield353_id512_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield353", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield353", "G(add_belief(perc_rad353(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield353", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield353").
+!inspect_nuclear_plant353 : true <- !inspect_nuclear_plant3531. 
+!inspect_nuclear_plant3531 : true & .intend(inspect_nuclear_plant353, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield353_id513_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield353", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield353", "G(add_belief(perc_rad353(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield353", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield353").
-!inspect_nuclear_plant353 : .intend(inspect_nuclear_plant353, I) & violated(I, "shield353", Cmds) & (count(I, "shield353", Count) | (not(count(I, "shield353", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant353.
-!inspect_nuclear_plant353 : .intend(inspect_nuclear_plant353, I) & (count(I, "shield353", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield353"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant354 : true <- !inspect_nuclear_plant3541. 
+!inspect_nuclear_plant3541 : fast & .intend(inspect_nuclear_plant354, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield354_id514_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield354", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield354", "G(add_belief(perc_rad354(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield354", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield354").
+!inspect_nuclear_plant354 : true <- !inspect_nuclear_plant3541. 
+!inspect_nuclear_plant3541 : true & .intend(inspect_nuclear_plant354, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield354_id515_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield354", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield354", "G(add_belief(perc_rad354(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield354", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield354").
-!inspect_nuclear_plant354 : .intend(inspect_nuclear_plant354, I) & violated(I, "shield354", Cmds) & (count(I, "shield354", Count) | (not(count(I, "shield354", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant354.
-!inspect_nuclear_plant354 : .intend(inspect_nuclear_plant354, I) & (count(I, "shield354", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield354"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant355 : true <- !inspect_nuclear_plant3551. 
+!inspect_nuclear_plant3551 : fast & .intend(inspect_nuclear_plant355, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield355_id516_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield355", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield355", "G(add_belief(perc_rad355(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield355", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield355").
+!inspect_nuclear_plant355 : true <- !inspect_nuclear_plant3551. 
+!inspect_nuclear_plant3551 : true & .intend(inspect_nuclear_plant355, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield355_id517_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield355", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield355", "G(add_belief(perc_rad355(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield355", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield355").
-!inspect_nuclear_plant355 : .intend(inspect_nuclear_plant355, I) & violated(I, "shield355", Cmds) & (count(I, "shield355", Count) | (not(count(I, "shield355", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant355.
-!inspect_nuclear_plant355 : .intend(inspect_nuclear_plant355, I) & (count(I, "shield355", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield355"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant356 : true <- !inspect_nuclear_plant3561. 
+!inspect_nuclear_plant3561 : fast & .intend(inspect_nuclear_plant356, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield356_id518_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield356", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield356", "G(add_belief(perc_rad356(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield356", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield356").
+!inspect_nuclear_plant356 : true <- !inspect_nuclear_plant3561. 
+!inspect_nuclear_plant3561 : true & .intend(inspect_nuclear_plant356, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield356_id519_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield356", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield356", "G(add_belief(perc_rad356(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield356", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield356").
-!inspect_nuclear_plant356 : .intend(inspect_nuclear_plant356, I) & violated(I, "shield356", Cmds) & (count(I, "shield356", Count) | (not(count(I, "shield356", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant356.
-!inspect_nuclear_plant356 : .intend(inspect_nuclear_plant356, I) & (count(I, "shield356", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield356"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant357 : true <- !inspect_nuclear_plant3571. 
+!inspect_nuclear_plant3571 : fast & .intend(inspect_nuclear_plant357, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield357_id520_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield357", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield357", "G(add_belief(perc_rad357(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield357", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield357").
+!inspect_nuclear_plant357 : true <- !inspect_nuclear_plant3571. 
+!inspect_nuclear_plant3571 : true & .intend(inspect_nuclear_plant357, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield357_id521_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield357", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield357", "G(add_belief(perc_rad357(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield357", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield357").
-!inspect_nuclear_plant357 : .intend(inspect_nuclear_plant357, I) & violated(I, "shield357", Cmds) & (count(I, "shield357", Count) | (not(count(I, "shield357", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant357.
-!inspect_nuclear_plant357 : .intend(inspect_nuclear_plant357, I) & (count(I, "shield357", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield357"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant358 : true <- !inspect_nuclear_plant3581. 
+!inspect_nuclear_plant3581 : fast & .intend(inspect_nuclear_plant358, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield358_id522_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield358", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield358", "G(add_belief(perc_rad358(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield358", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield358").
+!inspect_nuclear_plant358 : true <- !inspect_nuclear_plant3581. 
+!inspect_nuclear_plant3581 : true & .intend(inspect_nuclear_plant358, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield358_id523_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield358", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield358", "G(add_belief(perc_rad358(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield358", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield358").
-!inspect_nuclear_plant358 : .intend(inspect_nuclear_plant358, I) & violated(I, "shield358", Cmds) & (count(I, "shield358", Count) | (not(count(I, "shield358", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant358.
-!inspect_nuclear_plant358 : .intend(inspect_nuclear_plant358, I) & (count(I, "shield358", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield358"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant359 : true <- !inspect_nuclear_plant3591. 
+!inspect_nuclear_plant3591 : fast & .intend(inspect_nuclear_plant359, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield359_id524_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield359", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield359", "G(add_belief(perc_rad359(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield359", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield359").
+!inspect_nuclear_plant359 : true <- !inspect_nuclear_plant3591. 
+!inspect_nuclear_plant3591 : true & .intend(inspect_nuclear_plant359, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield359_id525_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield359", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield359", "G(add_belief(perc_rad359(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield359", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield359").
-!inspect_nuclear_plant359 : .intend(inspect_nuclear_plant359, I) & violated(I, "shield359", Cmds) & (count(I, "shield359", Count) | (not(count(I, "shield359", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant359.
-!inspect_nuclear_plant359 : .intend(inspect_nuclear_plant359, I) & (count(I, "shield359", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield359"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant360 : true <- !inspect_nuclear_plant3601. 
+!inspect_nuclear_plant3601 : fast & .intend(inspect_nuclear_plant360, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield360_id526_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield360", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield360", "G(add_belief(perc_rad360(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield360", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield360").
+!inspect_nuclear_plant360 : true <- !inspect_nuclear_plant3601. 
+!inspect_nuclear_plant3601 : true & .intend(inspect_nuclear_plant360, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield360_id527_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield360", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield360", "G(add_belief(perc_rad360(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield360", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield360").
-!inspect_nuclear_plant360 : .intend(inspect_nuclear_plant360, I) & violated(I, "shield360", Cmds) & (count(I, "shield360", Count) | (not(count(I, "shield360", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant360.
-!inspect_nuclear_plant360 : .intend(inspect_nuclear_plant360, I) & (count(I, "shield360", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield360"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant361 : true <- !inspect_nuclear_plant3611. 
+!inspect_nuclear_plant3611 : fast & .intend(inspect_nuclear_plant361, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield361_id528_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield361", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield361", "G(add_belief(perc_rad361(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield361", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield361").
+!inspect_nuclear_plant361 : true <- !inspect_nuclear_plant3611. 
+!inspect_nuclear_plant3611 : true & .intend(inspect_nuclear_plant361, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield361_id529_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield361", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield361", "G(add_belief(perc_rad361(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield361", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield361").
-!inspect_nuclear_plant361 : .intend(inspect_nuclear_plant361, I) & violated(I, "shield361", Cmds) & (count(I, "shield361", Count) | (not(count(I, "shield361", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant361.
-!inspect_nuclear_plant361 : .intend(inspect_nuclear_plant361, I) & (count(I, "shield361", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield361"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant362 : true <- !inspect_nuclear_plant3621. 
+!inspect_nuclear_plant3621 : fast & .intend(inspect_nuclear_plant362, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield362_id530_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield362", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield362", "G(add_belief(perc_rad362(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield362", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield362").
+!inspect_nuclear_plant362 : true <- !inspect_nuclear_plant3621. 
+!inspect_nuclear_plant3621 : true & .intend(inspect_nuclear_plant362, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield362_id531_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield362", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield362", "G(add_belief(perc_rad362(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield362", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield362").
-!inspect_nuclear_plant362 : .intend(inspect_nuclear_plant362, I) & violated(I, "shield362", Cmds) & (count(I, "shield362", Count) | (not(count(I, "shield362", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant362.
-!inspect_nuclear_plant362 : .intend(inspect_nuclear_plant362, I) & (count(I, "shield362", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield362"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant363 : true <- !inspect_nuclear_plant3631. 
+!inspect_nuclear_plant3631 : fast & .intend(inspect_nuclear_plant363, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield363_id532_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield363", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield363", "G(add_belief(perc_rad363(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield363", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield363").
+!inspect_nuclear_plant363 : true <- !inspect_nuclear_plant3631. 
+!inspect_nuclear_plant3631 : true & .intend(inspect_nuclear_plant363, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield363_id533_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield363", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield363", "G(add_belief(perc_rad363(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield363", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield363").
-!inspect_nuclear_plant363 : .intend(inspect_nuclear_plant363, I) & violated(I, "shield363", Cmds) & (count(I, "shield363", Count) | (not(count(I, "shield363", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant363.
-!inspect_nuclear_plant363 : .intend(inspect_nuclear_plant363, I) & (count(I, "shield363", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield363"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant364 : true <- !inspect_nuclear_plant3641. 
+!inspect_nuclear_plant3641 : fast & .intend(inspect_nuclear_plant364, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield364_id534_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield364", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield364", "G(add_belief(perc_rad364(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield364", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield364").
+!inspect_nuclear_plant364 : true <- !inspect_nuclear_plant3641. 
+!inspect_nuclear_plant3641 : true & .intend(inspect_nuclear_plant364, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield364_id535_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield364", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield364", "G(add_belief(perc_rad364(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield364", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield364").
-!inspect_nuclear_plant364 : .intend(inspect_nuclear_plant364, I) & violated(I, "shield364", Cmds) & (count(I, "shield364", Count) | (not(count(I, "shield364", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant364.
-!inspect_nuclear_plant364 : .intend(inspect_nuclear_plant364, I) & (count(I, "shield364", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield364"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant365 : true <- !inspect_nuclear_plant3651. 
+!inspect_nuclear_plant3651 : fast & .intend(inspect_nuclear_plant365, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield365_id536_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield365", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield365", "G(add_belief(perc_rad365(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield365", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield365").
+!inspect_nuclear_plant365 : true <- !inspect_nuclear_plant3651. 
+!inspect_nuclear_plant3651 : true & .intend(inspect_nuclear_plant365, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield365_id537_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield365", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield365", "G(add_belief(perc_rad365(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield365", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield365").
-!inspect_nuclear_plant365 : .intend(inspect_nuclear_plant365, I) & violated(I, "shield365", Cmds) & (count(I, "shield365", Count) | (not(count(I, "shield365", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant365.
-!inspect_nuclear_plant365 : .intend(inspect_nuclear_plant365, I) & (count(I, "shield365", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield365"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant366 : true <- !inspect_nuclear_plant3661. 
+!inspect_nuclear_plant3661 : fast & .intend(inspect_nuclear_plant366, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield366_id538_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield366", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield366", "G(add_belief(perc_rad366(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield366", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield366").
+!inspect_nuclear_plant366 : true <- !inspect_nuclear_plant3661. 
+!inspect_nuclear_plant3661 : true & .intend(inspect_nuclear_plant366, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield366_id539_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield366", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield366", "G(add_belief(perc_rad366(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield366", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield366").
-!inspect_nuclear_plant366 : .intend(inspect_nuclear_plant366, I) & violated(I, "shield366", Cmds) & (count(I, "shield366", Count) | (not(count(I, "shield366", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant366.
-!inspect_nuclear_plant366 : .intend(inspect_nuclear_plant366, I) & (count(I, "shield366", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield366"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant367 : true <- !inspect_nuclear_plant3671. 
+!inspect_nuclear_plant3671 : fast & .intend(inspect_nuclear_plant367, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield367_id540_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield367", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield367", "G(add_belief(perc_rad367(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield367", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield367").
+!inspect_nuclear_plant367 : true <- !inspect_nuclear_plant3671. 
+!inspect_nuclear_plant3671 : true & .intend(inspect_nuclear_plant367, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield367_id541_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield367", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield367", "G(add_belief(perc_rad367(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield367", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield367").
-!inspect_nuclear_plant367 : .intend(inspect_nuclear_plant367, I) & violated(I, "shield367", Cmds) & (count(I, "shield367", Count) | (not(count(I, "shield367", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant367.
-!inspect_nuclear_plant367 : .intend(inspect_nuclear_plant367, I) & (count(I, "shield367", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield367"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant368 : true <- !inspect_nuclear_plant3681. 
+!inspect_nuclear_plant3681 : fast & .intend(inspect_nuclear_plant368, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield368_id542_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield368", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield368", "G(add_belief(perc_rad368(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield368", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield368").
+!inspect_nuclear_plant368 : true <- !inspect_nuclear_plant3681. 
+!inspect_nuclear_plant3681 : true & .intend(inspect_nuclear_plant368, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield368_id543_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield368", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield368", "G(add_belief(perc_rad368(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield368", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield368").
-!inspect_nuclear_plant368 : .intend(inspect_nuclear_plant368, I) & violated(I, "shield368", Cmds) & (count(I, "shield368", Count) | (not(count(I, "shield368", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant368.
-!inspect_nuclear_plant368 : .intend(inspect_nuclear_plant368, I) & (count(I, "shield368", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield368"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant369 : true <- !inspect_nuclear_plant3691. 
+!inspect_nuclear_plant3691 : fast & .intend(inspect_nuclear_plant369, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield369_id544_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield369", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield369", "G(add_belief(perc_rad369(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield369", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield369").
+!inspect_nuclear_plant369 : true <- !inspect_nuclear_plant3691. 
+!inspect_nuclear_plant3691 : true & .intend(inspect_nuclear_plant369, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield369_id545_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield369", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield369", "G(add_belief(perc_rad369(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield369", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield369").
-!inspect_nuclear_plant369 : .intend(inspect_nuclear_plant369, I) & violated(I, "shield369", Cmds) & (count(I, "shield369", Count) | (not(count(I, "shield369", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant369.
-!inspect_nuclear_plant369 : .intend(inspect_nuclear_plant369, I) & (count(I, "shield369", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield369"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant370 : true <- !inspect_nuclear_plant3701. 
+!inspect_nuclear_plant3701 : fast & .intend(inspect_nuclear_plant370, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield370_id546_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield370", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield370", "G(add_belief(perc_rad370(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield370", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield370").
+!inspect_nuclear_plant370 : true <- !inspect_nuclear_plant3701. 
+!inspect_nuclear_plant3701 : true & .intend(inspect_nuclear_plant370, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield370_id547_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield370", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield370", "G(add_belief(perc_rad370(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield370", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield370").
-!inspect_nuclear_plant370 : .intend(inspect_nuclear_plant370, I) & violated(I, "shield370", Cmds) & (count(I, "shield370", Count) | (not(count(I, "shield370", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant370.
-!inspect_nuclear_plant370 : .intend(inspect_nuclear_plant370, I) & (count(I, "shield370", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield370"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant371 : true <- !inspect_nuclear_plant3711. 
+!inspect_nuclear_plant3711 : fast & .intend(inspect_nuclear_plant371, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield371_id548_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield371", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield371", "G(add_belief(perc_rad371(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield371", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield371").
+!inspect_nuclear_plant371 : true <- !inspect_nuclear_plant3711. 
+!inspect_nuclear_plant3711 : true & .intend(inspect_nuclear_plant371, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield371_id549_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield371", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield371", "G(add_belief(perc_rad371(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield371", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield371").
-!inspect_nuclear_plant371 : .intend(inspect_nuclear_plant371, I) & violated(I, "shield371", Cmds) & (count(I, "shield371", Count) | (not(count(I, "shield371", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant371.
-!inspect_nuclear_plant371 : .intend(inspect_nuclear_plant371, I) & (count(I, "shield371", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield371"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant372 : true <- !inspect_nuclear_plant3721. 
+!inspect_nuclear_plant3721 : fast & .intend(inspect_nuclear_plant372, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield372_id550_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield372", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield372", "G(add_belief(perc_rad372(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield372", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield372").
+!inspect_nuclear_plant372 : true <- !inspect_nuclear_plant3721. 
+!inspect_nuclear_plant3721 : true & .intend(inspect_nuclear_plant372, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield372_id551_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield372", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield372", "G(add_belief(perc_rad372(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield372", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield372").
-!inspect_nuclear_plant372 : .intend(inspect_nuclear_plant372, I) & violated(I, "shield372", Cmds) & (count(I, "shield372", Count) | (not(count(I, "shield372", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant372.
-!inspect_nuclear_plant372 : .intend(inspect_nuclear_plant372, I) & (count(I, "shield372", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield372"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant373 : true <- !inspect_nuclear_plant3731. 
+!inspect_nuclear_plant3731 : fast & .intend(inspect_nuclear_plant373, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield373_id552_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield373", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield373", "G(add_belief(perc_rad373(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield373", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield373").
+!inspect_nuclear_plant373 : true <- !inspect_nuclear_plant3731. 
+!inspect_nuclear_plant3731 : true & .intend(inspect_nuclear_plant373, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield373_id553_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield373", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield373", "G(add_belief(perc_rad373(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield373", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield373").
-!inspect_nuclear_plant373 : .intend(inspect_nuclear_plant373, I) & violated(I, "shield373", Cmds) & (count(I, "shield373", Count) | (not(count(I, "shield373", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant373.
-!inspect_nuclear_plant373 : .intend(inspect_nuclear_plant373, I) & (count(I, "shield373", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield373"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant374 : true <- !inspect_nuclear_plant3741. 
+!inspect_nuclear_plant3741 : fast & .intend(inspect_nuclear_plant374, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield374_id554_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield374", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield374", "G(add_belief(perc_rad374(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield374", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield374").
+!inspect_nuclear_plant374 : true <- !inspect_nuclear_plant3741. 
+!inspect_nuclear_plant3741 : true & .intend(inspect_nuclear_plant374, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield374_id555_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield374", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield374", "G(add_belief(perc_rad374(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield374", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield374").
-!inspect_nuclear_plant374 : .intend(inspect_nuclear_plant374, I) & violated(I, "shield374", Cmds) & (count(I, "shield374", Count) | (not(count(I, "shield374", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant374.
-!inspect_nuclear_plant374 : .intend(inspect_nuclear_plant374, I) & (count(I, "shield374", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield374"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant375 : true <- !inspect_nuclear_plant3751. 
+!inspect_nuclear_plant3751 : fast & .intend(inspect_nuclear_plant375, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield375_id556_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield375", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield375", "G(add_belief(perc_rad375(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield375", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield375").
+!inspect_nuclear_plant375 : true <- !inspect_nuclear_plant3751. 
+!inspect_nuclear_plant3751 : true & .intend(inspect_nuclear_plant375, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield375_id557_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield375", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield375", "G(add_belief(perc_rad375(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield375", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield375").
-!inspect_nuclear_plant375 : .intend(inspect_nuclear_plant375, I) & violated(I, "shield375", Cmds) & (count(I, "shield375", Count) | (not(count(I, "shield375", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant375.
-!inspect_nuclear_plant375 : .intend(inspect_nuclear_plant375, I) & (count(I, "shield375", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield375"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant376 : true <- !inspect_nuclear_plant3761. 
+!inspect_nuclear_plant3761 : fast & .intend(inspect_nuclear_plant376, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield376_id558_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield376", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield376", "G(add_belief(perc_rad376(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield376", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield376").
+!inspect_nuclear_plant376 : true <- !inspect_nuclear_plant3761. 
+!inspect_nuclear_plant3761 : true & .intend(inspect_nuclear_plant376, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield376_id559_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield376", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield376", "G(add_belief(perc_rad376(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield376", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield376").
-!inspect_nuclear_plant376 : .intend(inspect_nuclear_plant376, I) & violated(I, "shield376", Cmds) & (count(I, "shield376", Count) | (not(count(I, "shield376", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant376.
-!inspect_nuclear_plant376 : .intend(inspect_nuclear_plant376, I) & (count(I, "shield376", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield376"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant377 : true <- !inspect_nuclear_plant3771. 
+!inspect_nuclear_plant3771 : fast & .intend(inspect_nuclear_plant377, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield377_id560_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield377", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield377", "G(add_belief(perc_rad377(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield377", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield377").
+!inspect_nuclear_plant377 : true <- !inspect_nuclear_plant3771. 
+!inspect_nuclear_plant3771 : true & .intend(inspect_nuclear_plant377, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield377_id561_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield377", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield377", "G(add_belief(perc_rad377(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield377", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield377").
-!inspect_nuclear_plant377 : .intend(inspect_nuclear_plant377, I) & violated(I, "shield377", Cmds) & (count(I, "shield377", Count) | (not(count(I, "shield377", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant377.
-!inspect_nuclear_plant377 : .intend(inspect_nuclear_plant377, I) & (count(I, "shield377", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield377"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant378 : true <- !inspect_nuclear_plant3781. 
+!inspect_nuclear_plant3781 : fast & .intend(inspect_nuclear_plant378, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield378_id562_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield378", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield378", "G(add_belief(perc_rad378(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield378", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield378").
+!inspect_nuclear_plant378 : true <- !inspect_nuclear_plant3781. 
+!inspect_nuclear_plant3781 : true & .intend(inspect_nuclear_plant378, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield378_id563_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield378", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield378", "G(add_belief(perc_rad378(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield378", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield378").
-!inspect_nuclear_plant378 : .intend(inspect_nuclear_plant378, I) & violated(I, "shield378", Cmds) & (count(I, "shield378", Count) | (not(count(I, "shield378", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant378.
-!inspect_nuclear_plant378 : .intend(inspect_nuclear_plant378, I) & (count(I, "shield378", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield378"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant379 : true <- !inspect_nuclear_plant3791. 
+!inspect_nuclear_plant3791 : fast & .intend(inspect_nuclear_plant379, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield379_id564_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield379", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield379", "G(add_belief(perc_rad379(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield379", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield379").
+!inspect_nuclear_plant379 : true <- !inspect_nuclear_plant3791. 
+!inspect_nuclear_plant3791 : true & .intend(inspect_nuclear_plant379, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield379_id565_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield379", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield379", "G(add_belief(perc_rad379(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield379", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield379").
-!inspect_nuclear_plant379 : .intend(inspect_nuclear_plant379, I) & violated(I, "shield379", Cmds) & (count(I, "shield379", Count) | (not(count(I, "shield379", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant379.
-!inspect_nuclear_plant379 : .intend(inspect_nuclear_plant379, I) & (count(I, "shield379", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield379"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant380 : true <- !inspect_nuclear_plant3801. 
+!inspect_nuclear_plant3801 : fast & .intend(inspect_nuclear_plant380, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield380_id566_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield380", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield380", "G(add_belief(perc_rad380(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield380", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield380").
+!inspect_nuclear_plant380 : true <- !inspect_nuclear_plant3801. 
+!inspect_nuclear_plant3801 : true & .intend(inspect_nuclear_plant380, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield380_id567_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield380", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield380", "G(add_belief(perc_rad380(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield380", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield380").
-!inspect_nuclear_plant380 : .intend(inspect_nuclear_plant380, I) & violated(I, "shield380", Cmds) & (count(I, "shield380", Count) | (not(count(I, "shield380", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant380.
-!inspect_nuclear_plant380 : .intend(inspect_nuclear_plant380, I) & (count(I, "shield380", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield380"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant381 : true <- !inspect_nuclear_plant3811. 
+!inspect_nuclear_plant3811 : fast & .intend(inspect_nuclear_plant381, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield381_id568_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield381", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield381", "G(add_belief(perc_rad381(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield381", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield381").
+!inspect_nuclear_plant381 : true <- !inspect_nuclear_plant3811. 
+!inspect_nuclear_plant3811 : true & .intend(inspect_nuclear_plant381, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield381_id569_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield381", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield381", "G(add_belief(perc_rad381(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield381", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield381").
-!inspect_nuclear_plant381 : .intend(inspect_nuclear_plant381, I) & violated(I, "shield381", Cmds) & (count(I, "shield381", Count) | (not(count(I, "shield381", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant381.
-!inspect_nuclear_plant381 : .intend(inspect_nuclear_plant381, I) & (count(I, "shield381", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield381"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant382 : true <- !inspect_nuclear_plant3821. 
+!inspect_nuclear_plant3821 : fast & .intend(inspect_nuclear_plant382, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield382_id570_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield382", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield382", "G(add_belief(perc_rad382(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield382", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield382").
+!inspect_nuclear_plant382 : true <- !inspect_nuclear_plant3821. 
+!inspect_nuclear_plant3821 : true & .intend(inspect_nuclear_plant382, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield382_id571_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield382", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield382", "G(add_belief(perc_rad382(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield382", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield382").
-!inspect_nuclear_plant382 : .intend(inspect_nuclear_plant382, I) & violated(I, "shield382", Cmds) & (count(I, "shield382", Count) | (not(count(I, "shield382", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant382.
-!inspect_nuclear_plant382 : .intend(inspect_nuclear_plant382, I) & (count(I, "shield382", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield382"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant383 : true <- !inspect_nuclear_plant3831. 
+!inspect_nuclear_plant3831 : fast & .intend(inspect_nuclear_plant383, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield383_id572_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield383", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield383", "G(add_belief(perc_rad383(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield383", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield383").
+!inspect_nuclear_plant383 : true <- !inspect_nuclear_plant3831. 
+!inspect_nuclear_plant3831 : true & .intend(inspect_nuclear_plant383, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield383_id573_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield383", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield383", "G(add_belief(perc_rad383(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield383", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield383").
-!inspect_nuclear_plant383 : .intend(inspect_nuclear_plant383, I) & violated(I, "shield383", Cmds) & (count(I, "shield383", Count) | (not(count(I, "shield383", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant383.
-!inspect_nuclear_plant383 : .intend(inspect_nuclear_plant383, I) & (count(I, "shield383", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield383"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant384 : true <- !inspect_nuclear_plant3841. 
+!inspect_nuclear_plant3841 : fast & .intend(inspect_nuclear_plant384, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield384_id574_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield384", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield384", "G(add_belief(perc_rad384(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield384", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield384").
+!inspect_nuclear_plant384 : true <- !inspect_nuclear_plant3841. 
+!inspect_nuclear_plant3841 : true & .intend(inspect_nuclear_plant384, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield384_id575_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield384", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield384", "G(add_belief(perc_rad384(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield384", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield384").
-!inspect_nuclear_plant384 : .intend(inspect_nuclear_plant384, I) & violated(I, "shield384", Cmds) & (count(I, "shield384", Count) | (not(count(I, "shield384", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant384.
-!inspect_nuclear_plant384 : .intend(inspect_nuclear_plant384, I) & (count(I, "shield384", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield384"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant385 : true <- !inspect_nuclear_plant3851. 
+!inspect_nuclear_plant3851 : fast & .intend(inspect_nuclear_plant385, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield385_id576_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield385", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield385", "G(add_belief(perc_rad385(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield385", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield385").
+!inspect_nuclear_plant385 : true <- !inspect_nuclear_plant3851. 
+!inspect_nuclear_plant3851 : true & .intend(inspect_nuclear_plant385, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield385_id577_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield385", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield385", "G(add_belief(perc_rad385(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield385", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield385").
-!inspect_nuclear_plant385 : .intend(inspect_nuclear_plant385, I) & violated(I, "shield385", Cmds) & (count(I, "shield385", Count) | (not(count(I, "shield385", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant385.
-!inspect_nuclear_plant385 : .intend(inspect_nuclear_plant385, I) & (count(I, "shield385", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield385"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant386 : true <- !inspect_nuclear_plant3861. 
+!inspect_nuclear_plant3861 : fast & .intend(inspect_nuclear_plant386, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield386_id578_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield386", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield386", "G(add_belief(perc_rad386(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield386", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield386").
+!inspect_nuclear_plant386 : true <- !inspect_nuclear_plant3861. 
+!inspect_nuclear_plant3861 : true & .intend(inspect_nuclear_plant386, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield386_id579_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield386", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield386", "G(add_belief(perc_rad386(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield386", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield386").
-!inspect_nuclear_plant386 : .intend(inspect_nuclear_plant386, I) & violated(I, "shield386", Cmds) & (count(I, "shield386", Count) | (not(count(I, "shield386", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant386.
-!inspect_nuclear_plant386 : .intend(inspect_nuclear_plant386, I) & (count(I, "shield386", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield386"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant387 : true <- !inspect_nuclear_plant3871. 
+!inspect_nuclear_plant3871 : fast & .intend(inspect_nuclear_plant387, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield387_id580_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield387", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield387", "G(add_belief(perc_rad387(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield387", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield387").
+!inspect_nuclear_plant387 : true <- !inspect_nuclear_plant3871. 
+!inspect_nuclear_plant3871 : true & .intend(inspect_nuclear_plant387, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield387_id581_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield387", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield387", "G(add_belief(perc_rad387(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield387", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield387").
-!inspect_nuclear_plant387 : .intend(inspect_nuclear_plant387, I) & violated(I, "shield387", Cmds) & (count(I, "shield387", Count) | (not(count(I, "shield387", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant387.
-!inspect_nuclear_plant387 : .intend(inspect_nuclear_plant387, I) & (count(I, "shield387", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield387"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant388 : true <- !inspect_nuclear_plant3881. 
+!inspect_nuclear_plant3881 : fast & .intend(inspect_nuclear_plant388, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield388_id582_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield388", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield388", "G(add_belief(perc_rad388(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield388", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield388").
+!inspect_nuclear_plant388 : true <- !inspect_nuclear_plant3881. 
+!inspect_nuclear_plant3881 : true & .intend(inspect_nuclear_plant388, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield388_id583_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield388", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield388", "G(add_belief(perc_rad388(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield388", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield388").
-!inspect_nuclear_plant388 : .intend(inspect_nuclear_plant388, I) & violated(I, "shield388", Cmds) & (count(I, "shield388", Count) | (not(count(I, "shield388", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant388.
-!inspect_nuclear_plant388 : .intend(inspect_nuclear_plant388, I) & (count(I, "shield388", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield388"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant389 : true <- !inspect_nuclear_plant3891. 
+!inspect_nuclear_plant3891 : fast & .intend(inspect_nuclear_plant389, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield389_id584_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield389", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield389", "G(add_belief(perc_rad389(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield389", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield389").
+!inspect_nuclear_plant389 : true <- !inspect_nuclear_plant3891. 
+!inspect_nuclear_plant3891 : true & .intend(inspect_nuclear_plant389, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield389_id585_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield389", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield389", "G(add_belief(perc_rad389(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield389", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield389").
-!inspect_nuclear_plant389 : .intend(inspect_nuclear_plant389, I) & violated(I, "shield389", Cmds) & (count(I, "shield389", Count) | (not(count(I, "shield389", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant389.
-!inspect_nuclear_plant389 : .intend(inspect_nuclear_plant389, I) & (count(I, "shield389", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield389"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant390 : true <- !inspect_nuclear_plant3901. 
+!inspect_nuclear_plant3901 : fast & .intend(inspect_nuclear_plant390, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield390_id586_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield390", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield390", "G(add_belief(perc_rad390(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield390", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield390").
+!inspect_nuclear_plant390 : true <- !inspect_nuclear_plant3901. 
+!inspect_nuclear_plant3901 : true & .intend(inspect_nuclear_plant390, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield390_id587_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield390", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield390", "G(add_belief(perc_rad390(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield390", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield390").
-!inspect_nuclear_plant390 : .intend(inspect_nuclear_plant390, I) & violated(I, "shield390", Cmds) & (count(I, "shield390", Count) | (not(count(I, "shield390", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant390.
-!inspect_nuclear_plant390 : .intend(inspect_nuclear_plant390, I) & (count(I, "shield390", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield390"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant391 : true <- !inspect_nuclear_plant3911. 
+!inspect_nuclear_plant3911 : fast & .intend(inspect_nuclear_plant391, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield391_id588_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield391", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield391", "G(add_belief(perc_rad391(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield391", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield391").
+!inspect_nuclear_plant391 : true <- !inspect_nuclear_plant3911. 
+!inspect_nuclear_plant3911 : true & .intend(inspect_nuclear_plant391, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield391_id589_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield391", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield391", "G(add_belief(perc_rad391(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield391", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield391").
-!inspect_nuclear_plant391 : .intend(inspect_nuclear_plant391, I) & violated(I, "shield391", Cmds) & (count(I, "shield391", Count) | (not(count(I, "shield391", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant391.
-!inspect_nuclear_plant391 : .intend(inspect_nuclear_plant391, I) & (count(I, "shield391", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield391"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant392 : true <- !inspect_nuclear_plant3921. 
+!inspect_nuclear_plant3921 : fast & .intend(inspect_nuclear_plant392, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield392_id590_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield392", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield392", "G(add_belief(perc_rad392(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield392", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield392").
+!inspect_nuclear_plant392 : true <- !inspect_nuclear_plant3921. 
+!inspect_nuclear_plant3921 : true & .intend(inspect_nuclear_plant392, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield392_id591_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield392", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield392", "G(add_belief(perc_rad392(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield392", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield392").
-!inspect_nuclear_plant392 : .intend(inspect_nuclear_plant392, I) & violated(I, "shield392", Cmds) & (count(I, "shield392", Count) | (not(count(I, "shield392", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant392.
-!inspect_nuclear_plant392 : .intend(inspect_nuclear_plant392, I) & (count(I, "shield392", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield392"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant393 : true <- !inspect_nuclear_plant3931. 
+!inspect_nuclear_plant3931 : fast & .intend(inspect_nuclear_plant393, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield393_id592_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield393", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield393", "G(add_belief(perc_rad393(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield393", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield393").
+!inspect_nuclear_plant393 : true <- !inspect_nuclear_plant3931. 
+!inspect_nuclear_plant3931 : true & .intend(inspect_nuclear_plant393, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield393_id593_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield393", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield393", "G(add_belief(perc_rad393(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield393", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield393").
-!inspect_nuclear_plant393 : .intend(inspect_nuclear_plant393, I) & violated(I, "shield393", Cmds) & (count(I, "shield393", Count) | (not(count(I, "shield393", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant393.
-!inspect_nuclear_plant393 : .intend(inspect_nuclear_plant393, I) & (count(I, "shield393", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield393"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant394 : true <- !inspect_nuclear_plant3941. 
+!inspect_nuclear_plant3941 : fast & .intend(inspect_nuclear_plant394, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield394_id594_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield394", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield394", "G(add_belief(perc_rad394(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield394", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield394").
+!inspect_nuclear_plant394 : true <- !inspect_nuclear_plant3941. 
+!inspect_nuclear_plant3941 : true & .intend(inspect_nuclear_plant394, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield394_id595_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield394", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield394", "G(add_belief(perc_rad394(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield394", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield394").
-!inspect_nuclear_plant394 : .intend(inspect_nuclear_plant394, I) & violated(I, "shield394", Cmds) & (count(I, "shield394", Count) | (not(count(I, "shield394", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant394.
-!inspect_nuclear_plant394 : .intend(inspect_nuclear_plant394, I) & (count(I, "shield394", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield394"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant395 : true <- !inspect_nuclear_plant3951. 
+!inspect_nuclear_plant3951 : fast & .intend(inspect_nuclear_plant395, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield395_id596_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield395", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield395", "G(add_belief(perc_rad395(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield395", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield395").
+!inspect_nuclear_plant395 : true <- !inspect_nuclear_plant3951. 
+!inspect_nuclear_plant3951 : true & .intend(inspect_nuclear_plant395, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield395_id597_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield395", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield395", "G(add_belief(perc_rad395(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield395", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield395").
-!inspect_nuclear_plant395 : .intend(inspect_nuclear_plant395, I) & violated(I, "shield395", Cmds) & (count(I, "shield395", Count) | (not(count(I, "shield395", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant395.
-!inspect_nuclear_plant395 : .intend(inspect_nuclear_plant395, I) & (count(I, "shield395", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield395"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant396 : true <- !inspect_nuclear_plant3961. 
+!inspect_nuclear_plant3961 : fast & .intend(inspect_nuclear_plant396, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield396_id598_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield396", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield396", "G(add_belief(perc_rad396(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield396", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield396").
+!inspect_nuclear_plant396 : true <- !inspect_nuclear_plant3961. 
+!inspect_nuclear_plant3961 : true & .intend(inspect_nuclear_plant396, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield396_id599_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield396", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield396", "G(add_belief(perc_rad396(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield396", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield396").
-!inspect_nuclear_plant396 : .intend(inspect_nuclear_plant396, I) & violated(I, "shield396", Cmds) & (count(I, "shield396", Count) | (not(count(I, "shield396", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant396.
-!inspect_nuclear_plant396 : .intend(inspect_nuclear_plant396, I) & (count(I, "shield396", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield396"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant397 : true <- !inspect_nuclear_plant3971. 
+!inspect_nuclear_plant3971 : fast & .intend(inspect_nuclear_plant397, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield397_id600_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield397", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield397", "G(add_belief(perc_rad397(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield397", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield397").
+!inspect_nuclear_plant397 : true <- !inspect_nuclear_plant3971. 
+!inspect_nuclear_plant3971 : true & .intend(inspect_nuclear_plant397, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield397_id601_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield397", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield397", "G(add_belief(perc_rad397(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield397", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield397").
-!inspect_nuclear_plant397 : .intend(inspect_nuclear_plant397, I) & violated(I, "shield397", Cmds) & (count(I, "shield397", Count) | (not(count(I, "shield397", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant397.
-!inspect_nuclear_plant397 : .intend(inspect_nuclear_plant397, I) & (count(I, "shield397", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield397"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant398 : true <- !inspect_nuclear_plant3981. 
+!inspect_nuclear_plant3981 : fast & .intend(inspect_nuclear_plant398, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield398_id602_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield398", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield398", "G(add_belief(perc_rad398(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield398", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield398").
+!inspect_nuclear_plant398 : true <- !inspect_nuclear_plant3981. 
+!inspect_nuclear_plant3981 : true & .intend(inspect_nuclear_plant398, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield398_id603_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield398", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield398", "G(add_belief(perc_rad398(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield398", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield398").
-!inspect_nuclear_plant398 : .intend(inspect_nuclear_plant398, I) & violated(I, "shield398", Cmds) & (count(I, "shield398", Count) | (not(count(I, "shield398", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant398.
-!inspect_nuclear_plant398 : .intend(inspect_nuclear_plant398, I) & (count(I, "shield398", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield398"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant399 : true <- !inspect_nuclear_plant3991. 
+!inspect_nuclear_plant3991 : fast & .intend(inspect_nuclear_plant399, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield399_id604_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield399", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield399", "G(add_belief(perc_rad399(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield399", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield399").
+!inspect_nuclear_plant399 : true <- !inspect_nuclear_plant3991. 
+!inspect_nuclear_plant3991 : true & .intend(inspect_nuclear_plant399, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield399_id605_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield399", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield399", "G(add_belief(perc_rad399(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield399", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield399").
-!inspect_nuclear_plant399 : .intend(inspect_nuclear_plant399, I) & violated(I, "shield399", Cmds) & (count(I, "shield399", Count) | (not(count(I, "shield399", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant399.
-!inspect_nuclear_plant399 : .intend(inspect_nuclear_plant399, I) & (count(I, "shield399", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield399"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant400 : true <- !inspect_nuclear_plant4001. 
+!inspect_nuclear_plant4001 : fast & .intend(inspect_nuclear_plant400, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield400_id606_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield400", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield400", "G(add_belief(perc_rad400(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield400", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield400").
+!inspect_nuclear_plant400 : true <- !inspect_nuclear_plant4001. 
+!inspect_nuclear_plant4001 : true & .intend(inspect_nuclear_plant400, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield400_id607_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield400", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield400", "G(add_belief(perc_rad400(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield400", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield400").
-!inspect_nuclear_plant400 : .intend(inspect_nuclear_plant400, I) & violated(I, "shield400", Cmds) & (count(I, "shield400", Count) | (not(count(I, "shield400", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant400.
-!inspect_nuclear_plant400 : .intend(inspect_nuclear_plant400, I) & (count(I, "shield400", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield400"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant401 : true <- !inspect_nuclear_plant4011. 
+!inspect_nuclear_plant4011 : fast & .intend(inspect_nuclear_plant401, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield401_id608_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield401", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield401", "G(add_belief(perc_rad401(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield401", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield401").
+!inspect_nuclear_plant401 : true <- !inspect_nuclear_plant4011. 
+!inspect_nuclear_plant4011 : true & .intend(inspect_nuclear_plant401, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield401_id609_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield401", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield401", "G(add_belief(perc_rad401(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield401", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield401").
-!inspect_nuclear_plant401 : .intend(inspect_nuclear_plant401, I) & violated(I, "shield401", Cmds) & (count(I, "shield401", Count) | (not(count(I, "shield401", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant401.
-!inspect_nuclear_plant401 : .intend(inspect_nuclear_plant401, I) & (count(I, "shield401", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield401"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant402 : true <- !inspect_nuclear_plant4021. 
+!inspect_nuclear_plant4021 : fast & .intend(inspect_nuclear_plant402, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield402_id610_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield402", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield402", "G(add_belief(perc_rad402(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield402", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield402").
+!inspect_nuclear_plant402 : true <- !inspect_nuclear_plant4021. 
+!inspect_nuclear_plant4021 : true & .intend(inspect_nuclear_plant402, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield402_id611_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield402", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield402", "G(add_belief(perc_rad402(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield402", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield402").
-!inspect_nuclear_plant402 : .intend(inspect_nuclear_plant402, I) & violated(I, "shield402", Cmds) & (count(I, "shield402", Count) | (not(count(I, "shield402", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant402.
-!inspect_nuclear_plant402 : .intend(inspect_nuclear_plant402, I) & (count(I, "shield402", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield402"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant403 : true <- !inspect_nuclear_plant4031. 
+!inspect_nuclear_plant4031 : fast & .intend(inspect_nuclear_plant403, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield403_id612_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield403", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield403", "G(add_belief(perc_rad403(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield403", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield403").
+!inspect_nuclear_plant403 : true <- !inspect_nuclear_plant4031. 
+!inspect_nuclear_plant4031 : true & .intend(inspect_nuclear_plant403, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield403_id613_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield403", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield403", "G(add_belief(perc_rad403(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield403", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield403").
-!inspect_nuclear_plant403 : .intend(inspect_nuclear_plant403, I) & violated(I, "shield403", Cmds) & (count(I, "shield403", Count) | (not(count(I, "shield403", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant403.
-!inspect_nuclear_plant403 : .intend(inspect_nuclear_plant403, I) & (count(I, "shield403", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield403"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant404 : true <- !inspect_nuclear_plant4041. 
+!inspect_nuclear_plant4041 : fast & .intend(inspect_nuclear_plant404, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield404_id614_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield404", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield404", "G(add_belief(perc_rad404(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield404", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield404").
+!inspect_nuclear_plant404 : true <- !inspect_nuclear_plant4041. 
+!inspect_nuclear_plant4041 : true & .intend(inspect_nuclear_plant404, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield404_id615_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield404", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield404", "G(add_belief(perc_rad404(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield404", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield404").
-!inspect_nuclear_plant404 : .intend(inspect_nuclear_plant404, I) & violated(I, "shield404", Cmds) & (count(I, "shield404", Count) | (not(count(I, "shield404", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant404.
-!inspect_nuclear_plant404 : .intend(inspect_nuclear_plant404, I) & (count(I, "shield404", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield404"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant405 : true <- !inspect_nuclear_plant4051. 
+!inspect_nuclear_plant4051 : fast & .intend(inspect_nuclear_plant405, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield405_id616_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield405", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield405", "G(add_belief(perc_rad405(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield405", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield405").
+!inspect_nuclear_plant405 : true <- !inspect_nuclear_plant4051. 
+!inspect_nuclear_plant4051 : true & .intend(inspect_nuclear_plant405, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield405_id617_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield405", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield405", "G(add_belief(perc_rad405(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield405", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield405").
-!inspect_nuclear_plant405 : .intend(inspect_nuclear_plant405, I) & violated(I, "shield405", Cmds) & (count(I, "shield405", Count) | (not(count(I, "shield405", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant405.
-!inspect_nuclear_plant405 : .intend(inspect_nuclear_plant405, I) & (count(I, "shield405", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield405"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant406 : true <- !inspect_nuclear_plant4061. 
+!inspect_nuclear_plant4061 : fast & .intend(inspect_nuclear_plant406, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield406_id618_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield406", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield406", "G(add_belief(perc_rad406(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield406", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield406").
+!inspect_nuclear_plant406 : true <- !inspect_nuclear_plant4061. 
+!inspect_nuclear_plant4061 : true & .intend(inspect_nuclear_plant406, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield406_id619_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield406", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield406", "G(add_belief(perc_rad406(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield406", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield406").
-!inspect_nuclear_plant406 : .intend(inspect_nuclear_plant406, I) & violated(I, "shield406", Cmds) & (count(I, "shield406", Count) | (not(count(I, "shield406", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant406.
-!inspect_nuclear_plant406 : .intend(inspect_nuclear_plant406, I) & (count(I, "shield406", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield406"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant407 : true <- !inspect_nuclear_plant4071. 
+!inspect_nuclear_plant4071 : fast & .intend(inspect_nuclear_plant407, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield407_id620_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield407", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield407", "G(add_belief(perc_rad407(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield407", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield407").
+!inspect_nuclear_plant407 : true <- !inspect_nuclear_plant4071. 
+!inspect_nuclear_plant4071 : true & .intend(inspect_nuclear_plant407, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield407_id621_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield407", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield407", "G(add_belief(perc_rad407(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield407", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield407").
-!inspect_nuclear_plant407 : .intend(inspect_nuclear_plant407, I) & violated(I, "shield407", Cmds) & (count(I, "shield407", Count) | (not(count(I, "shield407", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant407.
-!inspect_nuclear_plant407 : .intend(inspect_nuclear_plant407, I) & (count(I, "shield407", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield407"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant408 : true <- !inspect_nuclear_plant4081. 
+!inspect_nuclear_plant4081 : fast & .intend(inspect_nuclear_plant408, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield408_id622_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield408", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield408", "G(add_belief(perc_rad408(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield408", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield408").
+!inspect_nuclear_plant408 : true <- !inspect_nuclear_plant4081. 
+!inspect_nuclear_plant4081 : true & .intend(inspect_nuclear_plant408, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield408_id623_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield408", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield408", "G(add_belief(perc_rad408(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield408", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield408").
-!inspect_nuclear_plant408 : .intend(inspect_nuclear_plant408, I) & violated(I, "shield408", Cmds) & (count(I, "shield408", Count) | (not(count(I, "shield408", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant408.
-!inspect_nuclear_plant408 : .intend(inspect_nuclear_plant408, I) & (count(I, "shield408", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield408"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant409 : true <- !inspect_nuclear_plant4091. 
+!inspect_nuclear_plant4091 : fast & .intend(inspect_nuclear_plant409, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield409_id624_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield409", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield409", "G(add_belief(perc_rad409(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield409", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield409").
+!inspect_nuclear_plant409 : true <- !inspect_nuclear_plant4091. 
+!inspect_nuclear_plant4091 : true & .intend(inspect_nuclear_plant409, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield409_id625_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield409", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield409", "G(add_belief(perc_rad409(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield409", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield409").
-!inspect_nuclear_plant409 : .intend(inspect_nuclear_plant409, I) & violated(I, "shield409", Cmds) & (count(I, "shield409", Count) | (not(count(I, "shield409", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant409.
-!inspect_nuclear_plant409 : .intend(inspect_nuclear_plant409, I) & (count(I, "shield409", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield409"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant410 : true <- !inspect_nuclear_plant4101. 
+!inspect_nuclear_plant4101 : fast & .intend(inspect_nuclear_plant410, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield410_id626_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield410", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield410", "G(add_belief(perc_rad410(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield410", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield410").
+!inspect_nuclear_plant410 : true <- !inspect_nuclear_plant4101. 
+!inspect_nuclear_plant4101 : true & .intend(inspect_nuclear_plant410, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield410_id627_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield410", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield410", "G(add_belief(perc_rad410(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield410", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield410").
-!inspect_nuclear_plant410 : .intend(inspect_nuclear_plant410, I) & violated(I, "shield410", Cmds) & (count(I, "shield410", Count) | (not(count(I, "shield410", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant410.
-!inspect_nuclear_plant410 : .intend(inspect_nuclear_plant410, I) & (count(I, "shield410", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield410"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant411 : true <- !inspect_nuclear_plant4111. 
+!inspect_nuclear_plant4111 : fast & .intend(inspect_nuclear_plant411, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield411_id628_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield411", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield411", "G(add_belief(perc_rad411(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield411", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield411").
+!inspect_nuclear_plant411 : true <- !inspect_nuclear_plant4111. 
+!inspect_nuclear_plant4111 : true & .intend(inspect_nuclear_plant411, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield411_id629_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield411", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield411", "G(add_belief(perc_rad411(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield411", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield411").
-!inspect_nuclear_plant411 : .intend(inspect_nuclear_plant411, I) & violated(I, "shield411", Cmds) & (count(I, "shield411", Count) | (not(count(I, "shield411", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant411.
-!inspect_nuclear_plant411 : .intend(inspect_nuclear_plant411, I) & (count(I, "shield411", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield411"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant412 : true <- !inspect_nuclear_plant4121. 
+!inspect_nuclear_plant4121 : fast & .intend(inspect_nuclear_plant412, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield412_id630_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield412", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield412", "G(add_belief(perc_rad412(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield412", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield412").
+!inspect_nuclear_plant412 : true <- !inspect_nuclear_plant4121. 
+!inspect_nuclear_plant4121 : true & .intend(inspect_nuclear_plant412, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield412_id631_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield412", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield412", "G(add_belief(perc_rad412(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield412", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield412").
-!inspect_nuclear_plant412 : .intend(inspect_nuclear_plant412, I) & violated(I, "shield412", Cmds) & (count(I, "shield412", Count) | (not(count(I, "shield412", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant412.
-!inspect_nuclear_plant412 : .intend(inspect_nuclear_plant412, I) & (count(I, "shield412", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield412"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant413 : true <- !inspect_nuclear_plant4131. 
+!inspect_nuclear_plant4131 : fast & .intend(inspect_nuclear_plant413, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield413_id632_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield413", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield413", "G(add_belief(perc_rad413(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield413", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield413").
+!inspect_nuclear_plant413 : true <- !inspect_nuclear_plant4131. 
+!inspect_nuclear_plant4131 : true & .intend(inspect_nuclear_plant413, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield413_id633_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield413", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield413", "G(add_belief(perc_rad413(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield413", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield413").
-!inspect_nuclear_plant413 : .intend(inspect_nuclear_plant413, I) & violated(I, "shield413", Cmds) & (count(I, "shield413", Count) | (not(count(I, "shield413", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant413.
-!inspect_nuclear_plant413 : .intend(inspect_nuclear_plant413, I) & (count(I, "shield413", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield413"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant414 : true <- !inspect_nuclear_plant4141. 
+!inspect_nuclear_plant4141 : fast & .intend(inspect_nuclear_plant414, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield414_id634_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield414", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield414", "G(add_belief(perc_rad414(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield414", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield414").
+!inspect_nuclear_plant414 : true <- !inspect_nuclear_plant4141. 
+!inspect_nuclear_plant4141 : true & .intend(inspect_nuclear_plant414, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield414_id635_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield414", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield414", "G(add_belief(perc_rad414(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield414", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield414").
-!inspect_nuclear_plant414 : .intend(inspect_nuclear_plant414, I) & violated(I, "shield414", Cmds) & (count(I, "shield414", Count) | (not(count(I, "shield414", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant414.
-!inspect_nuclear_plant414 : .intend(inspect_nuclear_plant414, I) & (count(I, "shield414", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield414"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant415 : true <- !inspect_nuclear_plant4151. 
+!inspect_nuclear_plant4151 : fast & .intend(inspect_nuclear_plant415, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield415_id636_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield415", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield415", "G(add_belief(perc_rad415(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield415", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield415").
+!inspect_nuclear_plant415 : true <- !inspect_nuclear_plant4151. 
+!inspect_nuclear_plant4151 : true & .intend(inspect_nuclear_plant415, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield415_id637_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield415", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield415", "G(add_belief(perc_rad415(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield415", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield415").
-!inspect_nuclear_plant415 : .intend(inspect_nuclear_plant415, I) & violated(I, "shield415", Cmds) & (count(I, "shield415", Count) | (not(count(I, "shield415", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant415.
-!inspect_nuclear_plant415 : .intend(inspect_nuclear_plant415, I) & (count(I, "shield415", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield415"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant416 : true <- !inspect_nuclear_plant4161. 
+!inspect_nuclear_plant4161 : fast & .intend(inspect_nuclear_plant416, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield416_id638_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield416", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield416", "G(add_belief(perc_rad416(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield416", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield416").
+!inspect_nuclear_plant416 : true <- !inspect_nuclear_plant4161. 
+!inspect_nuclear_plant4161 : true & .intend(inspect_nuclear_plant416, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield416_id639_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield416", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield416", "G(add_belief(perc_rad416(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield416", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield416").
-!inspect_nuclear_plant416 : .intend(inspect_nuclear_plant416, I) & violated(I, "shield416", Cmds) & (count(I, "shield416", Count) | (not(count(I, "shield416", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant416.
-!inspect_nuclear_plant416 : .intend(inspect_nuclear_plant416, I) & (count(I, "shield416", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield416"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant417 : true <- !inspect_nuclear_plant4171. 
+!inspect_nuclear_plant4171 : fast & .intend(inspect_nuclear_plant417, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield417_id640_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield417", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield417", "G(add_belief(perc_rad417(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield417", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield417").
+!inspect_nuclear_plant417 : true <- !inspect_nuclear_plant4171. 
+!inspect_nuclear_plant4171 : true & .intend(inspect_nuclear_plant417, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield417_id641_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield417", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield417", "G(add_belief(perc_rad417(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield417", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield417").
-!inspect_nuclear_plant417 : .intend(inspect_nuclear_plant417, I) & violated(I, "shield417", Cmds) & (count(I, "shield417", Count) | (not(count(I, "shield417", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant417.
-!inspect_nuclear_plant417 : .intend(inspect_nuclear_plant417, I) & (count(I, "shield417", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield417"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant418 : true <- !inspect_nuclear_plant4181. 
+!inspect_nuclear_plant4181 : fast & .intend(inspect_nuclear_plant418, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield418_id642_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield418", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield418", "G(add_belief(perc_rad418(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield418", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield418").
+!inspect_nuclear_plant418 : true <- !inspect_nuclear_plant4181. 
+!inspect_nuclear_plant4181 : true & .intend(inspect_nuclear_plant418, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield418_id643_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield418", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield418", "G(add_belief(perc_rad418(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield418", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield418").
-!inspect_nuclear_plant418 : .intend(inspect_nuclear_plant418, I) & violated(I, "shield418", Cmds) & (count(I, "shield418", Count) | (not(count(I, "shield418", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant418.
-!inspect_nuclear_plant418 : .intend(inspect_nuclear_plant418, I) & (count(I, "shield418", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield418"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant419 : true <- !inspect_nuclear_plant4191. 
+!inspect_nuclear_plant4191 : fast & .intend(inspect_nuclear_plant419, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield419_id644_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield419", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield419", "G(add_belief(perc_rad419(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield419", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield419").
+!inspect_nuclear_plant419 : true <- !inspect_nuclear_plant4191. 
+!inspect_nuclear_plant4191 : true & .intend(inspect_nuclear_plant419, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield419_id645_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield419", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield419", "G(add_belief(perc_rad419(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield419", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield419").
-!inspect_nuclear_plant419 : .intend(inspect_nuclear_plant419, I) & violated(I, "shield419", Cmds) & (count(I, "shield419", Count) | (not(count(I, "shield419", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant419.
-!inspect_nuclear_plant419 : .intend(inspect_nuclear_plant419, I) & (count(I, "shield419", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield419"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant420 : true <- !inspect_nuclear_plant4201. 
+!inspect_nuclear_plant4201 : fast & .intend(inspect_nuclear_plant420, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield420_id646_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield420", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield420", "G(add_belief(perc_rad420(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield420", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield420").
+!inspect_nuclear_plant420 : true <- !inspect_nuclear_plant4201. 
+!inspect_nuclear_plant4201 : true & .intend(inspect_nuclear_plant420, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield420_id647_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield420", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield420", "G(add_belief(perc_rad420(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield420", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield420").
-!inspect_nuclear_plant420 : .intend(inspect_nuclear_plant420, I) & violated(I, "shield420", Cmds) & (count(I, "shield420", Count) | (not(count(I, "shield420", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant420.
-!inspect_nuclear_plant420 : .intend(inspect_nuclear_plant420, I) & (count(I, "shield420", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield420"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant421 : true <- !inspect_nuclear_plant4211. 
+!inspect_nuclear_plant4211 : fast & .intend(inspect_nuclear_plant421, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield421_id648_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield421", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield421", "G(add_belief(perc_rad421(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield421", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield421").
+!inspect_nuclear_plant421 : true <- !inspect_nuclear_plant4211. 
+!inspect_nuclear_plant4211 : true & .intend(inspect_nuclear_plant421, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield421_id649_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield421", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield421", "G(add_belief(perc_rad421(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield421", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield421").
-!inspect_nuclear_plant421 : .intend(inspect_nuclear_plant421, I) & violated(I, "shield421", Cmds) & (count(I, "shield421", Count) | (not(count(I, "shield421", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant421.
-!inspect_nuclear_plant421 : .intend(inspect_nuclear_plant421, I) & (count(I, "shield421", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield421"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant422 : true <- !inspect_nuclear_plant4221. 
+!inspect_nuclear_plant4221 : fast & .intend(inspect_nuclear_plant422, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield422_id650_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield422", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield422", "G(add_belief(perc_rad422(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield422", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield422").
+!inspect_nuclear_plant422 : true <- !inspect_nuclear_plant4221. 
+!inspect_nuclear_plant4221 : true & .intend(inspect_nuclear_plant422, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield422_id651_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield422", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield422", "G(add_belief(perc_rad422(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield422", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield422").
-!inspect_nuclear_plant422 : .intend(inspect_nuclear_plant422, I) & violated(I, "shield422", Cmds) & (count(I, "shield422", Count) | (not(count(I, "shield422", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant422.
-!inspect_nuclear_plant422 : .intend(inspect_nuclear_plant422, I) & (count(I, "shield422", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield422"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant423 : true <- !inspect_nuclear_plant4231. 
+!inspect_nuclear_plant4231 : fast & .intend(inspect_nuclear_plant423, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield423_id652_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield423", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield423", "G(add_belief(perc_rad423(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield423", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield423").
+!inspect_nuclear_plant423 : true <- !inspect_nuclear_plant4231. 
+!inspect_nuclear_plant4231 : true & .intend(inspect_nuclear_plant423, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield423_id653_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield423", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield423", "G(add_belief(perc_rad423(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield423", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield423").
-!inspect_nuclear_plant423 : .intend(inspect_nuclear_plant423, I) & violated(I, "shield423", Cmds) & (count(I, "shield423", Count) | (not(count(I, "shield423", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant423.
-!inspect_nuclear_plant423 : .intend(inspect_nuclear_plant423, I) & (count(I, "shield423", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield423"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant424 : true <- !inspect_nuclear_plant4241. 
+!inspect_nuclear_plant4241 : fast & .intend(inspect_nuclear_plant424, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield424_id654_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield424", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield424", "G(add_belief(perc_rad424(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield424", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield424").
+!inspect_nuclear_plant424 : true <- !inspect_nuclear_plant4241. 
+!inspect_nuclear_plant4241 : true & .intend(inspect_nuclear_plant424, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield424_id655_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield424", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield424", "G(add_belief(perc_rad424(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield424", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield424").
-!inspect_nuclear_plant424 : .intend(inspect_nuclear_plant424, I) & violated(I, "shield424", Cmds) & (count(I, "shield424", Count) | (not(count(I, "shield424", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant424.
-!inspect_nuclear_plant424 : .intend(inspect_nuclear_plant424, I) & (count(I, "shield424", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield424"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant425 : true <- !inspect_nuclear_plant4251. 
+!inspect_nuclear_plant4251 : fast & .intend(inspect_nuclear_plant425, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield425_id656_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield425", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield425", "G(add_belief(perc_rad425(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield425", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield425").
+!inspect_nuclear_plant425 : true <- !inspect_nuclear_plant4251. 
+!inspect_nuclear_plant4251 : true & .intend(inspect_nuclear_plant425, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield425_id657_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield425", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield425", "G(add_belief(perc_rad425(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield425", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield425").
-!inspect_nuclear_plant425 : .intend(inspect_nuclear_plant425, I) & violated(I, "shield425", Cmds) & (count(I, "shield425", Count) | (not(count(I, "shield425", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant425.
-!inspect_nuclear_plant425 : .intend(inspect_nuclear_plant425, I) & (count(I, "shield425", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield425"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant426 : true <- !inspect_nuclear_plant4261. 
+!inspect_nuclear_plant4261 : fast & .intend(inspect_nuclear_plant426, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield426_id658_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield426", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield426", "G(add_belief(perc_rad426(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield426", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield426").
+!inspect_nuclear_plant426 : true <- !inspect_nuclear_plant4261. 
+!inspect_nuclear_plant4261 : true & .intend(inspect_nuclear_plant426, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield426_id659_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield426", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield426", "G(add_belief(perc_rad426(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield426", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield426").
-!inspect_nuclear_plant426 : .intend(inspect_nuclear_plant426, I) & violated(I, "shield426", Cmds) & (count(I, "shield426", Count) | (not(count(I, "shield426", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant426.
-!inspect_nuclear_plant426 : .intend(inspect_nuclear_plant426, I) & (count(I, "shield426", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield426"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant427 : true <- !inspect_nuclear_plant4271. 
+!inspect_nuclear_plant4271 : fast & .intend(inspect_nuclear_plant427, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield427_id660_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield427", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield427", "G(add_belief(perc_rad427(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield427", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield427").
+!inspect_nuclear_plant427 : true <- !inspect_nuclear_plant4271. 
+!inspect_nuclear_plant4271 : true & .intend(inspect_nuclear_plant427, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield427_id661_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield427", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield427", "G(add_belief(perc_rad427(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield427", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield427").
-!inspect_nuclear_plant427 : .intend(inspect_nuclear_plant427, I) & violated(I, "shield427", Cmds) & (count(I, "shield427", Count) | (not(count(I, "shield427", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant427.
-!inspect_nuclear_plant427 : .intend(inspect_nuclear_plant427, I) & (count(I, "shield427", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield427"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant428 : true <- !inspect_nuclear_plant4281. 
+!inspect_nuclear_plant4281 : fast & .intend(inspect_nuclear_plant428, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield428_id662_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield428", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield428", "G(add_belief(perc_rad428(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield428", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield428").
+!inspect_nuclear_plant428 : true <- !inspect_nuclear_plant4281. 
+!inspect_nuclear_plant4281 : true & .intend(inspect_nuclear_plant428, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield428_id663_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield428", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield428", "G(add_belief(perc_rad428(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield428", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield428").
-!inspect_nuclear_plant428 : .intend(inspect_nuclear_plant428, I) & violated(I, "shield428", Cmds) & (count(I, "shield428", Count) | (not(count(I, "shield428", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant428.
-!inspect_nuclear_plant428 : .intend(inspect_nuclear_plant428, I) & (count(I, "shield428", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield428"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant429 : true <- !inspect_nuclear_plant4291. 
+!inspect_nuclear_plant4291 : fast & .intend(inspect_nuclear_plant429, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield429_id664_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield429", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield429", "G(add_belief(perc_rad429(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield429", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield429").
+!inspect_nuclear_plant429 : true <- !inspect_nuclear_plant4291. 
+!inspect_nuclear_plant4291 : true & .intend(inspect_nuclear_plant429, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield429_id665_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield429", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield429", "G(add_belief(perc_rad429(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield429", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield429").
-!inspect_nuclear_plant429 : .intend(inspect_nuclear_plant429, I) & violated(I, "shield429", Cmds) & (count(I, "shield429", Count) | (not(count(I, "shield429", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant429.
-!inspect_nuclear_plant429 : .intend(inspect_nuclear_plant429, I) & (count(I, "shield429", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield429"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant430 : true <- !inspect_nuclear_plant4301. 
+!inspect_nuclear_plant4301 : fast & .intend(inspect_nuclear_plant430, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield430_id666_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield430", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield430", "G(add_belief(perc_rad430(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield430", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield430").
+!inspect_nuclear_plant430 : true <- !inspect_nuclear_plant4301. 
+!inspect_nuclear_plant4301 : true & .intend(inspect_nuclear_plant430, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield430_id667_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield430", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield430", "G(add_belief(perc_rad430(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield430", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield430").
-!inspect_nuclear_plant430 : .intend(inspect_nuclear_plant430, I) & violated(I, "shield430", Cmds) & (count(I, "shield430", Count) | (not(count(I, "shield430", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant430.
-!inspect_nuclear_plant430 : .intend(inspect_nuclear_plant430, I) & (count(I, "shield430", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield430"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant431 : true <- !inspect_nuclear_plant4311. 
+!inspect_nuclear_plant4311 : fast & .intend(inspect_nuclear_plant431, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield431_id668_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield431", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield431", "G(add_belief(perc_rad431(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield431", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield431").
+!inspect_nuclear_plant431 : true <- !inspect_nuclear_plant4311. 
+!inspect_nuclear_plant4311 : true & .intend(inspect_nuclear_plant431, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield431_id669_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield431", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield431", "G(add_belief(perc_rad431(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield431", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield431").
-!inspect_nuclear_plant431 : .intend(inspect_nuclear_plant431, I) & violated(I, "shield431", Cmds) & (count(I, "shield431", Count) | (not(count(I, "shield431", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant431.
-!inspect_nuclear_plant431 : .intend(inspect_nuclear_plant431, I) & (count(I, "shield431", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield431"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant432 : true <- !inspect_nuclear_plant4321. 
+!inspect_nuclear_plant4321 : fast & .intend(inspect_nuclear_plant432, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield432_id670_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield432", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield432", "G(add_belief(perc_rad432(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield432", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield432").
+!inspect_nuclear_plant432 : true <- !inspect_nuclear_plant4321. 
+!inspect_nuclear_plant4321 : true & .intend(inspect_nuclear_plant432, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield432_id671_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield432", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield432", "G(add_belief(perc_rad432(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield432", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield432").
-!inspect_nuclear_plant432 : .intend(inspect_nuclear_plant432, I) & violated(I, "shield432", Cmds) & (count(I, "shield432", Count) | (not(count(I, "shield432", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant432.
-!inspect_nuclear_plant432 : .intend(inspect_nuclear_plant432, I) & (count(I, "shield432", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield432"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant433 : true <- !inspect_nuclear_plant4331. 
+!inspect_nuclear_plant4331 : fast & .intend(inspect_nuclear_plant433, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield433_id672_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield433", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield433", "G(add_belief(perc_rad433(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield433", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield433").
+!inspect_nuclear_plant433 : true <- !inspect_nuclear_plant4331. 
+!inspect_nuclear_plant4331 : true & .intend(inspect_nuclear_plant433, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield433_id673_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield433", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield433", "G(add_belief(perc_rad433(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield433", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield433").
-!inspect_nuclear_plant433 : .intend(inspect_nuclear_plant433, I) & violated(I, "shield433", Cmds) & (count(I, "shield433", Count) | (not(count(I, "shield433", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant433.
-!inspect_nuclear_plant433 : .intend(inspect_nuclear_plant433, I) & (count(I, "shield433", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield433"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant434 : true <- !inspect_nuclear_plant4341. 
+!inspect_nuclear_plant4341 : fast & .intend(inspect_nuclear_plant434, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield434_id674_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield434", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield434", "G(add_belief(perc_rad434(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield434", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield434").
+!inspect_nuclear_plant434 : true <- !inspect_nuclear_plant4341. 
+!inspect_nuclear_plant4341 : true & .intend(inspect_nuclear_plant434, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield434_id675_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield434", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield434", "G(add_belief(perc_rad434(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield434", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield434").
-!inspect_nuclear_plant434 : .intend(inspect_nuclear_plant434, I) & violated(I, "shield434", Cmds) & (count(I, "shield434", Count) | (not(count(I, "shield434", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant434.
-!inspect_nuclear_plant434 : .intend(inspect_nuclear_plant434, I) & (count(I, "shield434", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield434"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant435 : true <- !inspect_nuclear_plant4351. 
+!inspect_nuclear_plant4351 : fast & .intend(inspect_nuclear_plant435, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield435_id676_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield435", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield435", "G(add_belief(perc_rad435(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield435", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield435").
+!inspect_nuclear_plant435 : true <- !inspect_nuclear_plant4351. 
+!inspect_nuclear_plant4351 : true & .intend(inspect_nuclear_plant435, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield435_id677_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield435", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield435", "G(add_belief(perc_rad435(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield435", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield435").
-!inspect_nuclear_plant435 : .intend(inspect_nuclear_plant435, I) & violated(I, "shield435", Cmds) & (count(I, "shield435", Count) | (not(count(I, "shield435", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant435.
-!inspect_nuclear_plant435 : .intend(inspect_nuclear_plant435, I) & (count(I, "shield435", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield435"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant436 : true <- !inspect_nuclear_plant4361. 
+!inspect_nuclear_plant4361 : fast & .intend(inspect_nuclear_plant436, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield436_id678_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield436", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield436", "G(add_belief(perc_rad436(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield436", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield436").
+!inspect_nuclear_plant436 : true <- !inspect_nuclear_plant4361. 
+!inspect_nuclear_plant4361 : true & .intend(inspect_nuclear_plant436, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield436_id679_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield436", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield436", "G(add_belief(perc_rad436(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield436", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield436").
-!inspect_nuclear_plant436 : .intend(inspect_nuclear_plant436, I) & violated(I, "shield436", Cmds) & (count(I, "shield436", Count) | (not(count(I, "shield436", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant436.
-!inspect_nuclear_plant436 : .intend(inspect_nuclear_plant436, I) & (count(I, "shield436", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield436"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant437 : true <- !inspect_nuclear_plant4371. 
+!inspect_nuclear_plant4371 : fast & .intend(inspect_nuclear_plant437, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield437_id680_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield437", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield437", "G(add_belief(perc_rad437(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield437", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield437").
+!inspect_nuclear_plant437 : true <- !inspect_nuclear_plant4371. 
+!inspect_nuclear_plant4371 : true & .intend(inspect_nuclear_plant437, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield437_id681_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield437", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield437", "G(add_belief(perc_rad437(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield437", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield437").
-!inspect_nuclear_plant437 : .intend(inspect_nuclear_plant437, I) & violated(I, "shield437", Cmds) & (count(I, "shield437", Count) | (not(count(I, "shield437", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant437.
-!inspect_nuclear_plant437 : .intend(inspect_nuclear_plant437, I) & (count(I, "shield437", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield437"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant438 : true <- !inspect_nuclear_plant4381. 
+!inspect_nuclear_plant4381 : fast & .intend(inspect_nuclear_plant438, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield438_id682_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield438", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield438", "G(add_belief(perc_rad438(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield438", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield438").
+!inspect_nuclear_plant438 : true <- !inspect_nuclear_plant4381. 
+!inspect_nuclear_plant4381 : true & .intend(inspect_nuclear_plant438, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield438_id683_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield438", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield438", "G(add_belief(perc_rad438(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield438", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield438").
-!inspect_nuclear_plant438 : .intend(inspect_nuclear_plant438, I) & violated(I, "shield438", Cmds) & (count(I, "shield438", Count) | (not(count(I, "shield438", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant438.
-!inspect_nuclear_plant438 : .intend(inspect_nuclear_plant438, I) & (count(I, "shield438", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield438"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant439 : true <- !inspect_nuclear_plant4391. 
+!inspect_nuclear_plant4391 : fast & .intend(inspect_nuclear_plant439, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield439_id684_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield439", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield439", "G(add_belief(perc_rad439(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield439", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield439").
+!inspect_nuclear_plant439 : true <- !inspect_nuclear_plant4391. 
+!inspect_nuclear_plant4391 : true & .intend(inspect_nuclear_plant439, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield439_id685_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield439", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield439", "G(add_belief(perc_rad439(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield439", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield439").
-!inspect_nuclear_plant439 : .intend(inspect_nuclear_plant439, I) & violated(I, "shield439", Cmds) & (count(I, "shield439", Count) | (not(count(I, "shield439", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant439.
-!inspect_nuclear_plant439 : .intend(inspect_nuclear_plant439, I) & (count(I, "shield439", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield439"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant440 : true <- !inspect_nuclear_plant4401. 
+!inspect_nuclear_plant4401 : fast & .intend(inspect_nuclear_plant440, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield440_id686_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield440", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield440", "G(add_belief(perc_rad440(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield440", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield440").
+!inspect_nuclear_plant440 : true <- !inspect_nuclear_plant4401. 
+!inspect_nuclear_plant4401 : true & .intend(inspect_nuclear_plant440, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield440_id687_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield440", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield440", "G(add_belief(perc_rad440(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield440", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield440").
-!inspect_nuclear_plant440 : .intend(inspect_nuclear_plant440, I) & violated(I, "shield440", Cmds) & (count(I, "shield440", Count) | (not(count(I, "shield440", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant440.
-!inspect_nuclear_plant440 : .intend(inspect_nuclear_plant440, I) & (count(I, "shield440", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield440"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant441 : true <- !inspect_nuclear_plant4411. 
+!inspect_nuclear_plant4411 : fast & .intend(inspect_nuclear_plant441, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield441_id688_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield441", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield441", "G(add_belief(perc_rad441(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield441", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield441").
+!inspect_nuclear_plant441 : true <- !inspect_nuclear_plant4411. 
+!inspect_nuclear_plant4411 : true & .intend(inspect_nuclear_plant441, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield441_id689_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield441", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield441", "G(add_belief(perc_rad441(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield441", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield441").
-!inspect_nuclear_plant441 : .intend(inspect_nuclear_plant441, I) & violated(I, "shield441", Cmds) & (count(I, "shield441", Count) | (not(count(I, "shield441", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant441.
-!inspect_nuclear_plant441 : .intend(inspect_nuclear_plant441, I) & (count(I, "shield441", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield441"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant442 : true <- !inspect_nuclear_plant4421. 
+!inspect_nuclear_plant4421 : fast & .intend(inspect_nuclear_plant442, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield442_id690_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield442", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield442", "G(add_belief(perc_rad442(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield442", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield442").
+!inspect_nuclear_plant442 : true <- !inspect_nuclear_plant4421. 
+!inspect_nuclear_plant4421 : true & .intend(inspect_nuclear_plant442, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield442_id691_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield442", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield442", "G(add_belief(perc_rad442(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield442", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield442").
-!inspect_nuclear_plant442 : .intend(inspect_nuclear_plant442, I) & violated(I, "shield442", Cmds) & (count(I, "shield442", Count) | (not(count(I, "shield442", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant442.
-!inspect_nuclear_plant442 : .intend(inspect_nuclear_plant442, I) & (count(I, "shield442", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield442"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant443 : true <- !inspect_nuclear_plant4431. 
+!inspect_nuclear_plant4431 : fast & .intend(inspect_nuclear_plant443, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield443_id692_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield443", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield443", "G(add_belief(perc_rad443(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield443", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield443").
+!inspect_nuclear_plant443 : true <- !inspect_nuclear_plant4431. 
+!inspect_nuclear_plant4431 : true & .intend(inspect_nuclear_plant443, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield443_id693_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield443", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield443", "G(add_belief(perc_rad443(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield443", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield443").
-!inspect_nuclear_plant443 : .intend(inspect_nuclear_plant443, I) & violated(I, "shield443", Cmds) & (count(I, "shield443", Count) | (not(count(I, "shield443", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant443.
-!inspect_nuclear_plant443 : .intend(inspect_nuclear_plant443, I) & (count(I, "shield443", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield443"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant444 : true <- !inspect_nuclear_plant4441. 
+!inspect_nuclear_plant4441 : fast & .intend(inspect_nuclear_plant444, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield444_id694_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield444", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield444", "G(add_belief(perc_rad444(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield444", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield444").
+!inspect_nuclear_plant444 : true <- !inspect_nuclear_plant4441. 
+!inspect_nuclear_plant4441 : true & .intend(inspect_nuclear_plant444, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield444_id695_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield444", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield444", "G(add_belief(perc_rad444(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield444", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield444").
-!inspect_nuclear_plant444 : .intend(inspect_nuclear_plant444, I) & violated(I, "shield444", Cmds) & (count(I, "shield444", Count) | (not(count(I, "shield444", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant444.
-!inspect_nuclear_plant444 : .intend(inspect_nuclear_plant444, I) & (count(I, "shield444", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield444"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant445 : true <- !inspect_nuclear_plant4451. 
+!inspect_nuclear_plant4451 : fast & .intend(inspect_nuclear_plant445, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield445_id696_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield445", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield445", "G(add_belief(perc_rad445(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield445", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield445").
+!inspect_nuclear_plant445 : true <- !inspect_nuclear_plant4451. 
+!inspect_nuclear_plant4451 : true & .intend(inspect_nuclear_plant445, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield445_id697_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield445", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield445", "G(add_belief(perc_rad445(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield445", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield445").
-!inspect_nuclear_plant445 : .intend(inspect_nuclear_plant445, I) & violated(I, "shield445", Cmds) & (count(I, "shield445", Count) | (not(count(I, "shield445", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant445.
-!inspect_nuclear_plant445 : .intend(inspect_nuclear_plant445, I) & (count(I, "shield445", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield445"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant446 : true <- !inspect_nuclear_plant4461. 
+!inspect_nuclear_plant4461 : fast & .intend(inspect_nuclear_plant446, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield446_id698_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield446", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield446", "G(add_belief(perc_rad446(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield446", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield446").
+!inspect_nuclear_plant446 : true <- !inspect_nuclear_plant4461. 
+!inspect_nuclear_plant4461 : true & .intend(inspect_nuclear_plant446, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield446_id699_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield446", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield446", "G(add_belief(perc_rad446(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield446", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield446").
-!inspect_nuclear_plant446 : .intend(inspect_nuclear_plant446, I) & violated(I, "shield446", Cmds) & (count(I, "shield446", Count) | (not(count(I, "shield446", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant446.
-!inspect_nuclear_plant446 : .intend(inspect_nuclear_plant446, I) & (count(I, "shield446", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield446"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant447 : true <- !inspect_nuclear_plant4471. 
+!inspect_nuclear_plant4471 : fast & .intend(inspect_nuclear_plant447, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield447_id700_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield447", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield447", "G(add_belief(perc_rad447(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield447", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield447").
+!inspect_nuclear_plant447 : true <- !inspect_nuclear_plant4471. 
+!inspect_nuclear_plant4471 : true & .intend(inspect_nuclear_plant447, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield447_id701_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield447", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield447", "G(add_belief(perc_rad447(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield447", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield447").
-!inspect_nuclear_plant447 : .intend(inspect_nuclear_plant447, I) & violated(I, "shield447", Cmds) & (count(I, "shield447", Count) | (not(count(I, "shield447", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant447.
-!inspect_nuclear_plant447 : .intend(inspect_nuclear_plant447, I) & (count(I, "shield447", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield447"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant448 : true <- !inspect_nuclear_plant4481. 
+!inspect_nuclear_plant4481 : fast & .intend(inspect_nuclear_plant448, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield448_id702_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield448", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield448", "G(add_belief(perc_rad448(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield448", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield448").
+!inspect_nuclear_plant448 : true <- !inspect_nuclear_plant4481. 
+!inspect_nuclear_plant4481 : true & .intend(inspect_nuclear_plant448, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield448_id703_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield448", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield448", "G(add_belief(perc_rad448(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield448", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield448").
-!inspect_nuclear_plant448 : .intend(inspect_nuclear_plant448, I) & violated(I, "shield448", Cmds) & (count(I, "shield448", Count) | (not(count(I, "shield448", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant448.
-!inspect_nuclear_plant448 : .intend(inspect_nuclear_plant448, I) & (count(I, "shield448", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield448"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant449 : true <- !inspect_nuclear_plant4491. 
+!inspect_nuclear_plant4491 : fast & .intend(inspect_nuclear_plant449, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield449_id704_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield449", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield449", "G(add_belief(perc_rad449(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield449", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield449").
+!inspect_nuclear_plant449 : true <- !inspect_nuclear_plant4491. 
+!inspect_nuclear_plant4491 : true & .intend(inspect_nuclear_plant449, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield449_id705_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield449", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield449", "G(add_belief(perc_rad449(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield449", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield449").
-!inspect_nuclear_plant449 : .intend(inspect_nuclear_plant449, I) & violated(I, "shield449", Cmds) & (count(I, "shield449", Count) | (not(count(I, "shield449", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant449.
-!inspect_nuclear_plant449 : .intend(inspect_nuclear_plant449, I) & (count(I, "shield449", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield449"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant450 : true <- !inspect_nuclear_plant4501. 
+!inspect_nuclear_plant4501 : fast & .intend(inspect_nuclear_plant450, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield450_id706_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield450", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield450", "G(add_belief(perc_rad450(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield450", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield450").
+!inspect_nuclear_plant450 : true <- !inspect_nuclear_plant4501. 
+!inspect_nuclear_plant4501 : true & .intend(inspect_nuclear_plant450, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield450_id707_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield450", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield450", "G(add_belief(perc_rad450(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield450", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield450").
-!inspect_nuclear_plant450 : .intend(inspect_nuclear_plant450, I) & violated(I, "shield450", Cmds) & (count(I, "shield450", Count) | (not(count(I, "shield450", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant450.
-!inspect_nuclear_plant450 : .intend(inspect_nuclear_plant450, I) & (count(I, "shield450", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield450"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant451 : true <- !inspect_nuclear_plant4511. 
+!inspect_nuclear_plant4511 : fast & .intend(inspect_nuclear_plant451, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield451_id708_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield451", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield451", "G(add_belief(perc_rad451(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield451", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield451").
+!inspect_nuclear_plant451 : true <- !inspect_nuclear_plant4511. 
+!inspect_nuclear_plant4511 : true & .intend(inspect_nuclear_plant451, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield451_id709_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield451", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield451", "G(add_belief(perc_rad451(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield451", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield451").
-!inspect_nuclear_plant451 : .intend(inspect_nuclear_plant451, I) & violated(I, "shield451", Cmds) & (count(I, "shield451", Count) | (not(count(I, "shield451", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant451.
-!inspect_nuclear_plant451 : .intend(inspect_nuclear_plant451, I) & (count(I, "shield451", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield451"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant452 : true <- !inspect_nuclear_plant4521. 
+!inspect_nuclear_plant4521 : fast & .intend(inspect_nuclear_plant452, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield452_id710_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield452", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield452", "G(add_belief(perc_rad452(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield452", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield452").
+!inspect_nuclear_plant452 : true <- !inspect_nuclear_plant4521. 
+!inspect_nuclear_plant4521 : true & .intend(inspect_nuclear_plant452, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield452_id711_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield452", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield452", "G(add_belief(perc_rad452(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield452", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield452").
-!inspect_nuclear_plant452 : .intend(inspect_nuclear_plant452, I) & violated(I, "shield452", Cmds) & (count(I, "shield452", Count) | (not(count(I, "shield452", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant452.
-!inspect_nuclear_plant452 : .intend(inspect_nuclear_plant452, I) & (count(I, "shield452", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield452"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant453 : true <- !inspect_nuclear_plant4531. 
+!inspect_nuclear_plant4531 : fast & .intend(inspect_nuclear_plant453, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield453_id712_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield453", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield453", "G(add_belief(perc_rad453(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield453", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield453").
+!inspect_nuclear_plant453 : true <- !inspect_nuclear_plant4531. 
+!inspect_nuclear_plant4531 : true & .intend(inspect_nuclear_plant453, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield453_id713_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield453", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield453", "G(add_belief(perc_rad453(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield453", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield453").
-!inspect_nuclear_plant453 : .intend(inspect_nuclear_plant453, I) & violated(I, "shield453", Cmds) & (count(I, "shield453", Count) | (not(count(I, "shield453", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant453.
-!inspect_nuclear_plant453 : .intend(inspect_nuclear_plant453, I) & (count(I, "shield453", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield453"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant454 : true <- !inspect_nuclear_plant4541. 
+!inspect_nuclear_plant4541 : fast & .intend(inspect_nuclear_plant454, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield454_id714_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield454", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield454", "G(add_belief(perc_rad454(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield454", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield454").
+!inspect_nuclear_plant454 : true <- !inspect_nuclear_plant4541. 
+!inspect_nuclear_plant4541 : true & .intend(inspect_nuclear_plant454, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield454_id715_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield454", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield454", "G(add_belief(perc_rad454(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield454", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield454").
-!inspect_nuclear_plant454 : .intend(inspect_nuclear_plant454, I) & violated(I, "shield454", Cmds) & (count(I, "shield454", Count) | (not(count(I, "shield454", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant454.
-!inspect_nuclear_plant454 : .intend(inspect_nuclear_plant454, I) & (count(I, "shield454", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield454"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant455 : true <- !inspect_nuclear_plant4551. 
+!inspect_nuclear_plant4551 : fast & .intend(inspect_nuclear_plant455, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield455_id716_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield455", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield455", "G(add_belief(perc_rad455(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield455", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield455").
+!inspect_nuclear_plant455 : true <- !inspect_nuclear_plant4551. 
+!inspect_nuclear_plant4551 : true & .intend(inspect_nuclear_plant455, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield455_id717_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield455", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield455", "G(add_belief(perc_rad455(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield455", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield455").
-!inspect_nuclear_plant455 : .intend(inspect_nuclear_plant455, I) & violated(I, "shield455", Cmds) & (count(I, "shield455", Count) | (not(count(I, "shield455", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant455.
-!inspect_nuclear_plant455 : .intend(inspect_nuclear_plant455, I) & (count(I, "shield455", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield455"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant456 : true <- !inspect_nuclear_plant4561. 
+!inspect_nuclear_plant4561 : fast & .intend(inspect_nuclear_plant456, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield456_id718_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield456", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield456", "G(add_belief(perc_rad456(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield456", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield456").
+!inspect_nuclear_plant456 : true <- !inspect_nuclear_plant4561. 
+!inspect_nuclear_plant4561 : true & .intend(inspect_nuclear_plant456, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield456_id719_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield456", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield456", "G(add_belief(perc_rad456(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield456", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield456").
-!inspect_nuclear_plant456 : .intend(inspect_nuclear_plant456, I) & violated(I, "shield456", Cmds) & (count(I, "shield456", Count) | (not(count(I, "shield456", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant456.
-!inspect_nuclear_plant456 : .intend(inspect_nuclear_plant456, I) & (count(I, "shield456", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield456"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant457 : true <- !inspect_nuclear_plant4571. 
+!inspect_nuclear_plant4571 : fast & .intend(inspect_nuclear_plant457, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield457_id720_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield457", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield457", "G(add_belief(perc_rad457(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield457", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield457").
+!inspect_nuclear_plant457 : true <- !inspect_nuclear_plant4571. 
+!inspect_nuclear_plant4571 : true & .intend(inspect_nuclear_plant457, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield457_id721_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield457", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield457", "G(add_belief(perc_rad457(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield457", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield457").
-!inspect_nuclear_plant457 : .intend(inspect_nuclear_plant457, I) & violated(I, "shield457", Cmds) & (count(I, "shield457", Count) | (not(count(I, "shield457", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant457.
-!inspect_nuclear_plant457 : .intend(inspect_nuclear_plant457, I) & (count(I, "shield457", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield457"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant458 : true <- !inspect_nuclear_plant4581. 
+!inspect_nuclear_plant4581 : fast & .intend(inspect_nuclear_plant458, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield458_id722_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield458", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield458", "G(add_belief(perc_rad458(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield458", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield458").
+!inspect_nuclear_plant458 : true <- !inspect_nuclear_plant4581. 
+!inspect_nuclear_plant4581 : true & .intend(inspect_nuclear_plant458, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield458_id723_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield458", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield458", "G(add_belief(perc_rad458(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield458", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield458").
-!inspect_nuclear_plant458 : .intend(inspect_nuclear_plant458, I) & violated(I, "shield458", Cmds) & (count(I, "shield458", Count) | (not(count(I, "shield458", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant458.
-!inspect_nuclear_plant458 : .intend(inspect_nuclear_plant458, I) & (count(I, "shield458", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield458"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant459 : true <- !inspect_nuclear_plant4591. 
+!inspect_nuclear_plant4591 : fast & .intend(inspect_nuclear_plant459, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield459_id724_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield459", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield459", "G(add_belief(perc_rad459(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield459", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield459").
+!inspect_nuclear_plant459 : true <- !inspect_nuclear_plant4591. 
+!inspect_nuclear_plant4591 : true & .intend(inspect_nuclear_plant459, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield459_id725_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield459", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield459", "G(add_belief(perc_rad459(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield459", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield459").
-!inspect_nuclear_plant459 : .intend(inspect_nuclear_plant459, I) & violated(I, "shield459", Cmds) & (count(I, "shield459", Count) | (not(count(I, "shield459", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant459.
-!inspect_nuclear_plant459 : .intend(inspect_nuclear_plant459, I) & (count(I, "shield459", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield459"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant460 : true <- !inspect_nuclear_plant4601. 
+!inspect_nuclear_plant4601 : fast & .intend(inspect_nuclear_plant460, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield460_id726_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield460", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield460", "G(add_belief(perc_rad460(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield460", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield460").
+!inspect_nuclear_plant460 : true <- !inspect_nuclear_plant4601. 
+!inspect_nuclear_plant4601 : true & .intend(inspect_nuclear_plant460, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield460_id727_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield460", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield460", "G(add_belief(perc_rad460(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield460", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield460").
-!inspect_nuclear_plant460 : .intend(inspect_nuclear_plant460, I) & violated(I, "shield460", Cmds) & (count(I, "shield460", Count) | (not(count(I, "shield460", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant460.
-!inspect_nuclear_plant460 : .intend(inspect_nuclear_plant460, I) & (count(I, "shield460", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield460"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant461 : true <- !inspect_nuclear_plant4611. 
+!inspect_nuclear_plant4611 : fast & .intend(inspect_nuclear_plant461, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield461_id728_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield461", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield461", "G(add_belief(perc_rad461(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield461", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield461").
+!inspect_nuclear_plant461 : true <- !inspect_nuclear_plant4611. 
+!inspect_nuclear_plant4611 : true & .intend(inspect_nuclear_plant461, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield461_id729_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield461", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield461", "G(add_belief(perc_rad461(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield461", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield461").
-!inspect_nuclear_plant461 : .intend(inspect_nuclear_plant461, I) & violated(I, "shield461", Cmds) & (count(I, "shield461", Count) | (not(count(I, "shield461", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant461.
-!inspect_nuclear_plant461 : .intend(inspect_nuclear_plant461, I) & (count(I, "shield461", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield461"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant462 : true <- !inspect_nuclear_plant4621. 
+!inspect_nuclear_plant4621 : fast & .intend(inspect_nuclear_plant462, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield462_id730_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield462", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield462", "G(add_belief(perc_rad462(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield462", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield462").
+!inspect_nuclear_plant462 : true <- !inspect_nuclear_plant4621. 
+!inspect_nuclear_plant4621 : true & .intend(inspect_nuclear_plant462, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield462_id731_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield462", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield462", "G(add_belief(perc_rad462(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield462", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield462").
-!inspect_nuclear_plant462 : .intend(inspect_nuclear_plant462, I) & violated(I, "shield462", Cmds) & (count(I, "shield462", Count) | (not(count(I, "shield462", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant462.
-!inspect_nuclear_plant462 : .intend(inspect_nuclear_plant462, I) & (count(I, "shield462", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield462"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant463 : true <- !inspect_nuclear_plant4631. 
+!inspect_nuclear_plant4631 : fast & .intend(inspect_nuclear_plant463, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield463_id732_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield463", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield463", "G(add_belief(perc_rad463(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield463", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield463").
+!inspect_nuclear_plant463 : true <- !inspect_nuclear_plant4631. 
+!inspect_nuclear_plant4631 : true & .intend(inspect_nuclear_plant463, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield463_id733_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield463", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield463", "G(add_belief(perc_rad463(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield463", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield463").
-!inspect_nuclear_plant463 : .intend(inspect_nuclear_plant463, I) & violated(I, "shield463", Cmds) & (count(I, "shield463", Count) | (not(count(I, "shield463", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant463.
-!inspect_nuclear_plant463 : .intend(inspect_nuclear_plant463, I) & (count(I, "shield463", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield463"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant464 : true <- !inspect_nuclear_plant4641. 
+!inspect_nuclear_plant4641 : fast & .intend(inspect_nuclear_plant464, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield464_id734_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield464", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield464", "G(add_belief(perc_rad464(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield464", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield464").
+!inspect_nuclear_plant464 : true <- !inspect_nuclear_plant4641. 
+!inspect_nuclear_plant4641 : true & .intend(inspect_nuclear_plant464, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield464_id735_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield464", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield464", "G(add_belief(perc_rad464(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield464", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield464").
-!inspect_nuclear_plant464 : .intend(inspect_nuclear_plant464, I) & violated(I, "shield464", Cmds) & (count(I, "shield464", Count) | (not(count(I, "shield464", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant464.
-!inspect_nuclear_plant464 : .intend(inspect_nuclear_plant464, I) & (count(I, "shield464", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield464"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant465 : true <- !inspect_nuclear_plant4651. 
+!inspect_nuclear_plant4651 : fast & .intend(inspect_nuclear_plant465, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield465_id736_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield465", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield465", "G(add_belief(perc_rad465(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield465", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield465").
+!inspect_nuclear_plant465 : true <- !inspect_nuclear_plant4651. 
+!inspect_nuclear_plant4651 : true & .intend(inspect_nuclear_plant465, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield465_id737_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield465", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield465", "G(add_belief(perc_rad465(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield465", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield465").
-!inspect_nuclear_plant465 : .intend(inspect_nuclear_plant465, I) & violated(I, "shield465", Cmds) & (count(I, "shield465", Count) | (not(count(I, "shield465", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant465.
-!inspect_nuclear_plant465 : .intend(inspect_nuclear_plant465, I) & (count(I, "shield465", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield465"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant466 : true <- !inspect_nuclear_plant4661. 
+!inspect_nuclear_plant4661 : fast & .intend(inspect_nuclear_plant466, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield466_id738_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield466", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield466", "G(add_belief(perc_rad466(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield466", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield466").
+!inspect_nuclear_plant466 : true <- !inspect_nuclear_plant4661. 
+!inspect_nuclear_plant4661 : true & .intend(inspect_nuclear_plant466, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield466_id739_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield466", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield466", "G(add_belief(perc_rad466(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield466", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield466").
-!inspect_nuclear_plant466 : .intend(inspect_nuclear_plant466, I) & violated(I, "shield466", Cmds) & (count(I, "shield466", Count) | (not(count(I, "shield466", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant466.
-!inspect_nuclear_plant466 : .intend(inspect_nuclear_plant466, I) & (count(I, "shield466", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield466"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant467 : true <- !inspect_nuclear_plant4671. 
+!inspect_nuclear_plant4671 : fast & .intend(inspect_nuclear_plant467, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield467_id740_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield467", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield467", "G(add_belief(perc_rad467(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield467", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield467").
+!inspect_nuclear_plant467 : true <- !inspect_nuclear_plant4671. 
+!inspect_nuclear_plant4671 : true & .intend(inspect_nuclear_plant467, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield467_id741_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield467", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield467", "G(add_belief(perc_rad467(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield467", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield467").
-!inspect_nuclear_plant467 : .intend(inspect_nuclear_plant467, I) & violated(I, "shield467", Cmds) & (count(I, "shield467", Count) | (not(count(I, "shield467", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant467.
-!inspect_nuclear_plant467 : .intend(inspect_nuclear_plant467, I) & (count(I, "shield467", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield467"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant468 : true <- !inspect_nuclear_plant4681. 
+!inspect_nuclear_plant4681 : fast & .intend(inspect_nuclear_plant468, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield468_id742_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield468", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield468", "G(add_belief(perc_rad468(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield468", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield468").
+!inspect_nuclear_plant468 : true <- !inspect_nuclear_plant4681. 
+!inspect_nuclear_plant4681 : true & .intend(inspect_nuclear_plant468, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield468_id743_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield468", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield468", "G(add_belief(perc_rad468(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield468", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield468").
-!inspect_nuclear_plant468 : .intend(inspect_nuclear_plant468, I) & violated(I, "shield468", Cmds) & (count(I, "shield468", Count) | (not(count(I, "shield468", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant468.
-!inspect_nuclear_plant468 : .intend(inspect_nuclear_plant468, I) & (count(I, "shield468", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield468"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant469 : true <- !inspect_nuclear_plant4691. 
+!inspect_nuclear_plant4691 : fast & .intend(inspect_nuclear_plant469, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield469_id744_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield469", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield469", "G(add_belief(perc_rad469(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield469", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield469").
+!inspect_nuclear_plant469 : true <- !inspect_nuclear_plant4691. 
+!inspect_nuclear_plant4691 : true & .intend(inspect_nuclear_plant469, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield469_id745_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield469", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield469", "G(add_belief(perc_rad469(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield469", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield469").
-!inspect_nuclear_plant469 : .intend(inspect_nuclear_plant469, I) & violated(I, "shield469", Cmds) & (count(I, "shield469", Count) | (not(count(I, "shield469", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant469.
-!inspect_nuclear_plant469 : .intend(inspect_nuclear_plant469, I) & (count(I, "shield469", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield469"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant470 : true <- !inspect_nuclear_plant4701. 
+!inspect_nuclear_plant4701 : fast & .intend(inspect_nuclear_plant470, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield470_id746_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield470", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield470", "G(add_belief(perc_rad470(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield470", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield470").
+!inspect_nuclear_plant470 : true <- !inspect_nuclear_plant4701. 
+!inspect_nuclear_plant4701 : true & .intend(inspect_nuclear_plant470, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield470_id747_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield470", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield470", "G(add_belief(perc_rad470(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield470", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield470").
-!inspect_nuclear_plant470 : .intend(inspect_nuclear_plant470, I) & violated(I, "shield470", Cmds) & (count(I, "shield470", Count) | (not(count(I, "shield470", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant470.
-!inspect_nuclear_plant470 : .intend(inspect_nuclear_plant470, I) & (count(I, "shield470", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield470"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant471 : true <- !inspect_nuclear_plant4711. 
+!inspect_nuclear_plant4711 : fast & .intend(inspect_nuclear_plant471, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield471_id748_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield471", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield471", "G(add_belief(perc_rad471(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield471", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield471").
+!inspect_nuclear_plant471 : true <- !inspect_nuclear_plant4711. 
+!inspect_nuclear_plant4711 : true & .intend(inspect_nuclear_plant471, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield471_id749_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield471", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield471", "G(add_belief(perc_rad471(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield471", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield471").
-!inspect_nuclear_plant471 : .intend(inspect_nuclear_plant471, I) & violated(I, "shield471", Cmds) & (count(I, "shield471", Count) | (not(count(I, "shield471", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant471.
-!inspect_nuclear_plant471 : .intend(inspect_nuclear_plant471, I) & (count(I, "shield471", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield471"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant472 : true <- !inspect_nuclear_plant4721. 
+!inspect_nuclear_plant4721 : fast & .intend(inspect_nuclear_plant472, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield472_id750_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield472", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield472", "G(add_belief(perc_rad472(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield472", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield472").
+!inspect_nuclear_plant472 : true <- !inspect_nuclear_plant4721. 
+!inspect_nuclear_plant4721 : true & .intend(inspect_nuclear_plant472, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield472_id751_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield472", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield472", "G(add_belief(perc_rad472(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield472", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield472").
-!inspect_nuclear_plant472 : .intend(inspect_nuclear_plant472, I) & violated(I, "shield472", Cmds) & (count(I, "shield472", Count) | (not(count(I, "shield472", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant472.
-!inspect_nuclear_plant472 : .intend(inspect_nuclear_plant472, I) & (count(I, "shield472", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield472"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant473 : true <- !inspect_nuclear_plant4731. 
+!inspect_nuclear_plant4731 : fast & .intend(inspect_nuclear_plant473, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield473_id752_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield473", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield473", "G(add_belief(perc_rad473(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield473", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield473").
+!inspect_nuclear_plant473 : true <- !inspect_nuclear_plant4731. 
+!inspect_nuclear_plant4731 : true & .intend(inspect_nuclear_plant473, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield473_id753_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield473", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield473", "G(add_belief(perc_rad473(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield473", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield473").
-!inspect_nuclear_plant473 : .intend(inspect_nuclear_plant473, I) & violated(I, "shield473", Cmds) & (count(I, "shield473", Count) | (not(count(I, "shield473", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant473.
-!inspect_nuclear_plant473 : .intend(inspect_nuclear_plant473, I) & (count(I, "shield473", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield473"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant474 : true <- !inspect_nuclear_plant4741. 
+!inspect_nuclear_plant4741 : fast & .intend(inspect_nuclear_plant474, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield474_id754_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield474", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield474", "G(add_belief(perc_rad474(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield474", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield474").
+!inspect_nuclear_plant474 : true <- !inspect_nuclear_plant4741. 
+!inspect_nuclear_plant4741 : true & .intend(inspect_nuclear_plant474, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield474_id755_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield474", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield474", "G(add_belief(perc_rad474(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield474", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield474").
-!inspect_nuclear_plant474 : .intend(inspect_nuclear_plant474, I) & violated(I, "shield474", Cmds) & (count(I, "shield474", Count) | (not(count(I, "shield474", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant474.
-!inspect_nuclear_plant474 : .intend(inspect_nuclear_plant474, I) & (count(I, "shield474", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield474"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant475 : true <- !inspect_nuclear_plant4751. 
+!inspect_nuclear_plant4751 : fast & .intend(inspect_nuclear_plant475, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield475_id756_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield475", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield475", "G(add_belief(perc_rad475(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield475", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield475").
+!inspect_nuclear_plant475 : true <- !inspect_nuclear_plant4751. 
+!inspect_nuclear_plant4751 : true & .intend(inspect_nuclear_plant475, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield475_id757_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield475", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield475", "G(add_belief(perc_rad475(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield475", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield475").
-!inspect_nuclear_plant475 : .intend(inspect_nuclear_plant475, I) & violated(I, "shield475", Cmds) & (count(I, "shield475", Count) | (not(count(I, "shield475", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant475.
-!inspect_nuclear_plant475 : .intend(inspect_nuclear_plant475, I) & (count(I, "shield475", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield475"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant476 : true <- !inspect_nuclear_plant4761. 
+!inspect_nuclear_plant4761 : fast & .intend(inspect_nuclear_plant476, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield476_id758_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield476", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield476", "G(add_belief(perc_rad476(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield476", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield476").
+!inspect_nuclear_plant476 : true <- !inspect_nuclear_plant4761. 
+!inspect_nuclear_plant4761 : true & .intend(inspect_nuclear_plant476, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield476_id759_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield476", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield476", "G(add_belief(perc_rad476(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield476", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield476").
-!inspect_nuclear_plant476 : .intend(inspect_nuclear_plant476, I) & violated(I, "shield476", Cmds) & (count(I, "shield476", Count) | (not(count(I, "shield476", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant476.
-!inspect_nuclear_plant476 : .intend(inspect_nuclear_plant476, I) & (count(I, "shield476", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield476"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant477 : true <- !inspect_nuclear_plant4771. 
+!inspect_nuclear_plant4771 : fast & .intend(inspect_nuclear_plant477, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield477_id760_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield477", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield477", "G(add_belief(perc_rad477(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield477", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield477").
+!inspect_nuclear_plant477 : true <- !inspect_nuclear_plant4771. 
+!inspect_nuclear_plant4771 : true & .intend(inspect_nuclear_plant477, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield477_id761_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield477", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield477", "G(add_belief(perc_rad477(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield477", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield477").
-!inspect_nuclear_plant477 : .intend(inspect_nuclear_plant477, I) & violated(I, "shield477", Cmds) & (count(I, "shield477", Count) | (not(count(I, "shield477", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant477.
-!inspect_nuclear_plant477 : .intend(inspect_nuclear_plant477, I) & (count(I, "shield477", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield477"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant478 : true <- !inspect_nuclear_plant4781. 
+!inspect_nuclear_plant4781 : fast & .intend(inspect_nuclear_plant478, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield478_id762_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield478", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield478", "G(add_belief(perc_rad478(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield478", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield478").
+!inspect_nuclear_plant478 : true <- !inspect_nuclear_plant4781. 
+!inspect_nuclear_plant4781 : true & .intend(inspect_nuclear_plant478, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield478_id763_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield478", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield478", "G(add_belief(perc_rad478(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield478", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield478").
-!inspect_nuclear_plant478 : .intend(inspect_nuclear_plant478, I) & violated(I, "shield478", Cmds) & (count(I, "shield478", Count) | (not(count(I, "shield478", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant478.
-!inspect_nuclear_plant478 : .intend(inspect_nuclear_plant478, I) & (count(I, "shield478", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield478"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant479 : true <- !inspect_nuclear_plant4791. 
+!inspect_nuclear_plant4791 : fast & .intend(inspect_nuclear_plant479, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield479_id764_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield479", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield479", "G(add_belief(perc_rad479(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield479", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield479").
+!inspect_nuclear_plant479 : true <- !inspect_nuclear_plant4791. 
+!inspect_nuclear_plant4791 : true & .intend(inspect_nuclear_plant479, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield479_id765_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield479", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield479", "G(add_belief(perc_rad479(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield479", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield479").
-!inspect_nuclear_plant479 : .intend(inspect_nuclear_plant479, I) & violated(I, "shield479", Cmds) & (count(I, "shield479", Count) | (not(count(I, "shield479", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant479.
-!inspect_nuclear_plant479 : .intend(inspect_nuclear_plant479, I) & (count(I, "shield479", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield479"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant480 : true <- !inspect_nuclear_plant4801. 
+!inspect_nuclear_plant4801 : fast & .intend(inspect_nuclear_plant480, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield480_id766_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield480", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield480", "G(add_belief(perc_rad480(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield480", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield480").
+!inspect_nuclear_plant480 : true <- !inspect_nuclear_plant4801. 
+!inspect_nuclear_plant4801 : true & .intend(inspect_nuclear_plant480, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield480_id767_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield480", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield480", "G(add_belief(perc_rad480(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield480", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield480").
-!inspect_nuclear_plant480 : .intend(inspect_nuclear_plant480, I) & violated(I, "shield480", Cmds) & (count(I, "shield480", Count) | (not(count(I, "shield480", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant480.
-!inspect_nuclear_plant480 : .intend(inspect_nuclear_plant480, I) & (count(I, "shield480", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield480"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant481 : true <- !inspect_nuclear_plant4811. 
+!inspect_nuclear_plant4811 : fast & .intend(inspect_nuclear_plant481, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield481_id768_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield481", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield481", "G(add_belief(perc_rad481(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield481", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield481").
+!inspect_nuclear_plant481 : true <- !inspect_nuclear_plant4811. 
+!inspect_nuclear_plant4811 : true & .intend(inspect_nuclear_plant481, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield481_id769_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield481", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield481", "G(add_belief(perc_rad481(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield481", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield481").
-!inspect_nuclear_plant481 : .intend(inspect_nuclear_plant481, I) & violated(I, "shield481", Cmds) & (count(I, "shield481", Count) | (not(count(I, "shield481", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant481.
-!inspect_nuclear_plant481 : .intend(inspect_nuclear_plant481, I) & (count(I, "shield481", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield481"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant482 : true <- !inspect_nuclear_plant4821. 
+!inspect_nuclear_plant4821 : fast & .intend(inspect_nuclear_plant482, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield482_id770_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield482", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield482", "G(add_belief(perc_rad482(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield482", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield482").
+!inspect_nuclear_plant482 : true <- !inspect_nuclear_plant4821. 
+!inspect_nuclear_plant4821 : true & .intend(inspect_nuclear_plant482, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield482_id771_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield482", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield482", "G(add_belief(perc_rad482(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield482", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield482").
-!inspect_nuclear_plant482 : .intend(inspect_nuclear_plant482, I) & violated(I, "shield482", Cmds) & (count(I, "shield482", Count) | (not(count(I, "shield482", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant482.
-!inspect_nuclear_plant482 : .intend(inspect_nuclear_plant482, I) & (count(I, "shield482", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield482"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant483 : true <- !inspect_nuclear_plant4831. 
+!inspect_nuclear_plant4831 : fast & .intend(inspect_nuclear_plant483, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield483_id772_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield483", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield483", "G(add_belief(perc_rad483(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield483", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield483").
+!inspect_nuclear_plant483 : true <- !inspect_nuclear_plant4831. 
+!inspect_nuclear_plant4831 : true & .intend(inspect_nuclear_plant483, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield483_id773_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield483", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield483", "G(add_belief(perc_rad483(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield483", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield483").
-!inspect_nuclear_plant483 : .intend(inspect_nuclear_plant483, I) & violated(I, "shield483", Cmds) & (count(I, "shield483", Count) | (not(count(I, "shield483", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant483.
-!inspect_nuclear_plant483 : .intend(inspect_nuclear_plant483, I) & (count(I, "shield483", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield483"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant484 : true <- !inspect_nuclear_plant4841. 
+!inspect_nuclear_plant4841 : fast & .intend(inspect_nuclear_plant484, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield484_id774_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield484", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield484", "G(add_belief(perc_rad484(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield484", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield484").
+!inspect_nuclear_plant484 : true <- !inspect_nuclear_plant4841. 
+!inspect_nuclear_plant4841 : true & .intend(inspect_nuclear_plant484, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield484_id775_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield484", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield484", "G(add_belief(perc_rad484(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield484", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield484").
-!inspect_nuclear_plant484 : .intend(inspect_nuclear_plant484, I) & violated(I, "shield484", Cmds) & (count(I, "shield484", Count) | (not(count(I, "shield484", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant484.
-!inspect_nuclear_plant484 : .intend(inspect_nuclear_plant484, I) & (count(I, "shield484", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield484"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant485 : true <- !inspect_nuclear_plant4851. 
+!inspect_nuclear_plant4851 : fast & .intend(inspect_nuclear_plant485, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield485_id776_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield485", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield485", "G(add_belief(perc_rad485(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield485", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield485").
+!inspect_nuclear_plant485 : true <- !inspect_nuclear_plant4851. 
+!inspect_nuclear_plant4851 : true & .intend(inspect_nuclear_plant485, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield485_id777_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield485", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield485", "G(add_belief(perc_rad485(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield485", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield485").
-!inspect_nuclear_plant485 : .intend(inspect_nuclear_plant485, I) & violated(I, "shield485", Cmds) & (count(I, "shield485", Count) | (not(count(I, "shield485", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant485.
-!inspect_nuclear_plant485 : .intend(inspect_nuclear_plant485, I) & (count(I, "shield485", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield485"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant486 : true <- !inspect_nuclear_plant4861. 
+!inspect_nuclear_plant4861 : fast & .intend(inspect_nuclear_plant486, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield486_id778_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield486", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield486", "G(add_belief(perc_rad486(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield486", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield486").
+!inspect_nuclear_plant486 : true <- !inspect_nuclear_plant4861. 
+!inspect_nuclear_plant4861 : true & .intend(inspect_nuclear_plant486, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield486_id779_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield486", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield486", "G(add_belief(perc_rad486(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield486", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield486").
-!inspect_nuclear_plant486 : .intend(inspect_nuclear_plant486, I) & violated(I, "shield486", Cmds) & (count(I, "shield486", Count) | (not(count(I, "shield486", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant486.
-!inspect_nuclear_plant486 : .intend(inspect_nuclear_plant486, I) & (count(I, "shield486", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield486"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant487 : true <- !inspect_nuclear_plant4871. 
+!inspect_nuclear_plant4871 : fast & .intend(inspect_nuclear_plant487, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield487_id780_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield487", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield487", "G(add_belief(perc_rad487(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield487", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield487").
+!inspect_nuclear_plant487 : true <- !inspect_nuclear_plant4871. 
+!inspect_nuclear_plant4871 : true & .intend(inspect_nuclear_plant487, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield487_id781_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield487", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield487", "G(add_belief(perc_rad487(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield487", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield487").
-!inspect_nuclear_plant487 : .intend(inspect_nuclear_plant487, I) & violated(I, "shield487", Cmds) & (count(I, "shield487", Count) | (not(count(I, "shield487", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant487.
-!inspect_nuclear_plant487 : .intend(inspect_nuclear_plant487, I) & (count(I, "shield487", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield487"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant488 : true <- !inspect_nuclear_plant4881. 
+!inspect_nuclear_plant4881 : fast & .intend(inspect_nuclear_plant488, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield488_id782_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield488", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield488", "G(add_belief(perc_rad488(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield488", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield488").
+!inspect_nuclear_plant488 : true <- !inspect_nuclear_plant4881. 
+!inspect_nuclear_plant4881 : true & .intend(inspect_nuclear_plant488, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield488_id783_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield488", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield488", "G(add_belief(perc_rad488(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield488", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield488").
-!inspect_nuclear_plant488 : .intend(inspect_nuclear_plant488, I) & violated(I, "shield488", Cmds) & (count(I, "shield488", Count) | (not(count(I, "shield488", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant488.
-!inspect_nuclear_plant488 : .intend(inspect_nuclear_plant488, I) & (count(I, "shield488", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield488"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant489 : true <- !inspect_nuclear_plant4891. 
+!inspect_nuclear_plant4891 : fast & .intend(inspect_nuclear_plant489, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield489_id784_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield489", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield489", "G(add_belief(perc_rad489(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield489", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield489").
+!inspect_nuclear_plant489 : true <- !inspect_nuclear_plant4891. 
+!inspect_nuclear_plant4891 : true & .intend(inspect_nuclear_plant489, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield489_id785_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield489", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield489", "G(add_belief(perc_rad489(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield489", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield489").
-!inspect_nuclear_plant489 : .intend(inspect_nuclear_plant489, I) & violated(I, "shield489", Cmds) & (count(I, "shield489", Count) | (not(count(I, "shield489", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant489.
-!inspect_nuclear_plant489 : .intend(inspect_nuclear_plant489, I) & (count(I, "shield489", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield489"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant490 : true <- !inspect_nuclear_plant4901. 
+!inspect_nuclear_plant4901 : fast & .intend(inspect_nuclear_plant490, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield490_id786_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield490", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield490", "G(add_belief(perc_rad490(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield490", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield490").
+!inspect_nuclear_plant490 : true <- !inspect_nuclear_plant4901. 
+!inspect_nuclear_plant4901 : true & .intend(inspect_nuclear_plant490, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield490_id787_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield490", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield490", "G(add_belief(perc_rad490(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield490", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield490").
-!inspect_nuclear_plant490 : .intend(inspect_nuclear_plant490, I) & violated(I, "shield490", Cmds) & (count(I, "shield490", Count) | (not(count(I, "shield490", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant490.
-!inspect_nuclear_plant490 : .intend(inspect_nuclear_plant490, I) & (count(I, "shield490", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield490"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant491 : true <- !inspect_nuclear_plant4911. 
+!inspect_nuclear_plant4911 : fast & .intend(inspect_nuclear_plant491, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield491_id788_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield491", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield491", "G(add_belief(perc_rad491(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield491", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield491").
+!inspect_nuclear_plant491 : true <- !inspect_nuclear_plant4911. 
+!inspect_nuclear_plant4911 : true & .intend(inspect_nuclear_plant491, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield491_id789_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield491", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield491", "G(add_belief(perc_rad491(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield491", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield491").
-!inspect_nuclear_plant491 : .intend(inspect_nuclear_plant491, I) & violated(I, "shield491", Cmds) & (count(I, "shield491", Count) | (not(count(I, "shield491", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant491.
-!inspect_nuclear_plant491 : .intend(inspect_nuclear_plant491, I) & (count(I, "shield491", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield491"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant492 : true <- !inspect_nuclear_plant4921. 
+!inspect_nuclear_plant4921 : fast & .intend(inspect_nuclear_plant492, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield492_id790_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield492", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield492", "G(add_belief(perc_rad492(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield492", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield492").
+!inspect_nuclear_plant492 : true <- !inspect_nuclear_plant4921. 
+!inspect_nuclear_plant4921 : true & .intend(inspect_nuclear_plant492, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield492_id791_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield492", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield492", "G(add_belief(perc_rad492(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield492", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield492").
-!inspect_nuclear_plant492 : .intend(inspect_nuclear_plant492, I) & violated(I, "shield492", Cmds) & (count(I, "shield492", Count) | (not(count(I, "shield492", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant492.
-!inspect_nuclear_plant492 : .intend(inspect_nuclear_plant492, I) & (count(I, "shield492", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield492"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant493 : true <- !inspect_nuclear_plant4931. 
+!inspect_nuclear_plant4931 : fast & .intend(inspect_nuclear_plant493, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield493_id792_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield493", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield493", "G(add_belief(perc_rad493(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield493", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield493").
+!inspect_nuclear_plant493 : true <- !inspect_nuclear_plant4931. 
+!inspect_nuclear_plant4931 : true & .intend(inspect_nuclear_plant493, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield493_id793_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield493", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield493", "G(add_belief(perc_rad493(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield493", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield493").
-!inspect_nuclear_plant493 : .intend(inspect_nuclear_plant493, I) & violated(I, "shield493", Cmds) & (count(I, "shield493", Count) | (not(count(I, "shield493", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant493.
-!inspect_nuclear_plant493 : .intend(inspect_nuclear_plant493, I) & (count(I, "shield493", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield493"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant494 : true <- !inspect_nuclear_plant4941. 
+!inspect_nuclear_plant4941 : fast & .intend(inspect_nuclear_plant494, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield494_id794_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield494", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield494", "G(add_belief(perc_rad494(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield494", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield494").
+!inspect_nuclear_plant494 : true <- !inspect_nuclear_plant4941. 
+!inspect_nuclear_plant4941 : true & .intend(inspect_nuclear_plant494, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield494_id795_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield494", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield494", "G(add_belief(perc_rad494(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield494", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield494").
-!inspect_nuclear_plant494 : .intend(inspect_nuclear_plant494, I) & violated(I, "shield494", Cmds) & (count(I, "shield494", Count) | (not(count(I, "shield494", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant494.
-!inspect_nuclear_plant494 : .intend(inspect_nuclear_plant494, I) & (count(I, "shield494", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield494"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant495 : true <- !inspect_nuclear_plant4951. 
+!inspect_nuclear_plant4951 : fast & .intend(inspect_nuclear_plant495, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield495_id796_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield495", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield495", "G(add_belief(perc_rad495(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield495", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield495").
+!inspect_nuclear_plant495 : true <- !inspect_nuclear_plant4951. 
+!inspect_nuclear_plant4951 : true & .intend(inspect_nuclear_plant495, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield495_id797_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield495", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield495", "G(add_belief(perc_rad495(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield495", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield495").
-!inspect_nuclear_plant495 : .intend(inspect_nuclear_plant495, I) & violated(I, "shield495", Cmds) & (count(I, "shield495", Count) | (not(count(I, "shield495", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant495.
-!inspect_nuclear_plant495 : .intend(inspect_nuclear_plant495, I) & (count(I, "shield495", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield495"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant496 : true <- !inspect_nuclear_plant4961. 
+!inspect_nuclear_plant4961 : fast & .intend(inspect_nuclear_plant496, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield496_id798_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield496", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield496", "G(add_belief(perc_rad496(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield496", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield496").
+!inspect_nuclear_plant496 : true <- !inspect_nuclear_plant4961. 
+!inspect_nuclear_plant4961 : true & .intend(inspect_nuclear_plant496, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield496_id799_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield496", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield496", "G(add_belief(perc_rad496(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield496", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield496").
-!inspect_nuclear_plant496 : .intend(inspect_nuclear_plant496, I) & violated(I, "shield496", Cmds) & (count(I, "shield496", Count) | (not(count(I, "shield496", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant496.
-!inspect_nuclear_plant496 : .intend(inspect_nuclear_plant496, I) & (count(I, "shield496", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield496"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant497 : true <- !inspect_nuclear_plant4971. 
+!inspect_nuclear_plant4971 : fast & .intend(inspect_nuclear_plant497, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield497_id800_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield497", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield497", "G(add_belief(perc_rad497(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield497", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield497").
+!inspect_nuclear_plant497 : true <- !inspect_nuclear_plant4971. 
+!inspect_nuclear_plant4971 : true & .intend(inspect_nuclear_plant497, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield497_id801_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield497", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield497", "G(add_belief(perc_rad497(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield497", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield497").
-!inspect_nuclear_plant497 : .intend(inspect_nuclear_plant497, I) & violated(I, "shield497", Cmds) & (count(I, "shield497", Count) | (not(count(I, "shield497", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant497.
-!inspect_nuclear_plant497 : .intend(inspect_nuclear_plant497, I) & (count(I, "shield497", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield497"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant498 : true <- !inspect_nuclear_plant4981. 
+!inspect_nuclear_plant4981 : fast & .intend(inspect_nuclear_plant498, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield498_id802_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield498", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield498", "G(add_belief(perc_rad498(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield498", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield498").
+!inspect_nuclear_plant498 : true <- !inspect_nuclear_plant4981. 
+!inspect_nuclear_plant4981 : true & .intend(inspect_nuclear_plant498, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield498_id803_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield498", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield498", "G(add_belief(perc_rad498(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield498", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield498").
-!inspect_nuclear_plant498 : .intend(inspect_nuclear_plant498, I) & violated(I, "shield498", Cmds) & (count(I, "shield498", Count) | (not(count(I, "shield498", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant498.
-!inspect_nuclear_plant498 : .intend(inspect_nuclear_plant498, I) & (count(I, "shield498", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield498"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant499 : true <- !inspect_nuclear_plant4991. 
+!inspect_nuclear_plant4991 : fast & .intend(inspect_nuclear_plant499, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield499_id804_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield499", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield499", "G(add_belief(perc_rad499(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield499", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield499").
+!inspect_nuclear_plant499 : true <- !inspect_nuclear_plant4991. 
+!inspect_nuclear_plant4991 : true & .intend(inspect_nuclear_plant499, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield499_id805_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield499", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield499", "G(add_belief(perc_rad499(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield499", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield499").
-!inspect_nuclear_plant499 : .intend(inspect_nuclear_plant499, I) & violated(I, "shield499", Cmds) & (count(I, "shield499", Count) | (not(count(I, "shield499", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant499.
-!inspect_nuclear_plant499 : .intend(inspect_nuclear_plant499, I) & (count(I, "shield499", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield499"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant500 : true <- !inspect_nuclear_plant5001. 
+!inspect_nuclear_plant5001 : fast & .intend(inspect_nuclear_plant500, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield500_id806_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield500", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield500", "G(add_belief(perc_rad500(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield500", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield500").
+!inspect_nuclear_plant500 : true <- !inspect_nuclear_plant5001. 
+!inspect_nuclear_plant5001 : true & .intend(inspect_nuclear_plant500, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield500_id807_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield500", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield500", "G(add_belief(perc_rad500(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield500", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield500").
-!inspect_nuclear_plant500 : .intend(inspect_nuclear_plant500, I) & violated(I, "shield500", Cmds) & (count(I, "shield500", Count) | (not(count(I, "shield500", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant500.
-!inspect_nuclear_plant500 : .intend(inspect_nuclear_plant500, I) & (count(I, "shield500", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield500"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant501 : true <- !inspect_nuclear_plant5011. 
+!inspect_nuclear_plant5011 : fast & .intend(inspect_nuclear_plant501, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield501_id808_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield501", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield501", "G(add_belief(perc_rad501(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield501", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield501").
+!inspect_nuclear_plant501 : true <- !inspect_nuclear_plant5011. 
+!inspect_nuclear_plant5011 : true & .intend(inspect_nuclear_plant501, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield501_id809_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield501", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield501", "G(add_belief(perc_rad501(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield501", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield501").
-!inspect_nuclear_plant501 : .intend(inspect_nuclear_plant501, I) & violated(I, "shield501", Cmds) & (count(I, "shield501", Count) | (not(count(I, "shield501", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant501.
-!inspect_nuclear_plant501 : .intend(inspect_nuclear_plant501, I) & (count(I, "shield501", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield501"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant502 : true <- !inspect_nuclear_plant5021. 
+!inspect_nuclear_plant5021 : fast & .intend(inspect_nuclear_plant502, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield502_id810_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield502", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield502", "G(add_belief(perc_rad502(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield502", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield502").
+!inspect_nuclear_plant502 : true <- !inspect_nuclear_plant5021. 
+!inspect_nuclear_plant5021 : true & .intend(inspect_nuclear_plant502, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield502_id811_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield502", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield502", "G(add_belief(perc_rad502(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield502", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield502").
-!inspect_nuclear_plant502 : .intend(inspect_nuclear_plant502, I) & violated(I, "shield502", Cmds) & (count(I, "shield502", Count) | (not(count(I, "shield502", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant502.
-!inspect_nuclear_plant502 : .intend(inspect_nuclear_plant502, I) & (count(I, "shield502", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield502"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant503 : true <- !inspect_nuclear_plant5031. 
+!inspect_nuclear_plant5031 : fast & .intend(inspect_nuclear_plant503, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield503_id812_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield503", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield503", "G(add_belief(perc_rad503(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield503", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield503").
+!inspect_nuclear_plant503 : true <- !inspect_nuclear_plant5031. 
+!inspect_nuclear_plant5031 : true & .intend(inspect_nuclear_plant503, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield503_id813_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield503", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield503", "G(add_belief(perc_rad503(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield503", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield503").
-!inspect_nuclear_plant503 : .intend(inspect_nuclear_plant503, I) & violated(I, "shield503", Cmds) & (count(I, "shield503", Count) | (not(count(I, "shield503", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant503.
-!inspect_nuclear_plant503 : .intend(inspect_nuclear_plant503, I) & (count(I, "shield503", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield503"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant504 : true <- !inspect_nuclear_plant5041. 
+!inspect_nuclear_plant5041 : fast & .intend(inspect_nuclear_plant504, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield504_id814_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield504", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield504", "G(add_belief(perc_rad504(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield504", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield504").
+!inspect_nuclear_plant504 : true <- !inspect_nuclear_plant5041. 
+!inspect_nuclear_plant5041 : true & .intend(inspect_nuclear_plant504, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield504_id815_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield504", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield504", "G(add_belief(perc_rad504(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield504", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield504").
-!inspect_nuclear_plant504 : .intend(inspect_nuclear_plant504, I) & violated(I, "shield504", Cmds) & (count(I, "shield504", Count) | (not(count(I, "shield504", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant504.
-!inspect_nuclear_plant504 : .intend(inspect_nuclear_plant504, I) & (count(I, "shield504", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield504"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant505 : true <- !inspect_nuclear_plant5051. 
+!inspect_nuclear_plant5051 : fast & .intend(inspect_nuclear_plant505, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield505_id816_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield505", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield505", "G(add_belief(perc_rad505(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield505", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield505").
+!inspect_nuclear_plant505 : true <- !inspect_nuclear_plant5051. 
+!inspect_nuclear_plant5051 : true & .intend(inspect_nuclear_plant505, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield505_id817_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield505", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield505", "G(add_belief(perc_rad505(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield505", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield505").
-!inspect_nuclear_plant505 : .intend(inspect_nuclear_plant505, I) & violated(I, "shield505", Cmds) & (count(I, "shield505", Count) | (not(count(I, "shield505", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant505.
-!inspect_nuclear_plant505 : .intend(inspect_nuclear_plant505, I) & (count(I, "shield505", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield505"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant506 : true <- !inspect_nuclear_plant5061. 
+!inspect_nuclear_plant5061 : fast & .intend(inspect_nuclear_plant506, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield506_id818_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield506", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield506", "G(add_belief(perc_rad506(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield506", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield506").
+!inspect_nuclear_plant506 : true <- !inspect_nuclear_plant5061. 
+!inspect_nuclear_plant5061 : true & .intend(inspect_nuclear_plant506, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield506_id819_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield506", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield506", "G(add_belief(perc_rad506(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield506", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield506").
-!inspect_nuclear_plant506 : .intend(inspect_nuclear_plant506, I) & violated(I, "shield506", Cmds) & (count(I, "shield506", Count) | (not(count(I, "shield506", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant506.
-!inspect_nuclear_plant506 : .intend(inspect_nuclear_plant506, I) & (count(I, "shield506", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield506"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant507 : true <- !inspect_nuclear_plant5071. 
+!inspect_nuclear_plant5071 : fast & .intend(inspect_nuclear_plant507, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield507_id820_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield507", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield507", "G(add_belief(perc_rad507(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield507", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield507").
+!inspect_nuclear_plant507 : true <- !inspect_nuclear_plant5071. 
+!inspect_nuclear_plant5071 : true & .intend(inspect_nuclear_plant507, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield507_id821_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield507", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield507", "G(add_belief(perc_rad507(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield507", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield507").
-!inspect_nuclear_plant507 : .intend(inspect_nuclear_plant507, I) & violated(I, "shield507", Cmds) & (count(I, "shield507", Count) | (not(count(I, "shield507", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant507.
-!inspect_nuclear_plant507 : .intend(inspect_nuclear_plant507, I) & (count(I, "shield507", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield507"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant508 : true <- !inspect_nuclear_plant5081. 
+!inspect_nuclear_plant5081 : fast & .intend(inspect_nuclear_plant508, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield508_id822_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield508", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield508", "G(add_belief(perc_rad508(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield508", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield508").
+!inspect_nuclear_plant508 : true <- !inspect_nuclear_plant5081. 
+!inspect_nuclear_plant5081 : true & .intend(inspect_nuclear_plant508, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield508_id823_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield508", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield508", "G(add_belief(perc_rad508(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield508", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield508").
-!inspect_nuclear_plant508 : .intend(inspect_nuclear_plant508, I) & violated(I, "shield508", Cmds) & (count(I, "shield508", Count) | (not(count(I, "shield508", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant508.
-!inspect_nuclear_plant508 : .intend(inspect_nuclear_plant508, I) & (count(I, "shield508", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield508"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant509 : true <- !inspect_nuclear_plant5091. 
+!inspect_nuclear_plant5091 : fast & .intend(inspect_nuclear_plant509, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield509_id824_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield509", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield509", "G(add_belief(perc_rad509(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield509", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield509").
+!inspect_nuclear_plant509 : true <- !inspect_nuclear_plant5091. 
+!inspect_nuclear_plant5091 : true & .intend(inspect_nuclear_plant509, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield509_id825_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield509", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield509", "G(add_belief(perc_rad509(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield509", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield509").
-!inspect_nuclear_plant509 : .intend(inspect_nuclear_plant509, I) & violated(I, "shield509", Cmds) & (count(I, "shield509", Count) | (not(count(I, "shield509", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant509.
-!inspect_nuclear_plant509 : .intend(inspect_nuclear_plant509, I) & (count(I, "shield509", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield509"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant510 : true <- !inspect_nuclear_plant5101. 
+!inspect_nuclear_plant5101 : fast & .intend(inspect_nuclear_plant510, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield510_id826_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield510", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield510", "G(add_belief(perc_rad510(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield510", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield510").
+!inspect_nuclear_plant510 : true <- !inspect_nuclear_plant5101. 
+!inspect_nuclear_plant5101 : true & .intend(inspect_nuclear_plant510, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield510_id827_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield510", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield510", "G(add_belief(perc_rad510(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield510", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield510").
-!inspect_nuclear_plant510 : .intend(inspect_nuclear_plant510, I) & violated(I, "shield510", Cmds) & (count(I, "shield510", Count) | (not(count(I, "shield510", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant510.
-!inspect_nuclear_plant510 : .intend(inspect_nuclear_plant510, I) & (count(I, "shield510", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield510"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant511 : true <- !inspect_nuclear_plant5111. 
+!inspect_nuclear_plant5111 : fast & .intend(inspect_nuclear_plant511, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield511_id828_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield511", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield511", "G(add_belief(perc_rad511(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield511", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield511").
+!inspect_nuclear_plant511 : true <- !inspect_nuclear_plant5111. 
+!inspect_nuclear_plant5111 : true & .intend(inspect_nuclear_plant511, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield511_id829_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield511", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield511", "G(add_belief(perc_rad511(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield511", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield511").
-!inspect_nuclear_plant511 : .intend(inspect_nuclear_plant511, I) & violated(I, "shield511", Cmds) & (count(I, "shield511", Count) | (not(count(I, "shield511", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant511.
-!inspect_nuclear_plant511 : .intend(inspect_nuclear_plant511, I) & (count(I, "shield511", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield511"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant512 : true <- !inspect_nuclear_plant5121. 
+!inspect_nuclear_plant5121 : fast & .intend(inspect_nuclear_plant512, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield512_id830_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield512", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield512", "G(add_belief(perc_rad512(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield512", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield512").
+!inspect_nuclear_plant512 : true <- !inspect_nuclear_plant5121. 
+!inspect_nuclear_plant5121 : true & .intend(inspect_nuclear_plant512, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield512_id831_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield512", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield512", "G(add_belief(perc_rad512(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield512", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield512").
-!inspect_nuclear_plant512 : .intend(inspect_nuclear_plant512, I) & violated(I, "shield512", Cmds) & (count(I, "shield512", Count) | (not(count(I, "shield512", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant512.
-!inspect_nuclear_plant512 : .intend(inspect_nuclear_plant512, I) & (count(I, "shield512", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield512"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant513 : true <- !inspect_nuclear_plant5131. 
+!inspect_nuclear_plant5131 : fast & .intend(inspect_nuclear_plant513, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield513_id832_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield513", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield513", "G(add_belief(perc_rad513(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield513", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield513").
+!inspect_nuclear_plant513 : true <- !inspect_nuclear_plant5131. 
+!inspect_nuclear_plant5131 : true & .intend(inspect_nuclear_plant513, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield513_id833_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield513", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield513", "G(add_belief(perc_rad513(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield513", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield513").
-!inspect_nuclear_plant513 : .intend(inspect_nuclear_plant513, I) & violated(I, "shield513", Cmds) & (count(I, "shield513", Count) | (not(count(I, "shield513", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant513.
-!inspect_nuclear_plant513 : .intend(inspect_nuclear_plant513, I) & (count(I, "shield513", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield513"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant514 : true <- !inspect_nuclear_plant5141. 
+!inspect_nuclear_plant5141 : fast & .intend(inspect_nuclear_plant514, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield514_id834_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield514", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield514", "G(add_belief(perc_rad514(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield514", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield514").
+!inspect_nuclear_plant514 : true <- !inspect_nuclear_plant5141. 
+!inspect_nuclear_plant5141 : true & .intend(inspect_nuclear_plant514, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield514_id835_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield514", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield514", "G(add_belief(perc_rad514(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield514", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield514").
-!inspect_nuclear_plant514 : .intend(inspect_nuclear_plant514, I) & violated(I, "shield514", Cmds) & (count(I, "shield514", Count) | (not(count(I, "shield514", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant514.
-!inspect_nuclear_plant514 : .intend(inspect_nuclear_plant514, I) & (count(I, "shield514", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield514"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant515 : true <- !inspect_nuclear_plant5151. 
+!inspect_nuclear_plant5151 : fast & .intend(inspect_nuclear_plant515, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield515_id836_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield515", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield515", "G(add_belief(perc_rad515(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield515", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield515").
+!inspect_nuclear_plant515 : true <- !inspect_nuclear_plant5151. 
+!inspect_nuclear_plant5151 : true & .intend(inspect_nuclear_plant515, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield515_id837_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield515", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield515", "G(add_belief(perc_rad515(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield515", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield515").
-!inspect_nuclear_plant515 : .intend(inspect_nuclear_plant515, I) & violated(I, "shield515", Cmds) & (count(I, "shield515", Count) | (not(count(I, "shield515", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant515.
-!inspect_nuclear_plant515 : .intend(inspect_nuclear_plant515, I) & (count(I, "shield515", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield515"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant516 : true <- !inspect_nuclear_plant5161. 
+!inspect_nuclear_plant5161 : fast & .intend(inspect_nuclear_plant516, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield516_id838_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield516", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield516", "G(add_belief(perc_rad516(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield516", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield516").
+!inspect_nuclear_plant516 : true <- !inspect_nuclear_plant5161. 
+!inspect_nuclear_plant5161 : true & .intend(inspect_nuclear_plant516, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield516_id839_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield516", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield516", "G(add_belief(perc_rad516(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield516", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield516").
-!inspect_nuclear_plant516 : .intend(inspect_nuclear_plant516, I) & violated(I, "shield516", Cmds) & (count(I, "shield516", Count) | (not(count(I, "shield516", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant516.
-!inspect_nuclear_plant516 : .intend(inspect_nuclear_plant516, I) & (count(I, "shield516", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield516"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant517 : true <- !inspect_nuclear_plant5171. 
+!inspect_nuclear_plant5171 : fast & .intend(inspect_nuclear_plant517, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield517_id840_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield517", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield517", "G(add_belief(perc_rad517(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield517", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield517").
+!inspect_nuclear_plant517 : true <- !inspect_nuclear_plant5171. 
+!inspect_nuclear_plant5171 : true & .intend(inspect_nuclear_plant517, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield517_id841_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield517", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield517", "G(add_belief(perc_rad517(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield517", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield517").
-!inspect_nuclear_plant517 : .intend(inspect_nuclear_plant517, I) & violated(I, "shield517", Cmds) & (count(I, "shield517", Count) | (not(count(I, "shield517", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant517.
-!inspect_nuclear_plant517 : .intend(inspect_nuclear_plant517, I) & (count(I, "shield517", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield517"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant518 : true <- !inspect_nuclear_plant5181. 
+!inspect_nuclear_plant5181 : fast & .intend(inspect_nuclear_plant518, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield518_id842_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield518", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield518", "G(add_belief(perc_rad518(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield518", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield518").
+!inspect_nuclear_plant518 : true <- !inspect_nuclear_plant5181. 
+!inspect_nuclear_plant5181 : true & .intend(inspect_nuclear_plant518, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield518_id843_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield518", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield518", "G(add_belief(perc_rad518(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield518", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield518").
-!inspect_nuclear_plant518 : .intend(inspect_nuclear_plant518, I) & violated(I, "shield518", Cmds) & (count(I, "shield518", Count) | (not(count(I, "shield518", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant518.
-!inspect_nuclear_plant518 : .intend(inspect_nuclear_plant518, I) & (count(I, "shield518", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield518"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant519 : true <- !inspect_nuclear_plant5191. 
+!inspect_nuclear_plant5191 : fast & .intend(inspect_nuclear_plant519, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield519_id844_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield519", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield519", "G(add_belief(perc_rad519(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield519", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield519").
+!inspect_nuclear_plant519 : true <- !inspect_nuclear_plant5191. 
+!inspect_nuclear_plant5191 : true & .intend(inspect_nuclear_plant519, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield519_id845_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield519", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield519", "G(add_belief(perc_rad519(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield519", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield519").
-!inspect_nuclear_plant519 : .intend(inspect_nuclear_plant519, I) & violated(I, "shield519", Cmds) & (count(I, "shield519", Count) | (not(count(I, "shield519", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant519.
-!inspect_nuclear_plant519 : .intend(inspect_nuclear_plant519, I) & (count(I, "shield519", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield519"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant520 : true <- !inspect_nuclear_plant5201. 
+!inspect_nuclear_plant5201 : fast & .intend(inspect_nuclear_plant520, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield520_id846_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield520", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield520", "G(add_belief(perc_rad520(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield520", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield520").
+!inspect_nuclear_plant520 : true <- !inspect_nuclear_plant5201. 
+!inspect_nuclear_plant5201 : true & .intend(inspect_nuclear_plant520, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield520_id847_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield520", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield520", "G(add_belief(perc_rad520(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield520", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield520").
-!inspect_nuclear_plant520 : .intend(inspect_nuclear_plant520, I) & violated(I, "shield520", Cmds) & (count(I, "shield520", Count) | (not(count(I, "shield520", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant520.
-!inspect_nuclear_plant520 : .intend(inspect_nuclear_plant520, I) & (count(I, "shield520", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield520"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant521 : true <- !inspect_nuclear_plant5211. 
+!inspect_nuclear_plant5211 : fast & .intend(inspect_nuclear_plant521, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield521_id848_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield521", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield521", "G(add_belief(perc_rad521(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield521", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield521").
+!inspect_nuclear_plant521 : true <- !inspect_nuclear_plant5211. 
+!inspect_nuclear_plant5211 : true & .intend(inspect_nuclear_plant521, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield521_id849_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield521", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield521", "G(add_belief(perc_rad521(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield521", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield521").
-!inspect_nuclear_plant521 : .intend(inspect_nuclear_plant521, I) & violated(I, "shield521", Cmds) & (count(I, "shield521", Count) | (not(count(I, "shield521", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant521.
-!inspect_nuclear_plant521 : .intend(inspect_nuclear_plant521, I) & (count(I, "shield521", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield521"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant522 : true <- !inspect_nuclear_plant5221. 
+!inspect_nuclear_plant5221 : fast & .intend(inspect_nuclear_plant522, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield522_id850_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield522", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield522", "G(add_belief(perc_rad522(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield522", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield522").
+!inspect_nuclear_plant522 : true <- !inspect_nuclear_plant5221. 
+!inspect_nuclear_plant5221 : true & .intend(inspect_nuclear_plant522, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield522_id851_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield522", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield522", "G(add_belief(perc_rad522(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield522", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield522").
-!inspect_nuclear_plant522 : .intend(inspect_nuclear_plant522, I) & violated(I, "shield522", Cmds) & (count(I, "shield522", Count) | (not(count(I, "shield522", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant522.
-!inspect_nuclear_plant522 : .intend(inspect_nuclear_plant522, I) & (count(I, "shield522", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield522"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant523 : true <- !inspect_nuclear_plant5231. 
+!inspect_nuclear_plant5231 : fast & .intend(inspect_nuclear_plant523, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield523_id852_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield523", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield523", "G(add_belief(perc_rad523(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield523", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield523").
+!inspect_nuclear_plant523 : true <- !inspect_nuclear_plant5231. 
+!inspect_nuclear_plant5231 : true & .intend(inspect_nuclear_plant523, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield523_id853_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield523", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield523", "G(add_belief(perc_rad523(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield523", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield523").
-!inspect_nuclear_plant523 : .intend(inspect_nuclear_plant523, I) & violated(I, "shield523", Cmds) & (count(I, "shield523", Count) | (not(count(I, "shield523", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant523.
-!inspect_nuclear_plant523 : .intend(inspect_nuclear_plant523, I) & (count(I, "shield523", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield523"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant524 : true <- !inspect_nuclear_plant5241. 
+!inspect_nuclear_plant5241 : fast & .intend(inspect_nuclear_plant524, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield524_id854_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield524", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield524", "G(add_belief(perc_rad524(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield524", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield524").
+!inspect_nuclear_plant524 : true <- !inspect_nuclear_plant5241. 
+!inspect_nuclear_plant5241 : true & .intend(inspect_nuclear_plant524, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield524_id855_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield524", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield524", "G(add_belief(perc_rad524(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield524", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield524").
-!inspect_nuclear_plant524 : .intend(inspect_nuclear_plant524, I) & violated(I, "shield524", Cmds) & (count(I, "shield524", Count) | (not(count(I, "shield524", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant524.
-!inspect_nuclear_plant524 : .intend(inspect_nuclear_plant524, I) & (count(I, "shield524", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield524"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant525 : true <- !inspect_nuclear_plant5251. 
+!inspect_nuclear_plant5251 : fast & .intend(inspect_nuclear_plant525, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield525_id856_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield525", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield525", "G(add_belief(perc_rad525(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield525", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield525").
+!inspect_nuclear_plant525 : true <- !inspect_nuclear_plant5251. 
+!inspect_nuclear_plant5251 : true & .intend(inspect_nuclear_plant525, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield525_id857_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield525", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield525", "G(add_belief(perc_rad525(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield525", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield525").
-!inspect_nuclear_plant525 : .intend(inspect_nuclear_plant525, I) & violated(I, "shield525", Cmds) & (count(I, "shield525", Count) | (not(count(I, "shield525", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant525.
-!inspect_nuclear_plant525 : .intend(inspect_nuclear_plant525, I) & (count(I, "shield525", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield525"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant526 : true <- !inspect_nuclear_plant5261. 
+!inspect_nuclear_plant5261 : fast & .intend(inspect_nuclear_plant526, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield526_id858_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield526", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield526", "G(add_belief(perc_rad526(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield526", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield526").
+!inspect_nuclear_plant526 : true <- !inspect_nuclear_plant5261. 
+!inspect_nuclear_plant5261 : true & .intend(inspect_nuclear_plant526, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield526_id859_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield526", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield526", "G(add_belief(perc_rad526(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield526", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield526").
-!inspect_nuclear_plant526 : .intend(inspect_nuclear_plant526, I) & violated(I, "shield526", Cmds) & (count(I, "shield526", Count) | (not(count(I, "shield526", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant526.
-!inspect_nuclear_plant526 : .intend(inspect_nuclear_plant526, I) & (count(I, "shield526", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield526"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant527 : true <- !inspect_nuclear_plant5271. 
+!inspect_nuclear_plant5271 : fast & .intend(inspect_nuclear_plant527, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield527_id860_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield527", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield527", "G(add_belief(perc_rad527(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield527", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield527").
+!inspect_nuclear_plant527 : true <- !inspect_nuclear_plant5271. 
+!inspect_nuclear_plant5271 : true & .intend(inspect_nuclear_plant527, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield527_id861_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield527", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield527", "G(add_belief(perc_rad527(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield527", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield527").
-!inspect_nuclear_plant527 : .intend(inspect_nuclear_plant527, I) & violated(I, "shield527", Cmds) & (count(I, "shield527", Count) | (not(count(I, "shield527", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant527.
-!inspect_nuclear_plant527 : .intend(inspect_nuclear_plant527, I) & (count(I, "shield527", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield527"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant528 : true <- !inspect_nuclear_plant5281. 
+!inspect_nuclear_plant5281 : fast & .intend(inspect_nuclear_plant528, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield528_id862_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield528", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield528", "G(add_belief(perc_rad528(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield528", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield528").
+!inspect_nuclear_plant528 : true <- !inspect_nuclear_plant5281. 
+!inspect_nuclear_plant5281 : true & .intend(inspect_nuclear_plant528, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield528_id863_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield528", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield528", "G(add_belief(perc_rad528(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield528", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield528").
-!inspect_nuclear_plant528 : .intend(inspect_nuclear_plant528, I) & violated(I, "shield528", Cmds) & (count(I, "shield528", Count) | (not(count(I, "shield528", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant528.
-!inspect_nuclear_plant528 : .intend(inspect_nuclear_plant528, I) & (count(I, "shield528", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield528"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant529 : true <- !inspect_nuclear_plant5291. 
+!inspect_nuclear_plant5291 : fast & .intend(inspect_nuclear_plant529, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield529_id864_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield529", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield529", "G(add_belief(perc_rad529(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield529", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield529").
+!inspect_nuclear_plant529 : true <- !inspect_nuclear_plant5291. 
+!inspect_nuclear_plant5291 : true & .intend(inspect_nuclear_plant529, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield529_id865_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield529", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield529", "G(add_belief(perc_rad529(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield529", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield529").
-!inspect_nuclear_plant529 : .intend(inspect_nuclear_plant529, I) & violated(I, "shield529", Cmds) & (count(I, "shield529", Count) | (not(count(I, "shield529", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant529.
-!inspect_nuclear_plant529 : .intend(inspect_nuclear_plant529, I) & (count(I, "shield529", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield529"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant530 : true <- !inspect_nuclear_plant5301. 
+!inspect_nuclear_plant5301 : fast & .intend(inspect_nuclear_plant530, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield530_id866_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield530", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield530", "G(add_belief(perc_rad530(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield530", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield530").
+!inspect_nuclear_plant530 : true <- !inspect_nuclear_plant5301. 
+!inspect_nuclear_plant5301 : true & .intend(inspect_nuclear_plant530, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield530_id867_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield530", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield530", "G(add_belief(perc_rad530(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield530", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield530").
-!inspect_nuclear_plant530 : .intend(inspect_nuclear_plant530, I) & violated(I, "shield530", Cmds) & (count(I, "shield530", Count) | (not(count(I, "shield530", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant530.
-!inspect_nuclear_plant530 : .intend(inspect_nuclear_plant530, I) & (count(I, "shield530", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield530"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant531 : true <- !inspect_nuclear_plant5311. 
+!inspect_nuclear_plant5311 : fast & .intend(inspect_nuclear_plant531, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield531_id868_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield531", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield531", "G(add_belief(perc_rad531(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield531", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield531").
+!inspect_nuclear_plant531 : true <- !inspect_nuclear_plant5311. 
+!inspect_nuclear_plant5311 : true & .intend(inspect_nuclear_plant531, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield531_id869_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield531", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield531", "G(add_belief(perc_rad531(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield531", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield531").
-!inspect_nuclear_plant531 : .intend(inspect_nuclear_plant531, I) & violated(I, "shield531", Cmds) & (count(I, "shield531", Count) | (not(count(I, "shield531", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant531.
-!inspect_nuclear_plant531 : .intend(inspect_nuclear_plant531, I) & (count(I, "shield531", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield531"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant532 : true <- !inspect_nuclear_plant5321. 
+!inspect_nuclear_plant5321 : fast & .intend(inspect_nuclear_plant532, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield532_id870_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield532", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield532", "G(add_belief(perc_rad532(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield532", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield532").
+!inspect_nuclear_plant532 : true <- !inspect_nuclear_plant5321. 
+!inspect_nuclear_plant5321 : true & .intend(inspect_nuclear_plant532, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield532_id871_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield532", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield532", "G(add_belief(perc_rad532(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield532", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield532").
-!inspect_nuclear_plant532 : .intend(inspect_nuclear_plant532, I) & violated(I, "shield532", Cmds) & (count(I, "shield532", Count) | (not(count(I, "shield532", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant532.
-!inspect_nuclear_plant532 : .intend(inspect_nuclear_plant532, I) & (count(I, "shield532", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield532"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant533 : true <- !inspect_nuclear_plant5331. 
+!inspect_nuclear_plant5331 : fast & .intend(inspect_nuclear_plant533, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield533_id872_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield533", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield533", "G(add_belief(perc_rad533(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield533", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield533").
+!inspect_nuclear_plant533 : true <- !inspect_nuclear_plant5331. 
+!inspect_nuclear_plant5331 : true & .intend(inspect_nuclear_plant533, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield533_id873_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield533", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield533", "G(add_belief(perc_rad533(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield533", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield533").
-!inspect_nuclear_plant533 : .intend(inspect_nuclear_plant533, I) & violated(I, "shield533", Cmds) & (count(I, "shield533", Count) | (not(count(I, "shield533", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant533.
-!inspect_nuclear_plant533 : .intend(inspect_nuclear_plant533, I) & (count(I, "shield533", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield533"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant534 : true <- !inspect_nuclear_plant5341. 
+!inspect_nuclear_plant5341 : fast & .intend(inspect_nuclear_plant534, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield534_id874_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield534", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield534", "G(add_belief(perc_rad534(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield534", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield534").
+!inspect_nuclear_plant534 : true <- !inspect_nuclear_plant5341. 
+!inspect_nuclear_plant5341 : true & .intend(inspect_nuclear_plant534, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield534_id875_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield534", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield534", "G(add_belief(perc_rad534(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield534", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield534").
-!inspect_nuclear_plant534 : .intend(inspect_nuclear_plant534, I) & violated(I, "shield534", Cmds) & (count(I, "shield534", Count) | (not(count(I, "shield534", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant534.
-!inspect_nuclear_plant534 : .intend(inspect_nuclear_plant534, I) & (count(I, "shield534", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield534"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant535 : true <- !inspect_nuclear_plant5351. 
+!inspect_nuclear_plant5351 : fast & .intend(inspect_nuclear_plant535, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield535_id876_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield535", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield535", "G(add_belief(perc_rad535(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield535", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield535").
+!inspect_nuclear_plant535 : true <- !inspect_nuclear_plant5351. 
+!inspect_nuclear_plant5351 : true & .intend(inspect_nuclear_plant535, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield535_id877_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield535", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield535", "G(add_belief(perc_rad535(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield535", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield535").
-!inspect_nuclear_plant535 : .intend(inspect_nuclear_plant535, I) & violated(I, "shield535", Cmds) & (count(I, "shield535", Count) | (not(count(I, "shield535", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant535.
-!inspect_nuclear_plant535 : .intend(inspect_nuclear_plant535, I) & (count(I, "shield535", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield535"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant536 : true <- !inspect_nuclear_plant5361. 
+!inspect_nuclear_plant5361 : fast & .intend(inspect_nuclear_plant536, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield536_id878_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield536", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield536", "G(add_belief(perc_rad536(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield536", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield536").
+!inspect_nuclear_plant536 : true <- !inspect_nuclear_plant5361. 
+!inspect_nuclear_plant5361 : true & .intend(inspect_nuclear_plant536, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield536_id879_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield536", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield536", "G(add_belief(perc_rad536(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield536", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield536").
-!inspect_nuclear_plant536 : .intend(inspect_nuclear_plant536, I) & violated(I, "shield536", Cmds) & (count(I, "shield536", Count) | (not(count(I, "shield536", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant536.
-!inspect_nuclear_plant536 : .intend(inspect_nuclear_plant536, I) & (count(I, "shield536", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield536"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant537 : true <- !inspect_nuclear_plant5371. 
+!inspect_nuclear_plant5371 : fast & .intend(inspect_nuclear_plant537, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield537_id880_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield537", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield537", "G(add_belief(perc_rad537(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield537", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield537").
+!inspect_nuclear_plant537 : true <- !inspect_nuclear_plant5371. 
+!inspect_nuclear_plant5371 : true & .intend(inspect_nuclear_plant537, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield537_id881_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield537", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield537", "G(add_belief(perc_rad537(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield537", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield537").
-!inspect_nuclear_plant537 : .intend(inspect_nuclear_plant537, I) & violated(I, "shield537", Cmds) & (count(I, "shield537", Count) | (not(count(I, "shield537", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant537.
-!inspect_nuclear_plant537 : .intend(inspect_nuclear_plant537, I) & (count(I, "shield537", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield537"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant538 : true <- !inspect_nuclear_plant5381. 
+!inspect_nuclear_plant5381 : fast & .intend(inspect_nuclear_plant538, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield538_id882_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield538", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield538", "G(add_belief(perc_rad538(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield538", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield538").
+!inspect_nuclear_plant538 : true <- !inspect_nuclear_plant5381. 
+!inspect_nuclear_plant5381 : true & .intend(inspect_nuclear_plant538, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield538_id883_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield538", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield538", "G(add_belief(perc_rad538(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield538", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield538").
-!inspect_nuclear_plant538 : .intend(inspect_nuclear_plant538, I) & violated(I, "shield538", Cmds) & (count(I, "shield538", Count) | (not(count(I, "shield538", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant538.
-!inspect_nuclear_plant538 : .intend(inspect_nuclear_plant538, I) & (count(I, "shield538", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield538"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant539 : true <- !inspect_nuclear_plant5391. 
+!inspect_nuclear_plant5391 : fast & .intend(inspect_nuclear_plant539, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield539_id884_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield539", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield539", "G(add_belief(perc_rad539(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield539", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield539").
+!inspect_nuclear_plant539 : true <- !inspect_nuclear_plant5391. 
+!inspect_nuclear_plant5391 : true & .intend(inspect_nuclear_plant539, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield539_id885_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield539", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield539", "G(add_belief(perc_rad539(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield539", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield539").
-!inspect_nuclear_plant539 : .intend(inspect_nuclear_plant539, I) & violated(I, "shield539", Cmds) & (count(I, "shield539", Count) | (not(count(I, "shield539", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant539.
-!inspect_nuclear_plant539 : .intend(inspect_nuclear_plant539, I) & (count(I, "shield539", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield539"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant540 : true <- !inspect_nuclear_plant5401. 
+!inspect_nuclear_plant5401 : fast & .intend(inspect_nuclear_plant540, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield540_id886_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield540", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield540", "G(add_belief(perc_rad540(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield540", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield540").
+!inspect_nuclear_plant540 : true <- !inspect_nuclear_plant5401. 
+!inspect_nuclear_plant5401 : true & .intend(inspect_nuclear_plant540, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield540_id887_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield540", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield540", "G(add_belief(perc_rad540(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield540", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield540").
-!inspect_nuclear_plant540 : .intend(inspect_nuclear_plant540, I) & violated(I, "shield540", Cmds) & (count(I, "shield540", Count) | (not(count(I, "shield540", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant540.
-!inspect_nuclear_plant540 : .intend(inspect_nuclear_plant540, I) & (count(I, "shield540", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield540"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant541 : true <- !inspect_nuclear_plant5411. 
+!inspect_nuclear_plant5411 : fast & .intend(inspect_nuclear_plant541, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield541_id888_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield541", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield541", "G(add_belief(perc_rad541(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield541", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield541").
+!inspect_nuclear_plant541 : true <- !inspect_nuclear_plant5411. 
+!inspect_nuclear_plant5411 : true & .intend(inspect_nuclear_plant541, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield541_id889_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield541", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield541", "G(add_belief(perc_rad541(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield541", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield541").
-!inspect_nuclear_plant541 : .intend(inspect_nuclear_plant541, I) & violated(I, "shield541", Cmds) & (count(I, "shield541", Count) | (not(count(I, "shield541", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant541.
-!inspect_nuclear_plant541 : .intend(inspect_nuclear_plant541, I) & (count(I, "shield541", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield541"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant542 : true <- !inspect_nuclear_plant5421. 
+!inspect_nuclear_plant5421 : fast & .intend(inspect_nuclear_plant542, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield542_id890_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield542", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield542", "G(add_belief(perc_rad542(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield542", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield542").
+!inspect_nuclear_plant542 : true <- !inspect_nuclear_plant5421. 
+!inspect_nuclear_plant5421 : true & .intend(inspect_nuclear_plant542, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield542_id891_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield542", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield542", "G(add_belief(perc_rad542(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield542", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield542").
-!inspect_nuclear_plant542 : .intend(inspect_nuclear_plant542, I) & violated(I, "shield542", Cmds) & (count(I, "shield542", Count) | (not(count(I, "shield542", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant542.
-!inspect_nuclear_plant542 : .intend(inspect_nuclear_plant542, I) & (count(I, "shield542", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield542"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant543 : true <- !inspect_nuclear_plant5431. 
+!inspect_nuclear_plant5431 : fast & .intend(inspect_nuclear_plant543, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield543_id892_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield543", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield543", "G(add_belief(perc_rad543(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield543", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield543").
+!inspect_nuclear_plant543 : true <- !inspect_nuclear_plant5431. 
+!inspect_nuclear_plant5431 : true & .intend(inspect_nuclear_plant543, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield543_id893_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield543", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield543", "G(add_belief(perc_rad543(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield543", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield543").
-!inspect_nuclear_plant543 : .intend(inspect_nuclear_plant543, I) & violated(I, "shield543", Cmds) & (count(I, "shield543", Count) | (not(count(I, "shield543", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant543.
-!inspect_nuclear_plant543 : .intend(inspect_nuclear_plant543, I) & (count(I, "shield543", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield543"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant544 : true <- !inspect_nuclear_plant5441. 
+!inspect_nuclear_plant5441 : fast & .intend(inspect_nuclear_plant544, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield544_id894_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield544", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield544", "G(add_belief(perc_rad544(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield544", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield544").
+!inspect_nuclear_plant544 : true <- !inspect_nuclear_plant5441. 
+!inspect_nuclear_plant5441 : true & .intend(inspect_nuclear_plant544, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield544_id895_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield544", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield544", "G(add_belief(perc_rad544(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield544", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield544").
-!inspect_nuclear_plant544 : .intend(inspect_nuclear_plant544, I) & violated(I, "shield544", Cmds) & (count(I, "shield544", Count) | (not(count(I, "shield544", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant544.
-!inspect_nuclear_plant544 : .intend(inspect_nuclear_plant544, I) & (count(I, "shield544", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield544"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant545 : true <- !inspect_nuclear_plant5451. 
+!inspect_nuclear_plant5451 : fast & .intend(inspect_nuclear_plant545, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield545_id896_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield545", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield545", "G(add_belief(perc_rad545(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield545", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield545").
+!inspect_nuclear_plant545 : true <- !inspect_nuclear_plant5451. 
+!inspect_nuclear_plant5451 : true & .intend(inspect_nuclear_plant545, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield545_id897_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield545", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield545", "G(add_belief(perc_rad545(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield545", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield545").
-!inspect_nuclear_plant545 : .intend(inspect_nuclear_plant545, I) & violated(I, "shield545", Cmds) & (count(I, "shield545", Count) | (not(count(I, "shield545", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant545.
-!inspect_nuclear_plant545 : .intend(inspect_nuclear_plant545, I) & (count(I, "shield545", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield545"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant546 : true <- !inspect_nuclear_plant5461. 
+!inspect_nuclear_plant5461 : fast & .intend(inspect_nuclear_plant546, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield546_id898_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield546", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield546", "G(add_belief(perc_rad546(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield546", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield546").
+!inspect_nuclear_plant546 : true <- !inspect_nuclear_plant5461. 
+!inspect_nuclear_plant5461 : true & .intend(inspect_nuclear_plant546, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield546_id899_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield546", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield546", "G(add_belief(perc_rad546(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield546", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield546").
-!inspect_nuclear_plant546 : .intend(inspect_nuclear_plant546, I) & violated(I, "shield546", Cmds) & (count(I, "shield546", Count) | (not(count(I, "shield546", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant546.
-!inspect_nuclear_plant546 : .intend(inspect_nuclear_plant546, I) & (count(I, "shield546", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield546"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant547 : true <- !inspect_nuclear_plant5471. 
+!inspect_nuclear_plant5471 : fast & .intend(inspect_nuclear_plant547, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield547_id900_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield547", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield547", "G(add_belief(perc_rad547(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield547", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield547").
+!inspect_nuclear_plant547 : true <- !inspect_nuclear_plant5471. 
+!inspect_nuclear_plant5471 : true & .intend(inspect_nuclear_plant547, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield547_id901_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield547", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield547", "G(add_belief(perc_rad547(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield547", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield547").
-!inspect_nuclear_plant547 : .intend(inspect_nuclear_plant547, I) & violated(I, "shield547", Cmds) & (count(I, "shield547", Count) | (not(count(I, "shield547", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant547.
-!inspect_nuclear_plant547 : .intend(inspect_nuclear_plant547, I) & (count(I, "shield547", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield547"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant548 : true <- !inspect_nuclear_plant5481. 
+!inspect_nuclear_plant5481 : fast & .intend(inspect_nuclear_plant548, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield548_id902_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield548", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield548", "G(add_belief(perc_rad548(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield548", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield548").
+!inspect_nuclear_plant548 : true <- !inspect_nuclear_plant5481. 
+!inspect_nuclear_plant5481 : true & .intend(inspect_nuclear_plant548, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield548_id903_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield548", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield548", "G(add_belief(perc_rad548(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield548", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield548").
-!inspect_nuclear_plant548 : .intend(inspect_nuclear_plant548, I) & violated(I, "shield548", Cmds) & (count(I, "shield548", Count) | (not(count(I, "shield548", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant548.
-!inspect_nuclear_plant548 : .intend(inspect_nuclear_plant548, I) & (count(I, "shield548", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield548"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant549 : true <- !inspect_nuclear_plant5491. 
+!inspect_nuclear_plant5491 : fast & .intend(inspect_nuclear_plant549, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield549_id904_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield549", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield549", "G(add_belief(perc_rad549(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield549", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield549").
+!inspect_nuclear_plant549 : true <- !inspect_nuclear_plant5491. 
+!inspect_nuclear_plant5491 : true & .intend(inspect_nuclear_plant549, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield549_id905_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield549", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield549", "G(add_belief(perc_rad549(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield549", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield549").
-!inspect_nuclear_plant549 : .intend(inspect_nuclear_plant549, I) & violated(I, "shield549", Cmds) & (count(I, "shield549", Count) | (not(count(I, "shield549", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant549.
-!inspect_nuclear_plant549 : .intend(inspect_nuclear_plant549, I) & (count(I, "shield549", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield549"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant550 : true <- !inspect_nuclear_plant5501. 
+!inspect_nuclear_plant5501 : fast & .intend(inspect_nuclear_plant550, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield550_id906_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield550", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield550", "G(add_belief(perc_rad550(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield550", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield550").
+!inspect_nuclear_plant550 : true <- !inspect_nuclear_plant5501. 
+!inspect_nuclear_plant5501 : true & .intend(inspect_nuclear_plant550, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield550_id907_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield550", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield550", "G(add_belief(perc_rad550(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield550", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield550").
-!inspect_nuclear_plant550 : .intend(inspect_nuclear_plant550, I) & violated(I, "shield550", Cmds) & (count(I, "shield550", Count) | (not(count(I, "shield550", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant550.
-!inspect_nuclear_plant550 : .intend(inspect_nuclear_plant550, I) & (count(I, "shield550", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield550"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant551 : true <- !inspect_nuclear_plant5511. 
+!inspect_nuclear_plant5511 : fast & .intend(inspect_nuclear_plant551, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield551_id908_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield551", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield551", "G(add_belief(perc_rad551(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield551", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield551").
+!inspect_nuclear_plant551 : true <- !inspect_nuclear_plant5511. 
+!inspect_nuclear_plant5511 : true & .intend(inspect_nuclear_plant551, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield551_id909_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield551", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield551", "G(add_belief(perc_rad551(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield551", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield551").
-!inspect_nuclear_plant551 : .intend(inspect_nuclear_plant551, I) & violated(I, "shield551", Cmds) & (count(I, "shield551", Count) | (not(count(I, "shield551", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant551.
-!inspect_nuclear_plant551 : .intend(inspect_nuclear_plant551, I) & (count(I, "shield551", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield551"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant552 : true <- !inspect_nuclear_plant5521. 
+!inspect_nuclear_plant5521 : fast & .intend(inspect_nuclear_plant552, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield552_id910_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield552", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield552", "G(add_belief(perc_rad552(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield552", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield552").
+!inspect_nuclear_plant552 : true <- !inspect_nuclear_plant5521. 
+!inspect_nuclear_plant5521 : true & .intend(inspect_nuclear_plant552, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield552_id911_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield552", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield552", "G(add_belief(perc_rad552(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield552", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield552").
-!inspect_nuclear_plant552 : .intend(inspect_nuclear_plant552, I) & violated(I, "shield552", Cmds) & (count(I, "shield552", Count) | (not(count(I, "shield552", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant552.
-!inspect_nuclear_plant552 : .intend(inspect_nuclear_plant552, I) & (count(I, "shield552", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield552"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant553 : true <- !inspect_nuclear_plant5531. 
+!inspect_nuclear_plant5531 : fast & .intend(inspect_nuclear_plant553, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield553_id912_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield553", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield553", "G(add_belief(perc_rad553(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield553", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield553").
+!inspect_nuclear_plant553 : true <- !inspect_nuclear_plant5531. 
+!inspect_nuclear_plant5531 : true & .intend(inspect_nuclear_plant553, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield553_id913_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield553", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield553", "G(add_belief(perc_rad553(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield553", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield553").
-!inspect_nuclear_plant553 : .intend(inspect_nuclear_plant553, I) & violated(I, "shield553", Cmds) & (count(I, "shield553", Count) | (not(count(I, "shield553", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant553.
-!inspect_nuclear_plant553 : .intend(inspect_nuclear_plant553, I) & (count(I, "shield553", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield553"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant554 : true <- !inspect_nuclear_plant5541. 
+!inspect_nuclear_plant5541 : fast & .intend(inspect_nuclear_plant554, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield554_id914_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield554", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield554", "G(add_belief(perc_rad554(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield554", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield554").
+!inspect_nuclear_plant554 : true <- !inspect_nuclear_plant5541. 
+!inspect_nuclear_plant5541 : true & .intend(inspect_nuclear_plant554, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield554_id915_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield554", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield554", "G(add_belief(perc_rad554(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield554", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield554").
-!inspect_nuclear_plant554 : .intend(inspect_nuclear_plant554, I) & violated(I, "shield554", Cmds) & (count(I, "shield554", Count) | (not(count(I, "shield554", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant554.
-!inspect_nuclear_plant554 : .intend(inspect_nuclear_plant554, I) & (count(I, "shield554", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield554"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant555 : true <- !inspect_nuclear_plant5551. 
+!inspect_nuclear_plant5551 : fast & .intend(inspect_nuclear_plant555, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield555_id916_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield555", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield555", "G(add_belief(perc_rad555(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield555", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield555").
+!inspect_nuclear_plant555 : true <- !inspect_nuclear_plant5551. 
+!inspect_nuclear_plant5551 : true & .intend(inspect_nuclear_plant555, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield555_id917_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield555", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield555", "G(add_belief(perc_rad555(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield555", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield555").
-!inspect_nuclear_plant555 : .intend(inspect_nuclear_plant555, I) & violated(I, "shield555", Cmds) & (count(I, "shield555", Count) | (not(count(I, "shield555", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant555.
-!inspect_nuclear_plant555 : .intend(inspect_nuclear_plant555, I) & (count(I, "shield555", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield555"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant556 : true <- !inspect_nuclear_plant5561. 
+!inspect_nuclear_plant5561 : fast & .intend(inspect_nuclear_plant556, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield556_id918_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield556", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield556", "G(add_belief(perc_rad556(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield556", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield556").
+!inspect_nuclear_plant556 : true <- !inspect_nuclear_plant5561. 
+!inspect_nuclear_plant5561 : true & .intend(inspect_nuclear_plant556, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield556_id919_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield556", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield556", "G(add_belief(perc_rad556(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield556", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield556").
-!inspect_nuclear_plant556 : .intend(inspect_nuclear_plant556, I) & violated(I, "shield556", Cmds) & (count(I, "shield556", Count) | (not(count(I, "shield556", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant556.
-!inspect_nuclear_plant556 : .intend(inspect_nuclear_plant556, I) & (count(I, "shield556", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield556"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant557 : true <- !inspect_nuclear_plant5571. 
+!inspect_nuclear_plant5571 : fast & .intend(inspect_nuclear_plant557, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield557_id920_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield557", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield557", "G(add_belief(perc_rad557(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield557", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield557").
+!inspect_nuclear_plant557 : true <- !inspect_nuclear_plant5571. 
+!inspect_nuclear_plant5571 : true & .intend(inspect_nuclear_plant557, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield557_id921_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield557", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield557", "G(add_belief(perc_rad557(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield557", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield557").
-!inspect_nuclear_plant557 : .intend(inspect_nuclear_plant557, I) & violated(I, "shield557", Cmds) & (count(I, "shield557", Count) | (not(count(I, "shield557", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant557.
-!inspect_nuclear_plant557 : .intend(inspect_nuclear_plant557, I) & (count(I, "shield557", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield557"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant558 : true <- !inspect_nuclear_plant5581. 
+!inspect_nuclear_plant5581 : fast & .intend(inspect_nuclear_plant558, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield558_id922_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield558", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield558", "G(add_belief(perc_rad558(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield558", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield558").
+!inspect_nuclear_plant558 : true <- !inspect_nuclear_plant5581. 
+!inspect_nuclear_plant5581 : true & .intend(inspect_nuclear_plant558, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield558_id923_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield558", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield558", "G(add_belief(perc_rad558(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield558", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield558").
-!inspect_nuclear_plant558 : .intend(inspect_nuclear_plant558, I) & violated(I, "shield558", Cmds) & (count(I, "shield558", Count) | (not(count(I, "shield558", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant558.
-!inspect_nuclear_plant558 : .intend(inspect_nuclear_plant558, I) & (count(I, "shield558", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield558"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant559 : true <- !inspect_nuclear_plant5591. 
+!inspect_nuclear_plant5591 : fast & .intend(inspect_nuclear_plant559, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield559_id924_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield559", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield559", "G(add_belief(perc_rad559(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield559", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield559").
+!inspect_nuclear_plant559 : true <- !inspect_nuclear_plant5591. 
+!inspect_nuclear_plant5591 : true & .intend(inspect_nuclear_plant559, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield559_id925_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield559", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield559", "G(add_belief(perc_rad559(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield559", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield559").
-!inspect_nuclear_plant559 : .intend(inspect_nuclear_plant559, I) & violated(I, "shield559", Cmds) & (count(I, "shield559", Count) | (not(count(I, "shield559", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant559.
-!inspect_nuclear_plant559 : .intend(inspect_nuclear_plant559, I) & (count(I, "shield559", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield559"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant560 : true <- !inspect_nuclear_plant5601. 
+!inspect_nuclear_plant5601 : fast & .intend(inspect_nuclear_plant560, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield560_id926_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield560", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield560", "G(add_belief(perc_rad560(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield560", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield560").
+!inspect_nuclear_plant560 : true <- !inspect_nuclear_plant5601. 
+!inspect_nuclear_plant5601 : true & .intend(inspect_nuclear_plant560, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield560_id927_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield560", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield560", "G(add_belief(perc_rad560(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield560", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield560").
-!inspect_nuclear_plant560 : .intend(inspect_nuclear_plant560, I) & violated(I, "shield560", Cmds) & (count(I, "shield560", Count) | (not(count(I, "shield560", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant560.
-!inspect_nuclear_plant560 : .intend(inspect_nuclear_plant560, I) & (count(I, "shield560", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield560"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant561 : true <- !inspect_nuclear_plant5611. 
+!inspect_nuclear_plant5611 : fast & .intend(inspect_nuclear_plant561, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield561_id928_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield561", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield561", "G(add_belief(perc_rad561(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield561", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield561").
+!inspect_nuclear_plant561 : true <- !inspect_nuclear_plant5611. 
+!inspect_nuclear_plant5611 : true & .intend(inspect_nuclear_plant561, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield561_id929_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield561", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield561", "G(add_belief(perc_rad561(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield561", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield561").
-!inspect_nuclear_plant561 : .intend(inspect_nuclear_plant561, I) & violated(I, "shield561", Cmds) & (count(I, "shield561", Count) | (not(count(I, "shield561", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant561.
-!inspect_nuclear_plant561 : .intend(inspect_nuclear_plant561, I) & (count(I, "shield561", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield561"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant562 : true <- !inspect_nuclear_plant5621. 
+!inspect_nuclear_plant5621 : fast & .intend(inspect_nuclear_plant562, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield562_id930_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield562", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield562", "G(add_belief(perc_rad562(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield562", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield562").
+!inspect_nuclear_plant562 : true <- !inspect_nuclear_plant5621. 
+!inspect_nuclear_plant5621 : true & .intend(inspect_nuclear_plant562, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield562_id931_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield562", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield562", "G(add_belief(perc_rad562(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield562", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield562").
-!inspect_nuclear_plant562 : .intend(inspect_nuclear_plant562, I) & violated(I, "shield562", Cmds) & (count(I, "shield562", Count) | (not(count(I, "shield562", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant562.
-!inspect_nuclear_plant562 : .intend(inspect_nuclear_plant562, I) & (count(I, "shield562", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield562"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant563 : true <- !inspect_nuclear_plant5631. 
+!inspect_nuclear_plant5631 : fast & .intend(inspect_nuclear_plant563, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield563_id932_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield563", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield563", "G(add_belief(perc_rad563(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield563", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield563").
+!inspect_nuclear_plant563 : true <- !inspect_nuclear_plant5631. 
+!inspect_nuclear_plant5631 : true & .intend(inspect_nuclear_plant563, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield563_id933_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield563", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield563", "G(add_belief(perc_rad563(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield563", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield563").
-!inspect_nuclear_plant563 : .intend(inspect_nuclear_plant563, I) & violated(I, "shield563", Cmds) & (count(I, "shield563", Count) | (not(count(I, "shield563", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant563.
-!inspect_nuclear_plant563 : .intend(inspect_nuclear_plant563, I) & (count(I, "shield563", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield563"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant564 : true <- !inspect_nuclear_plant5641. 
+!inspect_nuclear_plant5641 : fast & .intend(inspect_nuclear_plant564, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield564_id934_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield564", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield564", "G(add_belief(perc_rad564(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield564", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield564").
+!inspect_nuclear_plant564 : true <- !inspect_nuclear_plant5641. 
+!inspect_nuclear_plant5641 : true & .intend(inspect_nuclear_plant564, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield564_id935_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield564", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield564", "G(add_belief(perc_rad564(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield564", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield564").
-!inspect_nuclear_plant564 : .intend(inspect_nuclear_plant564, I) & violated(I, "shield564", Cmds) & (count(I, "shield564", Count) | (not(count(I, "shield564", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant564.
-!inspect_nuclear_plant564 : .intend(inspect_nuclear_plant564, I) & (count(I, "shield564", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield564"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant565 : true <- !inspect_nuclear_plant5651. 
+!inspect_nuclear_plant5651 : fast & .intend(inspect_nuclear_plant565, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield565_id936_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield565", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield565", "G(add_belief(perc_rad565(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield565", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield565").
+!inspect_nuclear_plant565 : true <- !inspect_nuclear_plant5651. 
+!inspect_nuclear_plant5651 : true & .intend(inspect_nuclear_plant565, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield565_id937_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield565", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield565", "G(add_belief(perc_rad565(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield565", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield565").
-!inspect_nuclear_plant565 : .intend(inspect_nuclear_plant565, I) & violated(I, "shield565", Cmds) & (count(I, "shield565", Count) | (not(count(I, "shield565", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant565.
-!inspect_nuclear_plant565 : .intend(inspect_nuclear_plant565, I) & (count(I, "shield565", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield565"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant566 : true <- !inspect_nuclear_plant5661. 
+!inspect_nuclear_plant5661 : fast & .intend(inspect_nuclear_plant566, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield566_id938_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield566", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield566", "G(add_belief(perc_rad566(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield566", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield566").
+!inspect_nuclear_plant566 : true <- !inspect_nuclear_plant5661. 
+!inspect_nuclear_plant5661 : true & .intend(inspect_nuclear_plant566, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield566_id939_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield566", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield566", "G(add_belief(perc_rad566(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield566", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield566").
-!inspect_nuclear_plant566 : .intend(inspect_nuclear_plant566, I) & violated(I, "shield566", Cmds) & (count(I, "shield566", Count) | (not(count(I, "shield566", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant566.
-!inspect_nuclear_plant566 : .intend(inspect_nuclear_plant566, I) & (count(I, "shield566", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield566"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant567 : true <- !inspect_nuclear_plant5671. 
+!inspect_nuclear_plant5671 : fast & .intend(inspect_nuclear_plant567, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield567_id940_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield567", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield567", "G(add_belief(perc_rad567(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield567", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield567").
+!inspect_nuclear_plant567 : true <- !inspect_nuclear_plant5671. 
+!inspect_nuclear_plant5671 : true & .intend(inspect_nuclear_plant567, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield567_id941_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield567", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield567", "G(add_belief(perc_rad567(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield567", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield567").
-!inspect_nuclear_plant567 : .intend(inspect_nuclear_plant567, I) & violated(I, "shield567", Cmds) & (count(I, "shield567", Count) | (not(count(I, "shield567", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant567.
-!inspect_nuclear_plant567 : .intend(inspect_nuclear_plant567, I) & (count(I, "shield567", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield567"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant568 : true <- !inspect_nuclear_plant5681. 
+!inspect_nuclear_plant5681 : fast & .intend(inspect_nuclear_plant568, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield568_id942_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield568", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield568", "G(add_belief(perc_rad568(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield568", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield568").
+!inspect_nuclear_plant568 : true <- !inspect_nuclear_plant5681. 
+!inspect_nuclear_plant5681 : true & .intend(inspect_nuclear_plant568, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield568_id943_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield568", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield568", "G(add_belief(perc_rad568(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield568", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield568").
-!inspect_nuclear_plant568 : .intend(inspect_nuclear_plant568, I) & violated(I, "shield568", Cmds) & (count(I, "shield568", Count) | (not(count(I, "shield568", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant568.
-!inspect_nuclear_plant568 : .intend(inspect_nuclear_plant568, I) & (count(I, "shield568", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield568"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant569 : true <- !inspect_nuclear_plant5691. 
+!inspect_nuclear_plant5691 : fast & .intend(inspect_nuclear_plant569, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield569_id944_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield569", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield569", "G(add_belief(perc_rad569(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield569", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield569").
+!inspect_nuclear_plant569 : true <- !inspect_nuclear_plant5691. 
+!inspect_nuclear_plant5691 : true & .intend(inspect_nuclear_plant569, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield569_id945_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield569", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield569", "G(add_belief(perc_rad569(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield569", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield569").
-!inspect_nuclear_plant569 : .intend(inspect_nuclear_plant569, I) & violated(I, "shield569", Cmds) & (count(I, "shield569", Count) | (not(count(I, "shield569", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant569.
-!inspect_nuclear_plant569 : .intend(inspect_nuclear_plant569, I) & (count(I, "shield569", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield569"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant570 : true <- !inspect_nuclear_plant5701. 
+!inspect_nuclear_plant5701 : fast & .intend(inspect_nuclear_plant570, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield570_id946_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield570", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield570", "G(add_belief(perc_rad570(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield570", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield570").
+!inspect_nuclear_plant570 : true <- !inspect_nuclear_plant5701. 
+!inspect_nuclear_plant5701 : true & .intend(inspect_nuclear_plant570, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield570_id947_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield570", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield570", "G(add_belief(perc_rad570(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield570", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield570").
-!inspect_nuclear_plant570 : .intend(inspect_nuclear_plant570, I) & violated(I, "shield570", Cmds) & (count(I, "shield570", Count) | (not(count(I, "shield570", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant570.
-!inspect_nuclear_plant570 : .intend(inspect_nuclear_plant570, I) & (count(I, "shield570", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield570"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant571 : true <- !inspect_nuclear_plant5711. 
+!inspect_nuclear_plant5711 : fast & .intend(inspect_nuclear_plant571, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield571_id948_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield571", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield571", "G(add_belief(perc_rad571(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield571", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield571").
+!inspect_nuclear_plant571 : true <- !inspect_nuclear_plant5711. 
+!inspect_nuclear_plant5711 : true & .intend(inspect_nuclear_plant571, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield571_id949_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield571", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield571", "G(add_belief(perc_rad571(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield571", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield571").
-!inspect_nuclear_plant571 : .intend(inspect_nuclear_plant571, I) & violated(I, "shield571", Cmds) & (count(I, "shield571", Count) | (not(count(I, "shield571", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant571.
-!inspect_nuclear_plant571 : .intend(inspect_nuclear_plant571, I) & (count(I, "shield571", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield571"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant572 : true <- !inspect_nuclear_plant5721. 
+!inspect_nuclear_plant5721 : fast & .intend(inspect_nuclear_plant572, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield572_id950_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield572", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield572", "G(add_belief(perc_rad572(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield572", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield572").
+!inspect_nuclear_plant572 : true <- !inspect_nuclear_plant5721. 
+!inspect_nuclear_plant5721 : true & .intend(inspect_nuclear_plant572, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield572_id951_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield572", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield572", "G(add_belief(perc_rad572(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield572", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield572").
-!inspect_nuclear_plant572 : .intend(inspect_nuclear_plant572, I) & violated(I, "shield572", Cmds) & (count(I, "shield572", Count) | (not(count(I, "shield572", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant572.
-!inspect_nuclear_plant572 : .intend(inspect_nuclear_plant572, I) & (count(I, "shield572", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield572"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant573 : true <- !inspect_nuclear_plant5731. 
+!inspect_nuclear_plant5731 : fast & .intend(inspect_nuclear_plant573, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield573_id952_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield573", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield573", "G(add_belief(perc_rad573(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield573", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield573").
+!inspect_nuclear_plant573 : true <- !inspect_nuclear_plant5731. 
+!inspect_nuclear_plant5731 : true & .intend(inspect_nuclear_plant573, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield573_id953_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield573", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield573", "G(add_belief(perc_rad573(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield573", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield573").
-!inspect_nuclear_plant573 : .intend(inspect_nuclear_plant573, I) & violated(I, "shield573", Cmds) & (count(I, "shield573", Count) | (not(count(I, "shield573", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant573.
-!inspect_nuclear_plant573 : .intend(inspect_nuclear_plant573, I) & (count(I, "shield573", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield573"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant574 : true <- !inspect_nuclear_plant5741. 
+!inspect_nuclear_plant5741 : fast & .intend(inspect_nuclear_plant574, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield574_id954_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield574", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield574", "G(add_belief(perc_rad574(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield574", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield574").
+!inspect_nuclear_plant574 : true <- !inspect_nuclear_plant5741. 
+!inspect_nuclear_plant5741 : true & .intend(inspect_nuclear_plant574, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield574_id955_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield574", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield574", "G(add_belief(perc_rad574(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield574", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield574").
-!inspect_nuclear_plant574 : .intend(inspect_nuclear_plant574, I) & violated(I, "shield574", Cmds) & (count(I, "shield574", Count) | (not(count(I, "shield574", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant574.
-!inspect_nuclear_plant574 : .intend(inspect_nuclear_plant574, I) & (count(I, "shield574", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield574"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant575 : true <- !inspect_nuclear_plant5751. 
+!inspect_nuclear_plant5751 : fast & .intend(inspect_nuclear_plant575, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield575_id956_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield575", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield575", "G(add_belief(perc_rad575(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield575", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield575").
+!inspect_nuclear_plant575 : true <- !inspect_nuclear_plant5751. 
+!inspect_nuclear_plant5751 : true & .intend(inspect_nuclear_plant575, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield575_id957_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield575", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield575", "G(add_belief(perc_rad575(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield575", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield575").
-!inspect_nuclear_plant575 : .intend(inspect_nuclear_plant575, I) & violated(I, "shield575", Cmds) & (count(I, "shield575", Count) | (not(count(I, "shield575", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant575.
-!inspect_nuclear_plant575 : .intend(inspect_nuclear_plant575, I) & (count(I, "shield575", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield575"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant576 : true <- !inspect_nuclear_plant5761. 
+!inspect_nuclear_plant5761 : fast & .intend(inspect_nuclear_plant576, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield576_id958_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield576", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield576", "G(add_belief(perc_rad576(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield576", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield576").
+!inspect_nuclear_plant576 : true <- !inspect_nuclear_plant5761. 
+!inspect_nuclear_plant5761 : true & .intend(inspect_nuclear_plant576, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield576_id959_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield576", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield576", "G(add_belief(perc_rad576(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield576", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield576").
-!inspect_nuclear_plant576 : .intend(inspect_nuclear_plant576, I) & violated(I, "shield576", Cmds) & (count(I, "shield576", Count) | (not(count(I, "shield576", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant576.
-!inspect_nuclear_plant576 : .intend(inspect_nuclear_plant576, I) & (count(I, "shield576", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield576"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant577 : true <- !inspect_nuclear_plant5771. 
+!inspect_nuclear_plant5771 : fast & .intend(inspect_nuclear_plant577, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield577_id960_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield577", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield577", "G(add_belief(perc_rad577(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield577", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield577").
+!inspect_nuclear_plant577 : true <- !inspect_nuclear_plant5771. 
+!inspect_nuclear_plant5771 : true & .intend(inspect_nuclear_plant577, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield577_id961_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield577", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield577", "G(add_belief(perc_rad577(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield577", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield577").
-!inspect_nuclear_plant577 : .intend(inspect_nuclear_plant577, I) & violated(I, "shield577", Cmds) & (count(I, "shield577", Count) | (not(count(I, "shield577", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant577.
-!inspect_nuclear_plant577 : .intend(inspect_nuclear_plant577, I) & (count(I, "shield577", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield577"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant578 : true <- !inspect_nuclear_plant5781. 
+!inspect_nuclear_plant5781 : fast & .intend(inspect_nuclear_plant578, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield578_id962_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield578", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield578", "G(add_belief(perc_rad578(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield578", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield578").
+!inspect_nuclear_plant578 : true <- !inspect_nuclear_plant5781. 
+!inspect_nuclear_plant5781 : true & .intend(inspect_nuclear_plant578, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield578_id963_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield578", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield578", "G(add_belief(perc_rad578(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield578", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield578").
-!inspect_nuclear_plant578 : .intend(inspect_nuclear_plant578, I) & violated(I, "shield578", Cmds) & (count(I, "shield578", Count) | (not(count(I, "shield578", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant578.
-!inspect_nuclear_plant578 : .intend(inspect_nuclear_plant578, I) & (count(I, "shield578", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield578"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant579 : true <- !inspect_nuclear_plant5791. 
+!inspect_nuclear_plant5791 : fast & .intend(inspect_nuclear_plant579, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield579_id964_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield579", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield579", "G(add_belief(perc_rad579(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield579", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield579").
+!inspect_nuclear_plant579 : true <- !inspect_nuclear_plant5791. 
+!inspect_nuclear_plant5791 : true & .intend(inspect_nuclear_plant579, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield579_id965_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield579", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield579", "G(add_belief(perc_rad579(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield579", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield579").
-!inspect_nuclear_plant579 : .intend(inspect_nuclear_plant579, I) & violated(I, "shield579", Cmds) & (count(I, "shield579", Count) | (not(count(I, "shield579", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant579.
-!inspect_nuclear_plant579 : .intend(inspect_nuclear_plant579, I) & (count(I, "shield579", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield579"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant580 : true <- !inspect_nuclear_plant5801. 
+!inspect_nuclear_plant5801 : fast & .intend(inspect_nuclear_plant580, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield580_id966_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield580", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield580", "G(add_belief(perc_rad580(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield580", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield580").
+!inspect_nuclear_plant580 : true <- !inspect_nuclear_plant5801. 
+!inspect_nuclear_plant5801 : true & .intend(inspect_nuclear_plant580, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield580_id967_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield580", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield580", "G(add_belief(perc_rad580(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield580", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield580").
-!inspect_nuclear_plant580 : .intend(inspect_nuclear_plant580, I) & violated(I, "shield580", Cmds) & (count(I, "shield580", Count) | (not(count(I, "shield580", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant580.
-!inspect_nuclear_plant580 : .intend(inspect_nuclear_plant580, I) & (count(I, "shield580", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield580"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant581 : true <- !inspect_nuclear_plant5811. 
+!inspect_nuclear_plant5811 : fast & .intend(inspect_nuclear_plant581, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield581_id968_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield581", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield581", "G(add_belief(perc_rad581(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield581", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield581").
+!inspect_nuclear_plant581 : true <- !inspect_nuclear_plant5811. 
+!inspect_nuclear_plant5811 : true & .intend(inspect_nuclear_plant581, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield581_id969_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield581", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield581", "G(add_belief(perc_rad581(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield581", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield581").
-!inspect_nuclear_plant581 : .intend(inspect_nuclear_plant581, I) & violated(I, "shield581", Cmds) & (count(I, "shield581", Count) | (not(count(I, "shield581", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant581.
-!inspect_nuclear_plant581 : .intend(inspect_nuclear_plant581, I) & (count(I, "shield581", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield581"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant582 : true <- !inspect_nuclear_plant5821. 
+!inspect_nuclear_plant5821 : fast & .intend(inspect_nuclear_plant582, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield582_id970_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield582", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield582", "G(add_belief(perc_rad582(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield582", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield582").
+!inspect_nuclear_plant582 : true <- !inspect_nuclear_plant5821. 
+!inspect_nuclear_plant5821 : true & .intend(inspect_nuclear_plant582, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield582_id971_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield582", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield582", "G(add_belief(perc_rad582(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield582", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield582").
-!inspect_nuclear_plant582 : .intend(inspect_nuclear_plant582, I) & violated(I, "shield582", Cmds) & (count(I, "shield582", Count) | (not(count(I, "shield582", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant582.
-!inspect_nuclear_plant582 : .intend(inspect_nuclear_plant582, I) & (count(I, "shield582", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield582"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant583 : true <- !inspect_nuclear_plant5831. 
+!inspect_nuclear_plant5831 : fast & .intend(inspect_nuclear_plant583, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield583_id972_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield583", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield583", "G(add_belief(perc_rad583(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield583", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield583").
+!inspect_nuclear_plant583 : true <- !inspect_nuclear_plant5831. 
+!inspect_nuclear_plant5831 : true & .intend(inspect_nuclear_plant583, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield583_id973_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield583", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield583", "G(add_belief(perc_rad583(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield583", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield583").
-!inspect_nuclear_plant583 : .intend(inspect_nuclear_plant583, I) & violated(I, "shield583", Cmds) & (count(I, "shield583", Count) | (not(count(I, "shield583", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant583.
-!inspect_nuclear_plant583 : .intend(inspect_nuclear_plant583, I) & (count(I, "shield583", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield583"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant584 : true <- !inspect_nuclear_plant5841. 
+!inspect_nuclear_plant5841 : fast & .intend(inspect_nuclear_plant584, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield584_id974_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield584", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield584", "G(add_belief(perc_rad584(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield584", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield584").
+!inspect_nuclear_plant584 : true <- !inspect_nuclear_plant5841. 
+!inspect_nuclear_plant5841 : true & .intend(inspect_nuclear_plant584, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield584_id975_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield584", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield584", "G(add_belief(perc_rad584(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield584", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield584").
-!inspect_nuclear_plant584 : .intend(inspect_nuclear_plant584, I) & violated(I, "shield584", Cmds) & (count(I, "shield584", Count) | (not(count(I, "shield584", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant584.
-!inspect_nuclear_plant584 : .intend(inspect_nuclear_plant584, I) & (count(I, "shield584", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield584"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant585 : true <- !inspect_nuclear_plant5851. 
+!inspect_nuclear_plant5851 : fast & .intend(inspect_nuclear_plant585, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield585_id976_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield585", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield585", "G(add_belief(perc_rad585(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield585", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield585").
+!inspect_nuclear_plant585 : true <- !inspect_nuclear_plant5851. 
+!inspect_nuclear_plant5851 : true & .intend(inspect_nuclear_plant585, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield585_id977_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield585", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield585", "G(add_belief(perc_rad585(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield585", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield585").
-!inspect_nuclear_plant585 : .intend(inspect_nuclear_plant585, I) & violated(I, "shield585", Cmds) & (count(I, "shield585", Count) | (not(count(I, "shield585", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant585.
-!inspect_nuclear_plant585 : .intend(inspect_nuclear_plant585, I) & (count(I, "shield585", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield585"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant586 : true <- !inspect_nuclear_plant5861. 
+!inspect_nuclear_plant5861 : fast & .intend(inspect_nuclear_plant586, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield586_id978_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield586", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield586", "G(add_belief(perc_rad586(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield586", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield586").
+!inspect_nuclear_plant586 : true <- !inspect_nuclear_plant5861. 
+!inspect_nuclear_plant5861 : true & .intend(inspect_nuclear_plant586, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield586_id979_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield586", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield586", "G(add_belief(perc_rad586(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield586", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield586").
-!inspect_nuclear_plant586 : .intend(inspect_nuclear_plant586, I) & violated(I, "shield586", Cmds) & (count(I, "shield586", Count) | (not(count(I, "shield586", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant586.
-!inspect_nuclear_plant586 : .intend(inspect_nuclear_plant586, I) & (count(I, "shield586", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield586"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant587 : true <- !inspect_nuclear_plant5871. 
+!inspect_nuclear_plant5871 : fast & .intend(inspect_nuclear_plant587, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield587_id980_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield587", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield587", "G(add_belief(perc_rad587(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield587", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield587").
+!inspect_nuclear_plant587 : true <- !inspect_nuclear_plant5871. 
+!inspect_nuclear_plant5871 : true & .intend(inspect_nuclear_plant587, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield587_id981_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield587", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield587", "G(add_belief(perc_rad587(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield587", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield587").
-!inspect_nuclear_plant587 : .intend(inspect_nuclear_plant587, I) & violated(I, "shield587", Cmds) & (count(I, "shield587", Count) | (not(count(I, "shield587", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant587.
-!inspect_nuclear_plant587 : .intend(inspect_nuclear_plant587, I) & (count(I, "shield587", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield587"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant588 : true <- !inspect_nuclear_plant5881. 
+!inspect_nuclear_plant5881 : fast & .intend(inspect_nuclear_plant588, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield588_id982_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield588", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield588", "G(add_belief(perc_rad588(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield588", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield588").
+!inspect_nuclear_plant588 : true <- !inspect_nuclear_plant5881. 
+!inspect_nuclear_plant5881 : true & .intend(inspect_nuclear_plant588, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield588_id983_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield588", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield588", "G(add_belief(perc_rad588(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield588", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield588").
-!inspect_nuclear_plant588 : .intend(inspect_nuclear_plant588, I) & violated(I, "shield588", Cmds) & (count(I, "shield588", Count) | (not(count(I, "shield588", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant588.
-!inspect_nuclear_plant588 : .intend(inspect_nuclear_plant588, I) & (count(I, "shield588", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield588"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant589 : true <- !inspect_nuclear_plant5891. 
+!inspect_nuclear_plant5891 : fast & .intend(inspect_nuclear_plant589, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield589_id984_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield589", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield589", "G(add_belief(perc_rad589(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield589", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield589").
+!inspect_nuclear_plant589 : true <- !inspect_nuclear_plant5891. 
+!inspect_nuclear_plant5891 : true & .intend(inspect_nuclear_plant589, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield589_id985_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield589", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield589", "G(add_belief(perc_rad589(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield589", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield589").
-!inspect_nuclear_plant589 : .intend(inspect_nuclear_plant589, I) & violated(I, "shield589", Cmds) & (count(I, "shield589", Count) | (not(count(I, "shield589", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant589.
-!inspect_nuclear_plant589 : .intend(inspect_nuclear_plant589, I) & (count(I, "shield589", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield589"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant590 : true <- !inspect_nuclear_plant5901. 
+!inspect_nuclear_plant5901 : fast & .intend(inspect_nuclear_plant590, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield590_id986_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield590", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield590", "G(add_belief(perc_rad590(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield590", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield590").
+!inspect_nuclear_plant590 : true <- !inspect_nuclear_plant5901. 
+!inspect_nuclear_plant5901 : true & .intend(inspect_nuclear_plant590, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield590_id987_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield590", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield590", "G(add_belief(perc_rad590(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield590", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield590").
-!inspect_nuclear_plant590 : .intend(inspect_nuclear_plant590, I) & violated(I, "shield590", Cmds) & (count(I, "shield590", Count) | (not(count(I, "shield590", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant590.
-!inspect_nuclear_plant590 : .intend(inspect_nuclear_plant590, I) & (count(I, "shield590", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield590"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant591 : true <- !inspect_nuclear_plant5911. 
+!inspect_nuclear_plant5911 : fast & .intend(inspect_nuclear_plant591, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield591_id988_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield591", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield591", "G(add_belief(perc_rad591(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield591", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield591").
+!inspect_nuclear_plant591 : true <- !inspect_nuclear_plant5911. 
+!inspect_nuclear_plant5911 : true & .intend(inspect_nuclear_plant591, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield591_id989_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield591", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield591", "G(add_belief(perc_rad591(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield591", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield591").
-!inspect_nuclear_plant591 : .intend(inspect_nuclear_plant591, I) & violated(I, "shield591", Cmds) & (count(I, "shield591", Count) | (not(count(I, "shield591", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant591.
-!inspect_nuclear_plant591 : .intend(inspect_nuclear_plant591, I) & (count(I, "shield591", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield591"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant592 : true <- !inspect_nuclear_plant5921. 
+!inspect_nuclear_plant5921 : fast & .intend(inspect_nuclear_plant592, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield592_id990_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield592", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield592", "G(add_belief(perc_rad592(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield592", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield592").
+!inspect_nuclear_plant592 : true <- !inspect_nuclear_plant5921. 
+!inspect_nuclear_plant5921 : true & .intend(inspect_nuclear_plant592, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield592_id991_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield592", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield592", "G(add_belief(perc_rad592(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield592", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield592").
-!inspect_nuclear_plant592 : .intend(inspect_nuclear_plant592, I) & violated(I, "shield592", Cmds) & (count(I, "shield592", Count) | (not(count(I, "shield592", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant592.
-!inspect_nuclear_plant592 : .intend(inspect_nuclear_plant592, I) & (count(I, "shield592", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield592"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant593 : true <- !inspect_nuclear_plant5931. 
+!inspect_nuclear_plant5931 : fast & .intend(inspect_nuclear_plant593, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield593_id992_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield593", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield593", "G(add_belief(perc_rad593(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield593", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield593").
+!inspect_nuclear_plant593 : true <- !inspect_nuclear_plant5931. 
+!inspect_nuclear_plant5931 : true & .intend(inspect_nuclear_plant593, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield593_id993_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield593", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield593", "G(add_belief(perc_rad593(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield593", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield593").
-!inspect_nuclear_plant593 : .intend(inspect_nuclear_plant593, I) & violated(I, "shield593", Cmds) & (count(I, "shield593", Count) | (not(count(I, "shield593", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant593.
-!inspect_nuclear_plant593 : .intend(inspect_nuclear_plant593, I) & (count(I, "shield593", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield593"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant594 : true <- !inspect_nuclear_plant5941. 
+!inspect_nuclear_plant5941 : fast & .intend(inspect_nuclear_plant594, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield594_id994_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield594", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield594", "G(add_belief(perc_rad594(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield594", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield594").
+!inspect_nuclear_plant594 : true <- !inspect_nuclear_plant5941. 
+!inspect_nuclear_plant5941 : true & .intend(inspect_nuclear_plant594, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield594_id995_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield594", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield594", "G(add_belief(perc_rad594(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield594", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield594").
-!inspect_nuclear_plant594 : .intend(inspect_nuclear_plant594, I) & violated(I, "shield594", Cmds) & (count(I, "shield594", Count) | (not(count(I, "shield594", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant594.
-!inspect_nuclear_plant594 : .intend(inspect_nuclear_plant594, I) & (count(I, "shield594", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield594"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant595 : true <- !inspect_nuclear_plant5951. 
+!inspect_nuclear_plant5951 : fast & .intend(inspect_nuclear_plant595, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield595_id996_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield595", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield595", "G(add_belief(perc_rad595(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield595", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield595").
+!inspect_nuclear_plant595 : true <- !inspect_nuclear_plant5951. 
+!inspect_nuclear_plant5951 : true & .intend(inspect_nuclear_plant595, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield595_id997_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield595", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield595", "G(add_belief(perc_rad595(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield595", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield595").
-!inspect_nuclear_plant595 : .intend(inspect_nuclear_plant595, I) & violated(I, "shield595", Cmds) & (count(I, "shield595", Count) | (not(count(I, "shield595", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant595.
-!inspect_nuclear_plant595 : .intend(inspect_nuclear_plant595, I) & (count(I, "shield595", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield595"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant596 : true <- !inspect_nuclear_plant5961. 
+!inspect_nuclear_plant5961 : fast & .intend(inspect_nuclear_plant596, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield596_id998_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield596", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield596", "G(add_belief(perc_rad596(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield596", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield596").
+!inspect_nuclear_plant596 : true <- !inspect_nuclear_plant5961. 
+!inspect_nuclear_plant5961 : true & .intend(inspect_nuclear_plant596, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield596_id999_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield596", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield596", "G(add_belief(perc_rad596(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield596", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield596").
-!inspect_nuclear_plant596 : .intend(inspect_nuclear_plant596, I) & violated(I, "shield596", Cmds) & (count(I, "shield596", Count) | (not(count(I, "shield596", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant596.
-!inspect_nuclear_plant596 : .intend(inspect_nuclear_plant596, I) & (count(I, "shield596", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield596"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant597 : true <- !inspect_nuclear_plant5971. 
+!inspect_nuclear_plant5971 : fast & .intend(inspect_nuclear_plant597, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield597_id1000_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield597", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield597", "G(add_belief(perc_rad597(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield597", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield597").
+!inspect_nuclear_plant597 : true <- !inspect_nuclear_plant5971. 
+!inspect_nuclear_plant5971 : true & .intend(inspect_nuclear_plant597, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield597_id1001_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield597", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield597", "G(add_belief(perc_rad597(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield597", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield597").
-!inspect_nuclear_plant597 : .intend(inspect_nuclear_plant597, I) & violated(I, "shield597", Cmds) & (count(I, "shield597", Count) | (not(count(I, "shield597", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant597.
-!inspect_nuclear_plant597 : .intend(inspect_nuclear_plant597, I) & (count(I, "shield597", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield597"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant598 : true <- !inspect_nuclear_plant5981. 
+!inspect_nuclear_plant5981 : fast & .intend(inspect_nuclear_plant598, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield598_id1002_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield598", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield598", "G(add_belief(perc_rad598(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield598", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield598").
+!inspect_nuclear_plant598 : true <- !inspect_nuclear_plant5981. 
+!inspect_nuclear_plant5981 : true & .intend(inspect_nuclear_plant598, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield598_id1003_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield598", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield598", "G(add_belief(perc_rad598(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield598", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield598").
-!inspect_nuclear_plant598 : .intend(inspect_nuclear_plant598, I) & violated(I, "shield598", Cmds) & (count(I, "shield598", Count) | (not(count(I, "shield598", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant598.
-!inspect_nuclear_plant598 : .intend(inspect_nuclear_plant598, I) & (count(I, "shield598", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield598"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant599 : true <- !inspect_nuclear_plant5991. 
+!inspect_nuclear_plant5991 : fast & .intend(inspect_nuclear_plant599, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield599_id1004_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield599", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield599", "G(add_belief(perc_rad599(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield599", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield599").
+!inspect_nuclear_plant599 : true <- !inspect_nuclear_plant5991. 
+!inspect_nuclear_plant5991 : true & .intend(inspect_nuclear_plant599, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield599_id1005_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield599", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield599", "G(add_belief(perc_rad599(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield599", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield599").
-!inspect_nuclear_plant599 : .intend(inspect_nuclear_plant599, I) & violated(I, "shield599", Cmds) & (count(I, "shield599", Count) | (not(count(I, "shield599", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant599.
-!inspect_nuclear_plant599 : .intend(inspect_nuclear_plant599, I) & (count(I, "shield599", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield599"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant600 : true <- !inspect_nuclear_plant6001. 
+!inspect_nuclear_plant6001 : fast & .intend(inspect_nuclear_plant600, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield600_id1006_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield600", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield600", "G(add_belief(perc_rad600(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield600", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield600").
+!inspect_nuclear_plant600 : true <- !inspect_nuclear_plant6001. 
+!inspect_nuclear_plant6001 : true & .intend(inspect_nuclear_plant600, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield600_id1007_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield600", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield600", "G(add_belief(perc_rad600(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield600", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield600").
-!inspect_nuclear_plant600 : .intend(inspect_nuclear_plant600, I) & violated(I, "shield600", Cmds) & (count(I, "shield600", Count) | (not(count(I, "shield600", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant600.
-!inspect_nuclear_plant600 : .intend(inspect_nuclear_plant600, I) & (count(I, "shield600", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield600"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant601 : true <- !inspect_nuclear_plant6011. 
+!inspect_nuclear_plant6011 : fast & .intend(inspect_nuclear_plant601, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield601_id1008_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield601", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield601", "G(add_belief(perc_rad601(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield601", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield601").
+!inspect_nuclear_plant601 : true <- !inspect_nuclear_plant6011. 
+!inspect_nuclear_plant6011 : true & .intend(inspect_nuclear_plant601, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield601_id1009_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield601", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield601", "G(add_belief(perc_rad601(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield601", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield601").
-!inspect_nuclear_plant601 : .intend(inspect_nuclear_plant601, I) & violated(I, "shield601", Cmds) & (count(I, "shield601", Count) | (not(count(I, "shield601", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant601.
-!inspect_nuclear_plant601 : .intend(inspect_nuclear_plant601, I) & (count(I, "shield601", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield601"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant602 : true <- !inspect_nuclear_plant6021. 
+!inspect_nuclear_plant6021 : fast & .intend(inspect_nuclear_plant602, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield602_id1010_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield602", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield602", "G(add_belief(perc_rad602(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield602", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield602").
+!inspect_nuclear_plant602 : true <- !inspect_nuclear_plant6021. 
+!inspect_nuclear_plant6021 : true & .intend(inspect_nuclear_plant602, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield602_id1011_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield602", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield602", "G(add_belief(perc_rad602(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield602", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield602").
-!inspect_nuclear_plant602 : .intend(inspect_nuclear_plant602, I) & violated(I, "shield602", Cmds) & (count(I, "shield602", Count) | (not(count(I, "shield602", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant602.
-!inspect_nuclear_plant602 : .intend(inspect_nuclear_plant602, I) & (count(I, "shield602", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield602"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant603 : true <- !inspect_nuclear_plant6031. 
+!inspect_nuclear_plant6031 : fast & .intend(inspect_nuclear_plant603, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield603_id1012_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield603", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield603", "G(add_belief(perc_rad603(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield603", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield603").
+!inspect_nuclear_plant603 : true <- !inspect_nuclear_plant6031. 
+!inspect_nuclear_plant6031 : true & .intend(inspect_nuclear_plant603, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield603_id1013_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield603", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield603", "G(add_belief(perc_rad603(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield603", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield603").
-!inspect_nuclear_plant603 : .intend(inspect_nuclear_plant603, I) & violated(I, "shield603", Cmds) & (count(I, "shield603", Count) | (not(count(I, "shield603", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant603.
-!inspect_nuclear_plant603 : .intend(inspect_nuclear_plant603, I) & (count(I, "shield603", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield603"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant604 : true <- !inspect_nuclear_plant6041. 
+!inspect_nuclear_plant6041 : fast & .intend(inspect_nuclear_plant604, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield604_id1014_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield604", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield604", "G(add_belief(perc_rad604(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield604", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield604").
+!inspect_nuclear_plant604 : true <- !inspect_nuclear_plant6041. 
+!inspect_nuclear_plant6041 : true & .intend(inspect_nuclear_plant604, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield604_id1015_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield604", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield604", "G(add_belief(perc_rad604(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield604", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield604").
-!inspect_nuclear_plant604 : .intend(inspect_nuclear_plant604, I) & violated(I, "shield604", Cmds) & (count(I, "shield604", Count) | (not(count(I, "shield604", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant604.
-!inspect_nuclear_plant604 : .intend(inspect_nuclear_plant604, I) & (count(I, "shield604", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield604"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant605 : true <- !inspect_nuclear_plant6051. 
+!inspect_nuclear_plant6051 : fast & .intend(inspect_nuclear_plant605, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield605_id1016_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield605", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield605", "G(add_belief(perc_rad605(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield605", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield605").
+!inspect_nuclear_plant605 : true <- !inspect_nuclear_plant6051. 
+!inspect_nuclear_plant6051 : true & .intend(inspect_nuclear_plant605, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield605_id1017_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield605", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield605", "G(add_belief(perc_rad605(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield605", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield605").
-!inspect_nuclear_plant605 : .intend(inspect_nuclear_plant605, I) & violated(I, "shield605", Cmds) & (count(I, "shield605", Count) | (not(count(I, "shield605", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant605.
-!inspect_nuclear_plant605 : .intend(inspect_nuclear_plant605, I) & (count(I, "shield605", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield605"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant606 : true <- !inspect_nuclear_plant6061. 
+!inspect_nuclear_plant6061 : fast & .intend(inspect_nuclear_plant606, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield606_id1018_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield606", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield606", "G(add_belief(perc_rad606(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield606", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield606").
+!inspect_nuclear_plant606 : true <- !inspect_nuclear_plant6061. 
+!inspect_nuclear_plant6061 : true & .intend(inspect_nuclear_plant606, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield606_id1019_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield606", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield606", "G(add_belief(perc_rad606(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield606", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield606").
-!inspect_nuclear_plant606 : .intend(inspect_nuclear_plant606, I) & violated(I, "shield606", Cmds) & (count(I, "shield606", Count) | (not(count(I, "shield606", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant606.
-!inspect_nuclear_plant606 : .intend(inspect_nuclear_plant606, I) & (count(I, "shield606", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield606"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant607 : true <- !inspect_nuclear_plant6071. 
+!inspect_nuclear_plant6071 : fast & .intend(inspect_nuclear_plant607, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield607_id1020_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield607", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield607", "G(add_belief(perc_rad607(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield607", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield607").
+!inspect_nuclear_plant607 : true <- !inspect_nuclear_plant6071. 
+!inspect_nuclear_plant6071 : true & .intend(inspect_nuclear_plant607, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield607_id1021_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield607", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield607", "G(add_belief(perc_rad607(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield607", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield607").
-!inspect_nuclear_plant607 : .intend(inspect_nuclear_plant607, I) & violated(I, "shield607", Cmds) & (count(I, "shield607", Count) | (not(count(I, "shield607", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant607.
-!inspect_nuclear_plant607 : .intend(inspect_nuclear_plant607, I) & (count(I, "shield607", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield607"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant608 : true <- !inspect_nuclear_plant6081. 
+!inspect_nuclear_plant6081 : fast & .intend(inspect_nuclear_plant608, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield608_id1022_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield608", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield608", "G(add_belief(perc_rad608(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield608", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield608").
+!inspect_nuclear_plant608 : true <- !inspect_nuclear_plant6081. 
+!inspect_nuclear_plant6081 : true & .intend(inspect_nuclear_plant608, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield608_id1023_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield608", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield608", "G(add_belief(perc_rad608(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield608", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield608").
-!inspect_nuclear_plant608 : .intend(inspect_nuclear_plant608, I) & violated(I, "shield608", Cmds) & (count(I, "shield608", Count) | (not(count(I, "shield608", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant608.
-!inspect_nuclear_plant608 : .intend(inspect_nuclear_plant608, I) & (count(I, "shield608", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield608"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant609 : true <- !inspect_nuclear_plant6091. 
+!inspect_nuclear_plant6091 : fast & .intend(inspect_nuclear_plant609, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield609_id1024_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield609", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield609", "G(add_belief(perc_rad609(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield609", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield609").
+!inspect_nuclear_plant609 : true <- !inspect_nuclear_plant6091. 
+!inspect_nuclear_plant6091 : true & .intend(inspect_nuclear_plant609, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield609_id1025_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield609", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield609", "G(add_belief(perc_rad609(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield609", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield609").
-!inspect_nuclear_plant609 : .intend(inspect_nuclear_plant609, I) & violated(I, "shield609", Cmds) & (count(I, "shield609", Count) | (not(count(I, "shield609", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant609.
-!inspect_nuclear_plant609 : .intend(inspect_nuclear_plant609, I) & (count(I, "shield609", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield609"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant610 : true <- !inspect_nuclear_plant6101. 
+!inspect_nuclear_plant6101 : fast & .intend(inspect_nuclear_plant610, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield610_id1026_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield610", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield610", "G(add_belief(perc_rad610(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield610", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield610").
+!inspect_nuclear_plant610 : true <- !inspect_nuclear_plant6101. 
+!inspect_nuclear_plant6101 : true & .intend(inspect_nuclear_plant610, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield610_id1027_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield610", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield610", "G(add_belief(perc_rad610(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield610", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield610").
-!inspect_nuclear_plant610 : .intend(inspect_nuclear_plant610, I) & violated(I, "shield610", Cmds) & (count(I, "shield610", Count) | (not(count(I, "shield610", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant610.
-!inspect_nuclear_plant610 : .intend(inspect_nuclear_plant610, I) & (count(I, "shield610", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield610"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant611 : true <- !inspect_nuclear_plant6111. 
+!inspect_nuclear_plant6111 : fast & .intend(inspect_nuclear_plant611, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield611_id1028_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield611", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield611", "G(add_belief(perc_rad611(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield611", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield611").
+!inspect_nuclear_plant611 : true <- !inspect_nuclear_plant6111. 
+!inspect_nuclear_plant6111 : true & .intend(inspect_nuclear_plant611, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield611_id1029_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield611", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield611", "G(add_belief(perc_rad611(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield611", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield611").
-!inspect_nuclear_plant611 : .intend(inspect_nuclear_plant611, I) & violated(I, "shield611", Cmds) & (count(I, "shield611", Count) | (not(count(I, "shield611", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant611.
-!inspect_nuclear_plant611 : .intend(inspect_nuclear_plant611, I) & (count(I, "shield611", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield611"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant612 : true <- !inspect_nuclear_plant6121. 
+!inspect_nuclear_plant6121 : fast & .intend(inspect_nuclear_plant612, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield612_id1030_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield612", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield612", "G(add_belief(perc_rad612(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield612", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield612").
+!inspect_nuclear_plant612 : true <- !inspect_nuclear_plant6121. 
+!inspect_nuclear_plant6121 : true & .intend(inspect_nuclear_plant612, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield612_id1031_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield612", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield612", "G(add_belief(perc_rad612(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield612", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield612").
-!inspect_nuclear_plant612 : .intend(inspect_nuclear_plant612, I) & violated(I, "shield612", Cmds) & (count(I, "shield612", Count) | (not(count(I, "shield612", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant612.
-!inspect_nuclear_plant612 : .intend(inspect_nuclear_plant612, I) & (count(I, "shield612", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield612"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant613 : true <- !inspect_nuclear_plant6131. 
+!inspect_nuclear_plant6131 : fast & .intend(inspect_nuclear_plant613, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield613_id1032_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield613", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield613", "G(add_belief(perc_rad613(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield613", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield613").
+!inspect_nuclear_plant613 : true <- !inspect_nuclear_plant6131. 
+!inspect_nuclear_plant6131 : true & .intend(inspect_nuclear_plant613, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield613_id1033_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield613", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield613", "G(add_belief(perc_rad613(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield613", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield613").
-!inspect_nuclear_plant613 : .intend(inspect_nuclear_plant613, I) & violated(I, "shield613", Cmds) & (count(I, "shield613", Count) | (not(count(I, "shield613", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant613.
-!inspect_nuclear_plant613 : .intend(inspect_nuclear_plant613, I) & (count(I, "shield613", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield613"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant614 : true <- !inspect_nuclear_plant6141. 
+!inspect_nuclear_plant6141 : fast & .intend(inspect_nuclear_plant614, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield614_id1034_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield614", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield614", "G(add_belief(perc_rad614(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield614", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield614").
+!inspect_nuclear_plant614 : true <- !inspect_nuclear_plant6141. 
+!inspect_nuclear_plant6141 : true & .intend(inspect_nuclear_plant614, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield614_id1035_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield614", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield614", "G(add_belief(perc_rad614(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield614", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield614").
-!inspect_nuclear_plant614 : .intend(inspect_nuclear_plant614, I) & violated(I, "shield614", Cmds) & (count(I, "shield614", Count) | (not(count(I, "shield614", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant614.
-!inspect_nuclear_plant614 : .intend(inspect_nuclear_plant614, I) & (count(I, "shield614", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield614"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant615 : true <- !inspect_nuclear_plant6151. 
+!inspect_nuclear_plant6151 : fast & .intend(inspect_nuclear_plant615, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield615_id1036_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield615", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield615", "G(add_belief(perc_rad615(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield615", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield615").
+!inspect_nuclear_plant615 : true <- !inspect_nuclear_plant6151. 
+!inspect_nuclear_plant6151 : true & .intend(inspect_nuclear_plant615, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield615_id1037_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield615", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield615", "G(add_belief(perc_rad615(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield615", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield615").
-!inspect_nuclear_plant615 : .intend(inspect_nuclear_plant615, I) & violated(I, "shield615", Cmds) & (count(I, "shield615", Count) | (not(count(I, "shield615", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant615.
-!inspect_nuclear_plant615 : .intend(inspect_nuclear_plant615, I) & (count(I, "shield615", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield615"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant616 : true <- !inspect_nuclear_plant6161. 
+!inspect_nuclear_plant6161 : fast & .intend(inspect_nuclear_plant616, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield616_id1038_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield616", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield616", "G(add_belief(perc_rad616(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield616", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield616").
+!inspect_nuclear_plant616 : true <- !inspect_nuclear_plant6161. 
+!inspect_nuclear_plant6161 : true & .intend(inspect_nuclear_plant616, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield616_id1039_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield616", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield616", "G(add_belief(perc_rad616(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield616", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield616").
-!inspect_nuclear_plant616 : .intend(inspect_nuclear_plant616, I) & violated(I, "shield616", Cmds) & (count(I, "shield616", Count) | (not(count(I, "shield616", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant616.
-!inspect_nuclear_plant616 : .intend(inspect_nuclear_plant616, I) & (count(I, "shield616", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield616"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant617 : true <- !inspect_nuclear_plant6171. 
+!inspect_nuclear_plant6171 : fast & .intend(inspect_nuclear_plant617, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield617_id1040_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield617", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield617", "G(add_belief(perc_rad617(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield617", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield617").
+!inspect_nuclear_plant617 : true <- !inspect_nuclear_plant6171. 
+!inspect_nuclear_plant6171 : true & .intend(inspect_nuclear_plant617, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield617_id1041_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield617", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield617", "G(add_belief(perc_rad617(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield617", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield617").
-!inspect_nuclear_plant617 : .intend(inspect_nuclear_plant617, I) & violated(I, "shield617", Cmds) & (count(I, "shield617", Count) | (not(count(I, "shield617", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant617.
-!inspect_nuclear_plant617 : .intend(inspect_nuclear_plant617, I) & (count(I, "shield617", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield617"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant618 : true <- !inspect_nuclear_plant6181. 
+!inspect_nuclear_plant6181 : fast & .intend(inspect_nuclear_plant618, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield618_id1042_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield618", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield618", "G(add_belief(perc_rad618(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield618", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield618").
+!inspect_nuclear_plant618 : true <- !inspect_nuclear_plant6181. 
+!inspect_nuclear_plant6181 : true & .intend(inspect_nuclear_plant618, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield618_id1043_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield618", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield618", "G(add_belief(perc_rad618(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield618", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield618").
-!inspect_nuclear_plant618 : .intend(inspect_nuclear_plant618, I) & violated(I, "shield618", Cmds) & (count(I, "shield618", Count) | (not(count(I, "shield618", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant618.
-!inspect_nuclear_plant618 : .intend(inspect_nuclear_plant618, I) & (count(I, "shield618", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield618"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant619 : true <- !inspect_nuclear_plant6191. 
+!inspect_nuclear_plant6191 : fast & .intend(inspect_nuclear_plant619, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield619_id1044_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield619", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield619", "G(add_belief(perc_rad619(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield619", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield619").
+!inspect_nuclear_plant619 : true <- !inspect_nuclear_plant6191. 
+!inspect_nuclear_plant6191 : true & .intend(inspect_nuclear_plant619, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield619_id1045_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield619", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield619", "G(add_belief(perc_rad619(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield619", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield619").
-!inspect_nuclear_plant619 : .intend(inspect_nuclear_plant619, I) & violated(I, "shield619", Cmds) & (count(I, "shield619", Count) | (not(count(I, "shield619", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant619.
-!inspect_nuclear_plant619 : .intend(inspect_nuclear_plant619, I) & (count(I, "shield619", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield619"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant620 : true <- !inspect_nuclear_plant6201. 
+!inspect_nuclear_plant6201 : fast & .intend(inspect_nuclear_plant620, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield620_id1046_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield620", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield620", "G(add_belief(perc_rad620(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield620", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield620").
+!inspect_nuclear_plant620 : true <- !inspect_nuclear_plant6201. 
+!inspect_nuclear_plant6201 : true & .intend(inspect_nuclear_plant620, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield620_id1047_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield620", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield620", "G(add_belief(perc_rad620(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield620", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield620").
-!inspect_nuclear_plant620 : .intend(inspect_nuclear_plant620, I) & violated(I, "shield620", Cmds) & (count(I, "shield620", Count) | (not(count(I, "shield620", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant620.
-!inspect_nuclear_plant620 : .intend(inspect_nuclear_plant620, I) & (count(I, "shield620", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield620"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant621 : true <- !inspect_nuclear_plant6211. 
+!inspect_nuclear_plant6211 : fast & .intend(inspect_nuclear_plant621, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield621_id1048_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield621", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield621", "G(add_belief(perc_rad621(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield621", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield621").
+!inspect_nuclear_plant621 : true <- !inspect_nuclear_plant6211. 
+!inspect_nuclear_plant6211 : true & .intend(inspect_nuclear_plant621, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield621_id1049_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield621", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield621", "G(add_belief(perc_rad621(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield621", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield621").
-!inspect_nuclear_plant621 : .intend(inspect_nuclear_plant621, I) & violated(I, "shield621", Cmds) & (count(I, "shield621", Count) | (not(count(I, "shield621", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant621.
-!inspect_nuclear_plant621 : .intend(inspect_nuclear_plant621, I) & (count(I, "shield621", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield621"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant622 : true <- !inspect_nuclear_plant6221. 
+!inspect_nuclear_plant6221 : fast & .intend(inspect_nuclear_plant622, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield622_id1050_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield622", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield622", "G(add_belief(perc_rad622(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield622", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield622").
+!inspect_nuclear_plant622 : true <- !inspect_nuclear_plant6221. 
+!inspect_nuclear_plant6221 : true & .intend(inspect_nuclear_plant622, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield622_id1051_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield622", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield622", "G(add_belief(perc_rad622(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield622", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield622").
-!inspect_nuclear_plant622 : .intend(inspect_nuclear_plant622, I) & violated(I, "shield622", Cmds) & (count(I, "shield622", Count) | (not(count(I, "shield622", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant622.
-!inspect_nuclear_plant622 : .intend(inspect_nuclear_plant622, I) & (count(I, "shield622", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield622"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant623 : true <- !inspect_nuclear_plant6231. 
+!inspect_nuclear_plant6231 : fast & .intend(inspect_nuclear_plant623, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield623_id1052_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield623", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield623", "G(add_belief(perc_rad623(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield623", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield623").
+!inspect_nuclear_plant623 : true <- !inspect_nuclear_plant6231. 
+!inspect_nuclear_plant6231 : true & .intend(inspect_nuclear_plant623, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield623_id1053_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield623", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield623", "G(add_belief(perc_rad623(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield623", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield623").
-!inspect_nuclear_plant623 : .intend(inspect_nuclear_plant623, I) & violated(I, "shield623", Cmds) & (count(I, "shield623", Count) | (not(count(I, "shield623", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant623.
-!inspect_nuclear_plant623 : .intend(inspect_nuclear_plant623, I) & (count(I, "shield623", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield623"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant624 : true <- !inspect_nuclear_plant6241. 
+!inspect_nuclear_plant6241 : fast & .intend(inspect_nuclear_plant624, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield624_id1054_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield624", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield624", "G(add_belief(perc_rad624(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield624", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield624").
+!inspect_nuclear_plant624 : true <- !inspect_nuclear_plant6241. 
+!inspect_nuclear_plant6241 : true & .intend(inspect_nuclear_plant624, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield624_id1055_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield624", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield624", "G(add_belief(perc_rad624(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield624", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield624").
-!inspect_nuclear_plant624 : .intend(inspect_nuclear_plant624, I) & violated(I, "shield624", Cmds) & (count(I, "shield624", Count) | (not(count(I, "shield624", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant624.
-!inspect_nuclear_plant624 : .intend(inspect_nuclear_plant624, I) & (count(I, "shield624", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield624"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant625 : true <- !inspect_nuclear_plant6251. 
+!inspect_nuclear_plant6251 : fast & .intend(inspect_nuclear_plant625, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield625_id1056_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield625", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield625", "G(add_belief(perc_rad625(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield625", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield625").
+!inspect_nuclear_plant625 : true <- !inspect_nuclear_plant6251. 
+!inspect_nuclear_plant6251 : true & .intend(inspect_nuclear_plant625, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield625_id1057_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield625", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield625", "G(add_belief(perc_rad625(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield625", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield625").
-!inspect_nuclear_plant625 : .intend(inspect_nuclear_plant625, I) & violated(I, "shield625", Cmds) & (count(I, "shield625", Count) | (not(count(I, "shield625", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant625.
-!inspect_nuclear_plant625 : .intend(inspect_nuclear_plant625, I) & (count(I, "shield625", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield625"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant626 : true <- !inspect_nuclear_plant6261. 
+!inspect_nuclear_plant6261 : fast & .intend(inspect_nuclear_plant626, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield626_id1058_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield626", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield626", "G(add_belief(perc_rad626(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield626", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield626").
+!inspect_nuclear_plant626 : true <- !inspect_nuclear_plant6261. 
+!inspect_nuclear_plant6261 : true & .intend(inspect_nuclear_plant626, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield626_id1059_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield626", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield626", "G(add_belief(perc_rad626(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield626", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield626").
-!inspect_nuclear_plant626 : .intend(inspect_nuclear_plant626, I) & violated(I, "shield626", Cmds) & (count(I, "shield626", Count) | (not(count(I, "shield626", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant626.
-!inspect_nuclear_plant626 : .intend(inspect_nuclear_plant626, I) & (count(I, "shield626", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield626"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant627 : true <- !inspect_nuclear_plant6271. 
+!inspect_nuclear_plant6271 : fast & .intend(inspect_nuclear_plant627, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield627_id1060_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield627", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield627", "G(add_belief(perc_rad627(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield627", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield627").
+!inspect_nuclear_plant627 : true <- !inspect_nuclear_plant6271. 
+!inspect_nuclear_plant6271 : true & .intend(inspect_nuclear_plant627, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield627_id1061_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield627", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield627", "G(add_belief(perc_rad627(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield627", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield627").
-!inspect_nuclear_plant627 : .intend(inspect_nuclear_plant627, I) & violated(I, "shield627", Cmds) & (count(I, "shield627", Count) | (not(count(I, "shield627", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant627.
-!inspect_nuclear_plant627 : .intend(inspect_nuclear_plant627, I) & (count(I, "shield627", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield627"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant628 : true <- !inspect_nuclear_plant6281. 
+!inspect_nuclear_plant6281 : fast & .intend(inspect_nuclear_plant628, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield628_id1062_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield628", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield628", "G(add_belief(perc_rad628(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield628", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield628").
+!inspect_nuclear_plant628 : true <- !inspect_nuclear_plant6281. 
+!inspect_nuclear_plant6281 : true & .intend(inspect_nuclear_plant628, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield628_id1063_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield628", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield628", "G(add_belief(perc_rad628(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield628", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield628").
-!inspect_nuclear_plant628 : .intend(inspect_nuclear_plant628, I) & violated(I, "shield628", Cmds) & (count(I, "shield628", Count) | (not(count(I, "shield628", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant628.
-!inspect_nuclear_plant628 : .intend(inspect_nuclear_plant628, I) & (count(I, "shield628", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield628"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant629 : true <- !inspect_nuclear_plant6291. 
+!inspect_nuclear_plant6291 : fast & .intend(inspect_nuclear_plant629, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield629_id1064_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield629", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield629", "G(add_belief(perc_rad629(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield629", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield629").
+!inspect_nuclear_plant629 : true <- !inspect_nuclear_plant6291. 
+!inspect_nuclear_plant6291 : true & .intend(inspect_nuclear_plant629, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield629_id1065_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield629", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield629", "G(add_belief(perc_rad629(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield629", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield629").
-!inspect_nuclear_plant629 : .intend(inspect_nuclear_plant629, I) & violated(I, "shield629", Cmds) & (count(I, "shield629", Count) | (not(count(I, "shield629", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant629.
-!inspect_nuclear_plant629 : .intend(inspect_nuclear_plant629, I) & (count(I, "shield629", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield629"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant630 : true <- !inspect_nuclear_plant6301. 
+!inspect_nuclear_plant6301 : fast & .intend(inspect_nuclear_plant630, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield630_id1066_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield630", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield630", "G(add_belief(perc_rad630(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield630", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield630").
+!inspect_nuclear_plant630 : true <- !inspect_nuclear_plant6301. 
+!inspect_nuclear_plant6301 : true & .intend(inspect_nuclear_plant630, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield630_id1067_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield630", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield630", "G(add_belief(perc_rad630(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield630", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield630").
-!inspect_nuclear_plant630 : .intend(inspect_nuclear_plant630, I) & violated(I, "shield630", Cmds) & (count(I, "shield630", Count) | (not(count(I, "shield630", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant630.
-!inspect_nuclear_plant630 : .intend(inspect_nuclear_plant630, I) & (count(I, "shield630", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield630"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant631 : true <- !inspect_nuclear_plant6311. 
+!inspect_nuclear_plant6311 : fast & .intend(inspect_nuclear_plant631, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield631_id1068_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield631", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield631", "G(add_belief(perc_rad631(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield631", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield631").
+!inspect_nuclear_plant631 : true <- !inspect_nuclear_plant6311. 
+!inspect_nuclear_plant6311 : true & .intend(inspect_nuclear_plant631, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield631_id1069_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield631", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield631", "G(add_belief(perc_rad631(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield631", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield631").
-!inspect_nuclear_plant631 : .intend(inspect_nuclear_plant631, I) & violated(I, "shield631", Cmds) & (count(I, "shield631", Count) | (not(count(I, "shield631", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant631.
-!inspect_nuclear_plant631 : .intend(inspect_nuclear_plant631, I) & (count(I, "shield631", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield631"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant632 : true <- !inspect_nuclear_plant6321. 
+!inspect_nuclear_plant6321 : fast & .intend(inspect_nuclear_plant632, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield632_id1070_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield632", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield632", "G(add_belief(perc_rad632(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield632", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield632").
+!inspect_nuclear_plant632 : true <- !inspect_nuclear_plant6321. 
+!inspect_nuclear_plant6321 : true & .intend(inspect_nuclear_plant632, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield632_id1071_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield632", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield632", "G(add_belief(perc_rad632(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield632", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield632").
-!inspect_nuclear_plant632 : .intend(inspect_nuclear_plant632, I) & violated(I, "shield632", Cmds) & (count(I, "shield632", Count) | (not(count(I, "shield632", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant632.
-!inspect_nuclear_plant632 : .intend(inspect_nuclear_plant632, I) & (count(I, "shield632", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield632"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant633 : true <- !inspect_nuclear_plant6331. 
+!inspect_nuclear_plant6331 : fast & .intend(inspect_nuclear_plant633, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield633_id1072_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield633", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield633", "G(add_belief(perc_rad633(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield633", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield633").
+!inspect_nuclear_plant633 : true <- !inspect_nuclear_plant6331. 
+!inspect_nuclear_plant6331 : true & .intend(inspect_nuclear_plant633, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield633_id1073_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield633", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield633", "G(add_belief(perc_rad633(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield633", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield633").
-!inspect_nuclear_plant633 : .intend(inspect_nuclear_plant633, I) & violated(I, "shield633", Cmds) & (count(I, "shield633", Count) | (not(count(I, "shield633", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant633.
-!inspect_nuclear_plant633 : .intend(inspect_nuclear_plant633, I) & (count(I, "shield633", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield633"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant634 : true <- !inspect_nuclear_plant6341. 
+!inspect_nuclear_plant6341 : fast & .intend(inspect_nuclear_plant634, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield634_id1074_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield634", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield634", "G(add_belief(perc_rad634(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield634", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield634").
+!inspect_nuclear_plant634 : true <- !inspect_nuclear_plant6341. 
+!inspect_nuclear_plant6341 : true & .intend(inspect_nuclear_plant634, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield634_id1075_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield634", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield634", "G(add_belief(perc_rad634(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield634", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield634").
-!inspect_nuclear_plant634 : .intend(inspect_nuclear_plant634, I) & violated(I, "shield634", Cmds) & (count(I, "shield634", Count) | (not(count(I, "shield634", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant634.
-!inspect_nuclear_plant634 : .intend(inspect_nuclear_plant634, I) & (count(I, "shield634", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield634"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant635 : true <- !inspect_nuclear_plant6351. 
+!inspect_nuclear_plant6351 : fast & .intend(inspect_nuclear_plant635, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield635_id1076_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield635", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield635", "G(add_belief(perc_rad635(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield635", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield635").
+!inspect_nuclear_plant635 : true <- !inspect_nuclear_plant6351. 
+!inspect_nuclear_plant6351 : true & .intend(inspect_nuclear_plant635, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield635_id1077_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield635", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield635", "G(add_belief(perc_rad635(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield635", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield635").
-!inspect_nuclear_plant635 : .intend(inspect_nuclear_plant635, I) & violated(I, "shield635", Cmds) & (count(I, "shield635", Count) | (not(count(I, "shield635", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant635.
-!inspect_nuclear_plant635 : .intend(inspect_nuclear_plant635, I) & (count(I, "shield635", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield635"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant636 : true <- !inspect_nuclear_plant6361. 
+!inspect_nuclear_plant6361 : fast & .intend(inspect_nuclear_plant636, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield636_id1078_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield636", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield636", "G(add_belief(perc_rad636(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield636", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield636").
+!inspect_nuclear_plant636 : true <- !inspect_nuclear_plant6361. 
+!inspect_nuclear_plant6361 : true & .intend(inspect_nuclear_plant636, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield636_id1079_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield636", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield636", "G(add_belief(perc_rad636(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield636", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield636").
-!inspect_nuclear_plant636 : .intend(inspect_nuclear_plant636, I) & violated(I, "shield636", Cmds) & (count(I, "shield636", Count) | (not(count(I, "shield636", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant636.
-!inspect_nuclear_plant636 : .intend(inspect_nuclear_plant636, I) & (count(I, "shield636", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield636"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant637 : true <- !inspect_nuclear_plant6371. 
+!inspect_nuclear_plant6371 : fast & .intend(inspect_nuclear_plant637, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield637_id1080_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield637", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield637", "G(add_belief(perc_rad637(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield637", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield637").
+!inspect_nuclear_plant637 : true <- !inspect_nuclear_plant6371. 
+!inspect_nuclear_plant6371 : true & .intend(inspect_nuclear_plant637, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield637_id1081_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield637", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield637", "G(add_belief(perc_rad637(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield637", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield637").
-!inspect_nuclear_plant637 : .intend(inspect_nuclear_plant637, I) & violated(I, "shield637", Cmds) & (count(I, "shield637", Count) | (not(count(I, "shield637", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant637.
-!inspect_nuclear_plant637 : .intend(inspect_nuclear_plant637, I) & (count(I, "shield637", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield637"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant638 : true <- !inspect_nuclear_plant6381. 
+!inspect_nuclear_plant6381 : fast & .intend(inspect_nuclear_plant638, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield638_id1082_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield638", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield638", "G(add_belief(perc_rad638(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield638", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield638").
+!inspect_nuclear_plant638 : true <- !inspect_nuclear_plant6381. 
+!inspect_nuclear_plant6381 : true & .intend(inspect_nuclear_plant638, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield638_id1083_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield638", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield638", "G(add_belief(perc_rad638(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield638", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield638").
-!inspect_nuclear_plant638 : .intend(inspect_nuclear_plant638, I) & violated(I, "shield638", Cmds) & (count(I, "shield638", Count) | (not(count(I, "shield638", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant638.
-!inspect_nuclear_plant638 : .intend(inspect_nuclear_plant638, I) & (count(I, "shield638", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield638"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant639 : true <- !inspect_nuclear_plant6391. 
+!inspect_nuclear_plant6391 : fast & .intend(inspect_nuclear_plant639, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield639_id1084_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield639", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield639", "G(add_belief(perc_rad639(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield639", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield639").
+!inspect_nuclear_plant639 : true <- !inspect_nuclear_plant6391. 
+!inspect_nuclear_plant6391 : true & .intend(inspect_nuclear_plant639, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield639_id1085_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield639", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield639", "G(add_belief(perc_rad639(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield639", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield639").
-!inspect_nuclear_plant639 : .intend(inspect_nuclear_plant639, I) & violated(I, "shield639", Cmds) & (count(I, "shield639", Count) | (not(count(I, "shield639", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant639.
-!inspect_nuclear_plant639 : .intend(inspect_nuclear_plant639, I) & (count(I, "shield639", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield639"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant640 : true <- !inspect_nuclear_plant6401. 
+!inspect_nuclear_plant6401 : fast & .intend(inspect_nuclear_plant640, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield640_id1086_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield640", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield640", "G(add_belief(perc_rad640(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield640", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield640").
+!inspect_nuclear_plant640 : true <- !inspect_nuclear_plant6401. 
+!inspect_nuclear_plant6401 : true & .intend(inspect_nuclear_plant640, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield640_id1087_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield640", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield640", "G(add_belief(perc_rad640(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield640", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield640").
-!inspect_nuclear_plant640 : .intend(inspect_nuclear_plant640, I) & violated(I, "shield640", Cmds) & (count(I, "shield640", Count) | (not(count(I, "shield640", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant640.
-!inspect_nuclear_plant640 : .intend(inspect_nuclear_plant640, I) & (count(I, "shield640", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield640"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant641 : true <- !inspect_nuclear_plant6411. 
+!inspect_nuclear_plant6411 : fast & .intend(inspect_nuclear_plant641, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield641_id1088_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield641", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield641", "G(add_belief(perc_rad641(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield641", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield641").
+!inspect_nuclear_plant641 : true <- !inspect_nuclear_plant6411. 
+!inspect_nuclear_plant6411 : true & .intend(inspect_nuclear_plant641, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield641_id1089_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield641", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield641", "G(add_belief(perc_rad641(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield641", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield641").
-!inspect_nuclear_plant641 : .intend(inspect_nuclear_plant641, I) & violated(I, "shield641", Cmds) & (count(I, "shield641", Count) | (not(count(I, "shield641", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant641.
-!inspect_nuclear_plant641 : .intend(inspect_nuclear_plant641, I) & (count(I, "shield641", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield641"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant642 : true <- !inspect_nuclear_plant6421. 
+!inspect_nuclear_plant6421 : fast & .intend(inspect_nuclear_plant642, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield642_id1090_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield642", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield642", "G(add_belief(perc_rad642(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield642", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield642").
+!inspect_nuclear_plant642 : true <- !inspect_nuclear_plant6421. 
+!inspect_nuclear_plant6421 : true & .intend(inspect_nuclear_plant642, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield642_id1091_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield642", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield642", "G(add_belief(perc_rad642(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield642", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield642").
-!inspect_nuclear_plant642 : .intend(inspect_nuclear_plant642, I) & violated(I, "shield642", Cmds) & (count(I, "shield642", Count) | (not(count(I, "shield642", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant642.
-!inspect_nuclear_plant642 : .intend(inspect_nuclear_plant642, I) & (count(I, "shield642", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield642"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant643 : true <- !inspect_nuclear_plant6431. 
+!inspect_nuclear_plant6431 : fast & .intend(inspect_nuclear_plant643, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield643_id1092_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield643", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield643", "G(add_belief(perc_rad643(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield643", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield643").
+!inspect_nuclear_plant643 : true <- !inspect_nuclear_plant6431. 
+!inspect_nuclear_plant6431 : true & .intend(inspect_nuclear_plant643, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield643_id1093_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield643", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield643", "G(add_belief(perc_rad643(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield643", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield643").
-!inspect_nuclear_plant643 : .intend(inspect_nuclear_plant643, I) & violated(I, "shield643", Cmds) & (count(I, "shield643", Count) | (not(count(I, "shield643", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant643.
-!inspect_nuclear_plant643 : .intend(inspect_nuclear_plant643, I) & (count(I, "shield643", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield643"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant644 : true <- !inspect_nuclear_plant6441. 
+!inspect_nuclear_plant6441 : fast & .intend(inspect_nuclear_plant644, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield644_id1094_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield644", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield644", "G(add_belief(perc_rad644(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield644", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield644").
+!inspect_nuclear_plant644 : true <- !inspect_nuclear_plant6441. 
+!inspect_nuclear_plant6441 : true & .intend(inspect_nuclear_plant644, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield644_id1095_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield644", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield644", "G(add_belief(perc_rad644(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield644", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield644").
-!inspect_nuclear_plant644 : .intend(inspect_nuclear_plant644, I) & violated(I, "shield644", Cmds) & (count(I, "shield644", Count) | (not(count(I, "shield644", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant644.
-!inspect_nuclear_plant644 : .intend(inspect_nuclear_plant644, I) & (count(I, "shield644", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield644"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant645 : true <- !inspect_nuclear_plant6451. 
+!inspect_nuclear_plant6451 : fast & .intend(inspect_nuclear_plant645, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield645_id1096_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield645", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield645", "G(add_belief(perc_rad645(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield645", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield645").
+!inspect_nuclear_plant645 : true <- !inspect_nuclear_plant6451. 
+!inspect_nuclear_plant6451 : true & .intend(inspect_nuclear_plant645, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield645_id1097_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield645", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield645", "G(add_belief(perc_rad645(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield645", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield645").
-!inspect_nuclear_plant645 : .intend(inspect_nuclear_plant645, I) & violated(I, "shield645", Cmds) & (count(I, "shield645", Count) | (not(count(I, "shield645", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant645.
-!inspect_nuclear_plant645 : .intend(inspect_nuclear_plant645, I) & (count(I, "shield645", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield645"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant646 : true <- !inspect_nuclear_plant6461. 
+!inspect_nuclear_plant6461 : fast & .intend(inspect_nuclear_plant646, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield646_id1098_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield646", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield646", "G(add_belief(perc_rad646(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield646", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield646").
+!inspect_nuclear_plant646 : true <- !inspect_nuclear_plant6461. 
+!inspect_nuclear_plant6461 : true & .intend(inspect_nuclear_plant646, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield646_id1099_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield646", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield646", "G(add_belief(perc_rad646(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield646", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield646").
-!inspect_nuclear_plant646 : .intend(inspect_nuclear_plant646, I) & violated(I, "shield646", Cmds) & (count(I, "shield646", Count) | (not(count(I, "shield646", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant646.
-!inspect_nuclear_plant646 : .intend(inspect_nuclear_plant646, I) & (count(I, "shield646", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield646"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant647 : true <- !inspect_nuclear_plant6471. 
+!inspect_nuclear_plant6471 : fast & .intend(inspect_nuclear_plant647, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield647_id1100_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield647", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield647", "G(add_belief(perc_rad647(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield647", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield647").
+!inspect_nuclear_plant647 : true <- !inspect_nuclear_plant6471. 
+!inspect_nuclear_plant6471 : true & .intend(inspect_nuclear_plant647, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield647_id1101_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield647", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield647", "G(add_belief(perc_rad647(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield647", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield647").
-!inspect_nuclear_plant647 : .intend(inspect_nuclear_plant647, I) & violated(I, "shield647", Cmds) & (count(I, "shield647", Count) | (not(count(I, "shield647", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant647.
-!inspect_nuclear_plant647 : .intend(inspect_nuclear_plant647, I) & (count(I, "shield647", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield647"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant648 : true <- !inspect_nuclear_plant6481. 
+!inspect_nuclear_plant6481 : fast & .intend(inspect_nuclear_plant648, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield648_id1102_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield648", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield648", "G(add_belief(perc_rad648(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield648", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield648").
+!inspect_nuclear_plant648 : true <- !inspect_nuclear_plant6481. 
+!inspect_nuclear_plant6481 : true & .intend(inspect_nuclear_plant648, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield648_id1103_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield648", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield648", "G(add_belief(perc_rad648(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield648", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield648").
-!inspect_nuclear_plant648 : .intend(inspect_nuclear_plant648, I) & violated(I, "shield648", Cmds) & (count(I, "shield648", Count) | (not(count(I, "shield648", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant648.
-!inspect_nuclear_plant648 : .intend(inspect_nuclear_plant648, I) & (count(I, "shield648", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield648"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant649 : true <- !inspect_nuclear_plant6491. 
+!inspect_nuclear_plant6491 : fast & .intend(inspect_nuclear_plant649, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield649_id1104_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield649", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield649", "G(add_belief(perc_rad649(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield649", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield649").
+!inspect_nuclear_plant649 : true <- !inspect_nuclear_plant6491. 
+!inspect_nuclear_plant6491 : true & .intend(inspect_nuclear_plant649, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield649_id1105_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield649", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield649", "G(add_belief(perc_rad649(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield649", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield649").
-!inspect_nuclear_plant649 : .intend(inspect_nuclear_plant649, I) & violated(I, "shield649", Cmds) & (count(I, "shield649", Count) | (not(count(I, "shield649", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant649.
-!inspect_nuclear_plant649 : .intend(inspect_nuclear_plant649, I) & (count(I, "shield649", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield649"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant650 : true <- !inspect_nuclear_plant6501. 
+!inspect_nuclear_plant6501 : fast & .intend(inspect_nuclear_plant650, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield650_id1106_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield650", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield650", "G(add_belief(perc_rad650(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield650", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield650").
+!inspect_nuclear_plant650 : true <- !inspect_nuclear_plant6501. 
+!inspect_nuclear_plant6501 : true & .intend(inspect_nuclear_plant650, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield650_id1107_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield650", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield650", "G(add_belief(perc_rad650(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield650", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield650").
-!inspect_nuclear_plant650 : .intend(inspect_nuclear_plant650, I) & violated(I, "shield650", Cmds) & (count(I, "shield650", Count) | (not(count(I, "shield650", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant650.
-!inspect_nuclear_plant650 : .intend(inspect_nuclear_plant650, I) & (count(I, "shield650", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield650"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant651 : true <- !inspect_nuclear_plant6511. 
+!inspect_nuclear_plant6511 : fast & .intend(inspect_nuclear_plant651, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield651_id1108_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield651", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield651", "G(add_belief(perc_rad651(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield651", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield651").
+!inspect_nuclear_plant651 : true <- !inspect_nuclear_plant6511. 
+!inspect_nuclear_plant6511 : true & .intend(inspect_nuclear_plant651, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield651_id1109_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield651", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield651", "G(add_belief(perc_rad651(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield651", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield651").
-!inspect_nuclear_plant651 : .intend(inspect_nuclear_plant651, I) & violated(I, "shield651", Cmds) & (count(I, "shield651", Count) | (not(count(I, "shield651", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant651.
-!inspect_nuclear_plant651 : .intend(inspect_nuclear_plant651, I) & (count(I, "shield651", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield651"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant652 : true <- !inspect_nuclear_plant6521. 
+!inspect_nuclear_plant6521 : fast & .intend(inspect_nuclear_plant652, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield652_id1110_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield652", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield652", "G(add_belief(perc_rad652(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield652", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield652").
+!inspect_nuclear_plant652 : true <- !inspect_nuclear_plant6521. 
+!inspect_nuclear_plant6521 : true & .intend(inspect_nuclear_plant652, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield652_id1111_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield652", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield652", "G(add_belief(perc_rad652(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield652", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield652").
-!inspect_nuclear_plant652 : .intend(inspect_nuclear_plant652, I) & violated(I, "shield652", Cmds) & (count(I, "shield652", Count) | (not(count(I, "shield652", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant652.
-!inspect_nuclear_plant652 : .intend(inspect_nuclear_plant652, I) & (count(I, "shield652", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield652"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant653 : true <- !inspect_nuclear_plant6531. 
+!inspect_nuclear_plant6531 : fast & .intend(inspect_nuclear_plant653, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield653_id1112_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield653", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield653", "G(add_belief(perc_rad653(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield653", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield653").
+!inspect_nuclear_plant653 : true <- !inspect_nuclear_plant6531. 
+!inspect_nuclear_plant6531 : true & .intend(inspect_nuclear_plant653, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield653_id1113_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield653", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield653", "G(add_belief(perc_rad653(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield653", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield653").
-!inspect_nuclear_plant653 : .intend(inspect_nuclear_plant653, I) & violated(I, "shield653", Cmds) & (count(I, "shield653", Count) | (not(count(I, "shield653", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant653.
-!inspect_nuclear_plant653 : .intend(inspect_nuclear_plant653, I) & (count(I, "shield653", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield653"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant654 : true <- !inspect_nuclear_plant6541. 
+!inspect_nuclear_plant6541 : fast & .intend(inspect_nuclear_plant654, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield654_id1114_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield654", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield654", "G(add_belief(perc_rad654(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield654", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield654").
+!inspect_nuclear_plant654 : true <- !inspect_nuclear_plant6541. 
+!inspect_nuclear_plant6541 : true & .intend(inspect_nuclear_plant654, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield654_id1115_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield654", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield654", "G(add_belief(perc_rad654(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield654", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield654").
-!inspect_nuclear_plant654 : .intend(inspect_nuclear_plant654, I) & violated(I, "shield654", Cmds) & (count(I, "shield654", Count) | (not(count(I, "shield654", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant654.
-!inspect_nuclear_plant654 : .intend(inspect_nuclear_plant654, I) & (count(I, "shield654", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield654"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant655 : true <- !inspect_nuclear_plant6551. 
+!inspect_nuclear_plant6551 : fast & .intend(inspect_nuclear_plant655, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield655_id1116_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield655", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield655", "G(add_belief(perc_rad655(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield655", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield655").
+!inspect_nuclear_plant655 : true <- !inspect_nuclear_plant6551. 
+!inspect_nuclear_plant6551 : true & .intend(inspect_nuclear_plant655, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield655_id1117_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield655", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield655", "G(add_belief(perc_rad655(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield655", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield655").
-!inspect_nuclear_plant655 : .intend(inspect_nuclear_plant655, I) & violated(I, "shield655", Cmds) & (count(I, "shield655", Count) | (not(count(I, "shield655", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant655.
-!inspect_nuclear_plant655 : .intend(inspect_nuclear_plant655, I) & (count(I, "shield655", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield655"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant656 : true <- !inspect_nuclear_plant6561. 
+!inspect_nuclear_plant6561 : fast & .intend(inspect_nuclear_plant656, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield656_id1118_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield656", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield656", "G(add_belief(perc_rad656(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield656", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield656").
+!inspect_nuclear_plant656 : true <- !inspect_nuclear_plant6561. 
+!inspect_nuclear_plant6561 : true & .intend(inspect_nuclear_plant656, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield656_id1119_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield656", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield656", "G(add_belief(perc_rad656(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield656", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield656").
-!inspect_nuclear_plant656 : .intend(inspect_nuclear_plant656, I) & violated(I, "shield656", Cmds) & (count(I, "shield656", Count) | (not(count(I, "shield656", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant656.
-!inspect_nuclear_plant656 : .intend(inspect_nuclear_plant656, I) & (count(I, "shield656", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield656"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant657 : true <- !inspect_nuclear_plant6571. 
+!inspect_nuclear_plant6571 : fast & .intend(inspect_nuclear_plant657, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield657_id1120_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield657", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield657", "G(add_belief(perc_rad657(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield657", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield657").
+!inspect_nuclear_plant657 : true <- !inspect_nuclear_plant6571. 
+!inspect_nuclear_plant6571 : true & .intend(inspect_nuclear_plant657, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield657_id1121_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield657", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield657", "G(add_belief(perc_rad657(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield657", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield657").
-!inspect_nuclear_plant657 : .intend(inspect_nuclear_plant657, I) & violated(I, "shield657", Cmds) & (count(I, "shield657", Count) | (not(count(I, "shield657", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant657.
-!inspect_nuclear_plant657 : .intend(inspect_nuclear_plant657, I) & (count(I, "shield657", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield657"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant658 : true <- !inspect_nuclear_plant6581. 
+!inspect_nuclear_plant6581 : fast & .intend(inspect_nuclear_plant658, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield658_id1122_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield658", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield658", "G(add_belief(perc_rad658(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield658", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield658").
+!inspect_nuclear_plant658 : true <- !inspect_nuclear_plant6581. 
+!inspect_nuclear_plant6581 : true & .intend(inspect_nuclear_plant658, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield658_id1123_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield658", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield658", "G(add_belief(perc_rad658(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield658", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield658").
-!inspect_nuclear_plant658 : .intend(inspect_nuclear_plant658, I) & violated(I, "shield658", Cmds) & (count(I, "shield658", Count) | (not(count(I, "shield658", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant658.
-!inspect_nuclear_plant658 : .intend(inspect_nuclear_plant658, I) & (count(I, "shield658", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield658"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant659 : true <- !inspect_nuclear_plant6591. 
+!inspect_nuclear_plant6591 : fast & .intend(inspect_nuclear_plant659, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield659_id1124_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield659", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield659", "G(add_belief(perc_rad659(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield659", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield659").
+!inspect_nuclear_plant659 : true <- !inspect_nuclear_plant6591. 
+!inspect_nuclear_plant6591 : true & .intend(inspect_nuclear_plant659, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield659_id1125_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield659", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield659", "G(add_belief(perc_rad659(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield659", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield659").
-!inspect_nuclear_plant659 : .intend(inspect_nuclear_plant659, I) & violated(I, "shield659", Cmds) & (count(I, "shield659", Count) | (not(count(I, "shield659", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant659.
-!inspect_nuclear_plant659 : .intend(inspect_nuclear_plant659, I) & (count(I, "shield659", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield659"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant660 : true <- !inspect_nuclear_plant6601. 
+!inspect_nuclear_plant6601 : fast & .intend(inspect_nuclear_plant660, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield660_id1126_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield660", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield660", "G(add_belief(perc_rad660(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield660", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield660").
+!inspect_nuclear_plant660 : true <- !inspect_nuclear_plant6601. 
+!inspect_nuclear_plant6601 : true & .intend(inspect_nuclear_plant660, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield660_id1127_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield660", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield660", "G(add_belief(perc_rad660(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield660", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield660").
-!inspect_nuclear_plant660 : .intend(inspect_nuclear_plant660, I) & violated(I, "shield660", Cmds) & (count(I, "shield660", Count) | (not(count(I, "shield660", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant660.
-!inspect_nuclear_plant660 : .intend(inspect_nuclear_plant660, I) & (count(I, "shield660", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield660"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant661 : true <- !inspect_nuclear_plant6611. 
+!inspect_nuclear_plant6611 : fast & .intend(inspect_nuclear_plant661, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield661_id1128_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield661", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield661", "G(add_belief(perc_rad661(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield661", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield661").
+!inspect_nuclear_plant661 : true <- !inspect_nuclear_plant6611. 
+!inspect_nuclear_plant6611 : true & .intend(inspect_nuclear_plant661, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield661_id1129_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield661", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield661", "G(add_belief(perc_rad661(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield661", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield661").
-!inspect_nuclear_plant661 : .intend(inspect_nuclear_plant661, I) & violated(I, "shield661", Cmds) & (count(I, "shield661", Count) | (not(count(I, "shield661", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant661.
-!inspect_nuclear_plant661 : .intend(inspect_nuclear_plant661, I) & (count(I, "shield661", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield661"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant662 : true <- !inspect_nuclear_plant6621. 
+!inspect_nuclear_plant6621 : fast & .intend(inspect_nuclear_plant662, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield662_id1130_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield662", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield662", "G(add_belief(perc_rad662(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield662", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield662").
+!inspect_nuclear_plant662 : true <- !inspect_nuclear_plant6621. 
+!inspect_nuclear_plant6621 : true & .intend(inspect_nuclear_plant662, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield662_id1131_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield662", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield662", "G(add_belief(perc_rad662(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield662", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield662").
-!inspect_nuclear_plant662 : .intend(inspect_nuclear_plant662, I) & violated(I, "shield662", Cmds) & (count(I, "shield662", Count) | (not(count(I, "shield662", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant662.
-!inspect_nuclear_plant662 : .intend(inspect_nuclear_plant662, I) & (count(I, "shield662", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield662"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant663 : true <- !inspect_nuclear_plant6631. 
+!inspect_nuclear_plant6631 : fast & .intend(inspect_nuclear_plant663, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield663_id1132_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield663", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield663", "G(add_belief(perc_rad663(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield663", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield663").
+!inspect_nuclear_plant663 : true <- !inspect_nuclear_plant6631. 
+!inspect_nuclear_plant6631 : true & .intend(inspect_nuclear_plant663, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield663_id1133_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield663", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield663", "G(add_belief(perc_rad663(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield663", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield663").
-!inspect_nuclear_plant663 : .intend(inspect_nuclear_plant663, I) & violated(I, "shield663", Cmds) & (count(I, "shield663", Count) | (not(count(I, "shield663", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant663.
-!inspect_nuclear_plant663 : .intend(inspect_nuclear_plant663, I) & (count(I, "shield663", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield663"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant664 : true <- !inspect_nuclear_plant6641. 
+!inspect_nuclear_plant6641 : fast & .intend(inspect_nuclear_plant664, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield664_id1134_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield664", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield664", "G(add_belief(perc_rad664(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield664", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield664").
+!inspect_nuclear_plant664 : true <- !inspect_nuclear_plant6641. 
+!inspect_nuclear_plant6641 : true & .intend(inspect_nuclear_plant664, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield664_id1135_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield664", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield664", "G(add_belief(perc_rad664(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield664", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield664").
-!inspect_nuclear_plant664 : .intend(inspect_nuclear_plant664, I) & violated(I, "shield664", Cmds) & (count(I, "shield664", Count) | (not(count(I, "shield664", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant664.
-!inspect_nuclear_plant664 : .intend(inspect_nuclear_plant664, I) & (count(I, "shield664", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield664"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant665 : true <- !inspect_nuclear_plant6651. 
+!inspect_nuclear_plant6651 : fast & .intend(inspect_nuclear_plant665, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield665_id1136_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield665", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield665", "G(add_belief(perc_rad665(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield665", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield665").
+!inspect_nuclear_plant665 : true <- !inspect_nuclear_plant6651. 
+!inspect_nuclear_plant6651 : true & .intend(inspect_nuclear_plant665, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield665_id1137_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield665", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield665", "G(add_belief(perc_rad665(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield665", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield665").
-!inspect_nuclear_plant665 : .intend(inspect_nuclear_plant665, I) & violated(I, "shield665", Cmds) & (count(I, "shield665", Count) | (not(count(I, "shield665", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant665.
-!inspect_nuclear_plant665 : .intend(inspect_nuclear_plant665, I) & (count(I, "shield665", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield665"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant666 : true <- !inspect_nuclear_plant6661. 
+!inspect_nuclear_plant6661 : fast & .intend(inspect_nuclear_plant666, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield666_id1138_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield666", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield666", "G(add_belief(perc_rad666(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield666", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield666").
+!inspect_nuclear_plant666 : true <- !inspect_nuclear_plant6661. 
+!inspect_nuclear_plant6661 : true & .intend(inspect_nuclear_plant666, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield666_id1139_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield666", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield666", "G(add_belief(perc_rad666(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield666", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield666").
-!inspect_nuclear_plant666 : .intend(inspect_nuclear_plant666, I) & violated(I, "shield666", Cmds) & (count(I, "shield666", Count) | (not(count(I, "shield666", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant666.
-!inspect_nuclear_plant666 : .intend(inspect_nuclear_plant666, I) & (count(I, "shield666", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield666"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant667 : true <- !inspect_nuclear_plant6671. 
+!inspect_nuclear_plant6671 : fast & .intend(inspect_nuclear_plant667, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield667_id1140_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield667", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield667", "G(add_belief(perc_rad667(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield667", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield667").
+!inspect_nuclear_plant667 : true <- !inspect_nuclear_plant6671. 
+!inspect_nuclear_plant6671 : true & .intend(inspect_nuclear_plant667, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield667_id1141_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield667", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield667", "G(add_belief(perc_rad667(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield667", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield667").
-!inspect_nuclear_plant667 : .intend(inspect_nuclear_plant667, I) & violated(I, "shield667", Cmds) & (count(I, "shield667", Count) | (not(count(I, "shield667", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant667.
-!inspect_nuclear_plant667 : .intend(inspect_nuclear_plant667, I) & (count(I, "shield667", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield667"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant668 : true <- !inspect_nuclear_plant6681. 
+!inspect_nuclear_plant6681 : fast & .intend(inspect_nuclear_plant668, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield668_id1142_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield668", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield668", "G(add_belief(perc_rad668(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield668", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield668").
+!inspect_nuclear_plant668 : true <- !inspect_nuclear_plant6681. 
+!inspect_nuclear_plant6681 : true & .intend(inspect_nuclear_plant668, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield668_id1143_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield668", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield668", "G(add_belief(perc_rad668(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield668", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield668").
-!inspect_nuclear_plant668 : .intend(inspect_nuclear_plant668, I) & violated(I, "shield668", Cmds) & (count(I, "shield668", Count) | (not(count(I, "shield668", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant668.
-!inspect_nuclear_plant668 : .intend(inspect_nuclear_plant668, I) & (count(I, "shield668", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield668"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant669 : true <- !inspect_nuclear_plant6691. 
+!inspect_nuclear_plant6691 : fast & .intend(inspect_nuclear_plant669, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield669_id1144_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield669", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield669", "G(add_belief(perc_rad669(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield669", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield669").
+!inspect_nuclear_plant669 : true <- !inspect_nuclear_plant6691. 
+!inspect_nuclear_plant6691 : true & .intend(inspect_nuclear_plant669, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield669_id1145_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield669", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield669", "G(add_belief(perc_rad669(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield669", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield669").
-!inspect_nuclear_plant669 : .intend(inspect_nuclear_plant669, I) & violated(I, "shield669", Cmds) & (count(I, "shield669", Count) | (not(count(I, "shield669", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant669.
-!inspect_nuclear_plant669 : .intend(inspect_nuclear_plant669, I) & (count(I, "shield669", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield669"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant670 : true <- !inspect_nuclear_plant6701. 
+!inspect_nuclear_plant6701 : fast & .intend(inspect_nuclear_plant670, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield670_id1146_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield670", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield670", "G(add_belief(perc_rad670(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield670", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield670").
+!inspect_nuclear_plant670 : true <- !inspect_nuclear_plant6701. 
+!inspect_nuclear_plant6701 : true & .intend(inspect_nuclear_plant670, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield670_id1147_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield670", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield670", "G(add_belief(perc_rad670(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield670", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield670").
-!inspect_nuclear_plant670 : .intend(inspect_nuclear_plant670, I) & violated(I, "shield670", Cmds) & (count(I, "shield670", Count) | (not(count(I, "shield670", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant670.
-!inspect_nuclear_plant670 : .intend(inspect_nuclear_plant670, I) & (count(I, "shield670", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield670"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant671 : true <- !inspect_nuclear_plant6711. 
+!inspect_nuclear_plant6711 : fast & .intend(inspect_nuclear_plant671, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield671_id1148_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield671", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield671", "G(add_belief(perc_rad671(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield671", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield671").
+!inspect_nuclear_plant671 : true <- !inspect_nuclear_plant6711. 
+!inspect_nuclear_plant6711 : true & .intend(inspect_nuclear_plant671, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield671_id1149_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield671", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield671", "G(add_belief(perc_rad671(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield671", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield671").
-!inspect_nuclear_plant671 : .intend(inspect_nuclear_plant671, I) & violated(I, "shield671", Cmds) & (count(I, "shield671", Count) | (not(count(I, "shield671", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant671.
-!inspect_nuclear_plant671 : .intend(inspect_nuclear_plant671, I) & (count(I, "shield671", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield671"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant672 : true <- !inspect_nuclear_plant6721. 
+!inspect_nuclear_plant6721 : fast & .intend(inspect_nuclear_plant672, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield672_id1150_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield672", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield672", "G(add_belief(perc_rad672(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield672", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield672").
+!inspect_nuclear_plant672 : true <- !inspect_nuclear_plant6721. 
+!inspect_nuclear_plant6721 : true & .intend(inspect_nuclear_plant672, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield672_id1151_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield672", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield672", "G(add_belief(perc_rad672(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield672", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield672").
-!inspect_nuclear_plant672 : .intend(inspect_nuclear_plant672, I) & violated(I, "shield672", Cmds) & (count(I, "shield672", Count) | (not(count(I, "shield672", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant672.
-!inspect_nuclear_plant672 : .intend(inspect_nuclear_plant672, I) & (count(I, "shield672", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield672"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant673 : true <- !inspect_nuclear_plant6731. 
+!inspect_nuclear_plant6731 : fast & .intend(inspect_nuclear_plant673, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield673_id1152_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield673", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield673", "G(add_belief(perc_rad673(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield673", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield673").
+!inspect_nuclear_plant673 : true <- !inspect_nuclear_plant6731. 
+!inspect_nuclear_plant6731 : true & .intend(inspect_nuclear_plant673, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield673_id1153_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield673", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield673", "G(add_belief(perc_rad673(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield673", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield673").
-!inspect_nuclear_plant673 : .intend(inspect_nuclear_plant673, I) & violated(I, "shield673", Cmds) & (count(I, "shield673", Count) | (not(count(I, "shield673", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant673.
-!inspect_nuclear_plant673 : .intend(inspect_nuclear_plant673, I) & (count(I, "shield673", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield673"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant674 : true <- !inspect_nuclear_plant6741. 
+!inspect_nuclear_plant6741 : fast & .intend(inspect_nuclear_plant674, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield674_id1154_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield674", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield674", "G(add_belief(perc_rad674(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield674", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield674").
+!inspect_nuclear_plant674 : true <- !inspect_nuclear_plant6741. 
+!inspect_nuclear_plant6741 : true & .intend(inspect_nuclear_plant674, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield674_id1155_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield674", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield674", "G(add_belief(perc_rad674(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield674", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield674").
-!inspect_nuclear_plant674 : .intend(inspect_nuclear_plant674, I) & violated(I, "shield674", Cmds) & (count(I, "shield674", Count) | (not(count(I, "shield674", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant674.
-!inspect_nuclear_plant674 : .intend(inspect_nuclear_plant674, I) & (count(I, "shield674", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield674"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant675 : true <- !inspect_nuclear_plant6751. 
+!inspect_nuclear_plant6751 : fast & .intend(inspect_nuclear_plant675, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield675_id1156_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield675", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield675", "G(add_belief(perc_rad675(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield675", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield675").
+!inspect_nuclear_plant675 : true <- !inspect_nuclear_plant6751. 
+!inspect_nuclear_plant6751 : true & .intend(inspect_nuclear_plant675, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield675_id1157_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield675", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield675", "G(add_belief(perc_rad675(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield675", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield675").
-!inspect_nuclear_plant675 : .intend(inspect_nuclear_plant675, I) & violated(I, "shield675", Cmds) & (count(I, "shield675", Count) | (not(count(I, "shield675", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant675.
-!inspect_nuclear_plant675 : .intend(inspect_nuclear_plant675, I) & (count(I, "shield675", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield675"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant676 : true <- !inspect_nuclear_plant6761. 
+!inspect_nuclear_plant6761 : fast & .intend(inspect_nuclear_plant676, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield676_id1158_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield676", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield676", "G(add_belief(perc_rad676(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield676", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield676").
+!inspect_nuclear_plant676 : true <- !inspect_nuclear_plant6761. 
+!inspect_nuclear_plant6761 : true & .intend(inspect_nuclear_plant676, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield676_id1159_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield676", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield676", "G(add_belief(perc_rad676(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield676", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield676").
-!inspect_nuclear_plant676 : .intend(inspect_nuclear_plant676, I) & violated(I, "shield676", Cmds) & (count(I, "shield676", Count) | (not(count(I, "shield676", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant676.
-!inspect_nuclear_plant676 : .intend(inspect_nuclear_plant676, I) & (count(I, "shield676", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield676"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant677 : true <- !inspect_nuclear_plant6771. 
+!inspect_nuclear_plant6771 : fast & .intend(inspect_nuclear_plant677, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield677_id1160_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield677", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield677", "G(add_belief(perc_rad677(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield677", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield677").
+!inspect_nuclear_plant677 : true <- !inspect_nuclear_plant6771. 
+!inspect_nuclear_plant6771 : true & .intend(inspect_nuclear_plant677, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield677_id1161_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield677", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield677", "G(add_belief(perc_rad677(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield677", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield677").
-!inspect_nuclear_plant677 : .intend(inspect_nuclear_plant677, I) & violated(I, "shield677", Cmds) & (count(I, "shield677", Count) | (not(count(I, "shield677", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant677.
-!inspect_nuclear_plant677 : .intend(inspect_nuclear_plant677, I) & (count(I, "shield677", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield677"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant678 : true <- !inspect_nuclear_plant6781. 
+!inspect_nuclear_plant6781 : fast & .intend(inspect_nuclear_plant678, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield678_id1162_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield678", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield678", "G(add_belief(perc_rad678(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield678", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield678").
+!inspect_nuclear_plant678 : true <- !inspect_nuclear_plant6781. 
+!inspect_nuclear_plant6781 : true & .intend(inspect_nuclear_plant678, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield678_id1163_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield678", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield678", "G(add_belief(perc_rad678(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield678", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield678").
-!inspect_nuclear_plant678 : .intend(inspect_nuclear_plant678, I) & violated(I, "shield678", Cmds) & (count(I, "shield678", Count) | (not(count(I, "shield678", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant678.
-!inspect_nuclear_plant678 : .intend(inspect_nuclear_plant678, I) & (count(I, "shield678", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield678"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant679 : true <- !inspect_nuclear_plant6791. 
+!inspect_nuclear_plant6791 : fast & .intend(inspect_nuclear_plant679, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield679_id1164_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield679", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield679", "G(add_belief(perc_rad679(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield679", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield679").
+!inspect_nuclear_plant679 : true <- !inspect_nuclear_plant6791. 
+!inspect_nuclear_plant6791 : true & .intend(inspect_nuclear_plant679, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield679_id1165_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield679", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield679", "G(add_belief(perc_rad679(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield679", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield679").
-!inspect_nuclear_plant679 : .intend(inspect_nuclear_plant679, I) & violated(I, "shield679", Cmds) & (count(I, "shield679", Count) | (not(count(I, "shield679", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant679.
-!inspect_nuclear_plant679 : .intend(inspect_nuclear_plant679, I) & (count(I, "shield679", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield679"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant680 : true <- !inspect_nuclear_plant6801. 
+!inspect_nuclear_plant6801 : fast & .intend(inspect_nuclear_plant680, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield680_id1166_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield680", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield680", "G(add_belief(perc_rad680(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield680", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield680").
+!inspect_nuclear_plant680 : true <- !inspect_nuclear_plant6801. 
+!inspect_nuclear_plant6801 : true & .intend(inspect_nuclear_plant680, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield680_id1167_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield680", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield680", "G(add_belief(perc_rad680(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield680", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield680").
-!inspect_nuclear_plant680 : .intend(inspect_nuclear_plant680, I) & violated(I, "shield680", Cmds) & (count(I, "shield680", Count) | (not(count(I, "shield680", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant680.
-!inspect_nuclear_plant680 : .intend(inspect_nuclear_plant680, I) & (count(I, "shield680", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield680"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant681 : true <- !inspect_nuclear_plant6811. 
+!inspect_nuclear_plant6811 : fast & .intend(inspect_nuclear_plant681, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield681_id1168_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield681", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield681", "G(add_belief(perc_rad681(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield681", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield681").
+!inspect_nuclear_plant681 : true <- !inspect_nuclear_plant6811. 
+!inspect_nuclear_plant6811 : true & .intend(inspect_nuclear_plant681, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield681_id1169_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield681", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield681", "G(add_belief(perc_rad681(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield681", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield681").
-!inspect_nuclear_plant681 : .intend(inspect_nuclear_plant681, I) & violated(I, "shield681", Cmds) & (count(I, "shield681", Count) | (not(count(I, "shield681", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant681.
-!inspect_nuclear_plant681 : .intend(inspect_nuclear_plant681, I) & (count(I, "shield681", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield681"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant682 : true <- !inspect_nuclear_plant6821. 
+!inspect_nuclear_plant6821 : fast & .intend(inspect_nuclear_plant682, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield682_id1170_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield682", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield682", "G(add_belief(perc_rad682(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield682", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield682").
+!inspect_nuclear_plant682 : true <- !inspect_nuclear_plant6821. 
+!inspect_nuclear_plant6821 : true & .intend(inspect_nuclear_plant682, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield682_id1171_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield682", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield682", "G(add_belief(perc_rad682(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield682", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield682").
-!inspect_nuclear_plant682 : .intend(inspect_nuclear_plant682, I) & violated(I, "shield682", Cmds) & (count(I, "shield682", Count) | (not(count(I, "shield682", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant682.
-!inspect_nuclear_plant682 : .intend(inspect_nuclear_plant682, I) & (count(I, "shield682", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield682"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant683 : true <- !inspect_nuclear_plant6831. 
+!inspect_nuclear_plant6831 : fast & .intend(inspect_nuclear_plant683, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield683_id1172_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield683", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield683", "G(add_belief(perc_rad683(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield683", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield683").
+!inspect_nuclear_plant683 : true <- !inspect_nuclear_plant6831. 
+!inspect_nuclear_plant6831 : true & .intend(inspect_nuclear_plant683, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield683_id1173_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield683", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield683", "G(add_belief(perc_rad683(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield683", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield683").
-!inspect_nuclear_plant683 : .intend(inspect_nuclear_plant683, I) & violated(I, "shield683", Cmds) & (count(I, "shield683", Count) | (not(count(I, "shield683", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant683.
-!inspect_nuclear_plant683 : .intend(inspect_nuclear_plant683, I) & (count(I, "shield683", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield683"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant684 : true <- !inspect_nuclear_plant6841. 
+!inspect_nuclear_plant6841 : fast & .intend(inspect_nuclear_plant684, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield684_id1174_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield684", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield684", "G(add_belief(perc_rad684(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield684", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield684").
+!inspect_nuclear_plant684 : true <- !inspect_nuclear_plant6841. 
+!inspect_nuclear_plant6841 : true & .intend(inspect_nuclear_plant684, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield684_id1175_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield684", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield684", "G(add_belief(perc_rad684(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield684", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield684").
-!inspect_nuclear_plant684 : .intend(inspect_nuclear_plant684, I) & violated(I, "shield684", Cmds) & (count(I, "shield684", Count) | (not(count(I, "shield684", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant684.
-!inspect_nuclear_plant684 : .intend(inspect_nuclear_plant684, I) & (count(I, "shield684", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield684"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant685 : true <- !inspect_nuclear_plant6851. 
+!inspect_nuclear_plant6851 : fast & .intend(inspect_nuclear_plant685, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield685_id1176_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield685", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield685", "G(add_belief(perc_rad685(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield685", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield685").
+!inspect_nuclear_plant685 : true <- !inspect_nuclear_plant6851. 
+!inspect_nuclear_plant6851 : true & .intend(inspect_nuclear_plant685, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield685_id1177_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield685", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield685", "G(add_belief(perc_rad685(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield685", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield685").
-!inspect_nuclear_plant685 : .intend(inspect_nuclear_plant685, I) & violated(I, "shield685", Cmds) & (count(I, "shield685", Count) | (not(count(I, "shield685", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant685.
-!inspect_nuclear_plant685 : .intend(inspect_nuclear_plant685, I) & (count(I, "shield685", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield685"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant686 : true <- !inspect_nuclear_plant6861. 
+!inspect_nuclear_plant6861 : fast & .intend(inspect_nuclear_plant686, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield686_id1178_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield686", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield686", "G(add_belief(perc_rad686(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield686", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield686").
+!inspect_nuclear_plant686 : true <- !inspect_nuclear_plant6861. 
+!inspect_nuclear_plant6861 : true & .intend(inspect_nuclear_plant686, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield686_id1179_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield686", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield686", "G(add_belief(perc_rad686(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield686", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield686").
-!inspect_nuclear_plant686 : .intend(inspect_nuclear_plant686, I) & violated(I, "shield686", Cmds) & (count(I, "shield686", Count) | (not(count(I, "shield686", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant686.
-!inspect_nuclear_plant686 : .intend(inspect_nuclear_plant686, I) & (count(I, "shield686", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield686"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant687 : true <- !inspect_nuclear_plant6871. 
+!inspect_nuclear_plant6871 : fast & .intend(inspect_nuclear_plant687, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield687_id1180_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield687", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield687", "G(add_belief(perc_rad687(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield687", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield687").
+!inspect_nuclear_plant687 : true <- !inspect_nuclear_plant6871. 
+!inspect_nuclear_plant6871 : true & .intend(inspect_nuclear_plant687, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield687_id1181_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield687", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield687", "G(add_belief(perc_rad687(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield687", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield687").
-!inspect_nuclear_plant687 : .intend(inspect_nuclear_plant687, I) & violated(I, "shield687", Cmds) & (count(I, "shield687", Count) | (not(count(I, "shield687", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant687.
-!inspect_nuclear_plant687 : .intend(inspect_nuclear_plant687, I) & (count(I, "shield687", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield687"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant688 : true <- !inspect_nuclear_plant6881. 
+!inspect_nuclear_plant6881 : fast & .intend(inspect_nuclear_plant688, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield688_id1182_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield688", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield688", "G(add_belief(perc_rad688(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield688", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield688").
+!inspect_nuclear_plant688 : true <- !inspect_nuclear_plant6881. 
+!inspect_nuclear_plant6881 : true & .intend(inspect_nuclear_plant688, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield688_id1183_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield688", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield688", "G(add_belief(perc_rad688(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield688", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield688").
-!inspect_nuclear_plant688 : .intend(inspect_nuclear_plant688, I) & violated(I, "shield688", Cmds) & (count(I, "shield688", Count) | (not(count(I, "shield688", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant688.
-!inspect_nuclear_plant688 : .intend(inspect_nuclear_plant688, I) & (count(I, "shield688", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield688"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant689 : true <- !inspect_nuclear_plant6891. 
+!inspect_nuclear_plant6891 : fast & .intend(inspect_nuclear_plant689, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield689_id1184_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield689", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield689", "G(add_belief(perc_rad689(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield689", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield689").
+!inspect_nuclear_plant689 : true <- !inspect_nuclear_plant6891. 
+!inspect_nuclear_plant6891 : true & .intend(inspect_nuclear_plant689, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield689_id1185_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield689", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield689", "G(add_belief(perc_rad689(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield689", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield689").
-!inspect_nuclear_plant689 : .intend(inspect_nuclear_plant689, I) & violated(I, "shield689", Cmds) & (count(I, "shield689", Count) | (not(count(I, "shield689", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant689.
-!inspect_nuclear_plant689 : .intend(inspect_nuclear_plant689, I) & (count(I, "shield689", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield689"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant690 : true <- !inspect_nuclear_plant6901. 
+!inspect_nuclear_plant6901 : fast & .intend(inspect_nuclear_plant690, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield690_id1186_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield690", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield690", "G(add_belief(perc_rad690(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield690", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield690").
+!inspect_nuclear_plant690 : true <- !inspect_nuclear_plant6901. 
+!inspect_nuclear_plant6901 : true & .intend(inspect_nuclear_plant690, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield690_id1187_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield690", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield690", "G(add_belief(perc_rad690(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield690", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield690").
-!inspect_nuclear_plant690 : .intend(inspect_nuclear_plant690, I) & violated(I, "shield690", Cmds) & (count(I, "shield690", Count) | (not(count(I, "shield690", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant690.
-!inspect_nuclear_plant690 : .intend(inspect_nuclear_plant690, I) & (count(I, "shield690", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield690"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant691 : true <- !inspect_nuclear_plant6911. 
+!inspect_nuclear_plant6911 : fast & .intend(inspect_nuclear_plant691, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield691_id1188_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield691", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield691", "G(add_belief(perc_rad691(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield691", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield691").
+!inspect_nuclear_plant691 : true <- !inspect_nuclear_plant6911. 
+!inspect_nuclear_plant6911 : true & .intend(inspect_nuclear_plant691, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield691_id1189_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield691", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield691", "G(add_belief(perc_rad691(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield691", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield691").
-!inspect_nuclear_plant691 : .intend(inspect_nuclear_plant691, I) & violated(I, "shield691", Cmds) & (count(I, "shield691", Count) | (not(count(I, "shield691", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant691.
-!inspect_nuclear_plant691 : .intend(inspect_nuclear_plant691, I) & (count(I, "shield691", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield691"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant692 : true <- !inspect_nuclear_plant6921. 
+!inspect_nuclear_plant6921 : fast & .intend(inspect_nuclear_plant692, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield692_id1190_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield692", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield692", "G(add_belief(perc_rad692(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield692", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield692").
+!inspect_nuclear_plant692 : true <- !inspect_nuclear_plant6921. 
+!inspect_nuclear_plant6921 : true & .intend(inspect_nuclear_plant692, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield692_id1191_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield692", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield692", "G(add_belief(perc_rad692(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield692", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield692").
-!inspect_nuclear_plant692 : .intend(inspect_nuclear_plant692, I) & violated(I, "shield692", Cmds) & (count(I, "shield692", Count) | (not(count(I, "shield692", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant692.
-!inspect_nuclear_plant692 : .intend(inspect_nuclear_plant692, I) & (count(I, "shield692", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield692"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant693 : true <- !inspect_nuclear_plant6931. 
+!inspect_nuclear_plant6931 : fast & .intend(inspect_nuclear_plant693, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield693_id1192_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield693", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield693", "G(add_belief(perc_rad693(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield693", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield693").
+!inspect_nuclear_plant693 : true <- !inspect_nuclear_plant6931. 
+!inspect_nuclear_plant6931 : true & .intend(inspect_nuclear_plant693, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield693_id1193_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield693", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield693", "G(add_belief(perc_rad693(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield693", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield693").
-!inspect_nuclear_plant693 : .intend(inspect_nuclear_plant693, I) & violated(I, "shield693", Cmds) & (count(I, "shield693", Count) | (not(count(I, "shield693", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant693.
-!inspect_nuclear_plant693 : .intend(inspect_nuclear_plant693, I) & (count(I, "shield693", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield693"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant694 : true <- !inspect_nuclear_plant6941. 
+!inspect_nuclear_plant6941 : fast & .intend(inspect_nuclear_plant694, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield694_id1194_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield694", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield694", "G(add_belief(perc_rad694(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield694", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield694").
+!inspect_nuclear_plant694 : true <- !inspect_nuclear_plant6941. 
+!inspect_nuclear_plant6941 : true & .intend(inspect_nuclear_plant694, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield694_id1195_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield694", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield694", "G(add_belief(perc_rad694(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield694", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield694").
-!inspect_nuclear_plant694 : .intend(inspect_nuclear_plant694, I) & violated(I, "shield694", Cmds) & (count(I, "shield694", Count) | (not(count(I, "shield694", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant694.
-!inspect_nuclear_plant694 : .intend(inspect_nuclear_plant694, I) & (count(I, "shield694", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield694"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant695 : true <- !inspect_nuclear_plant6951. 
+!inspect_nuclear_plant6951 : fast & .intend(inspect_nuclear_plant695, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield695_id1196_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield695", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield695", "G(add_belief(perc_rad695(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield695", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield695").
+!inspect_nuclear_plant695 : true <- !inspect_nuclear_plant6951. 
+!inspect_nuclear_plant6951 : true & .intend(inspect_nuclear_plant695, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield695_id1197_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield695", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield695", "G(add_belief(perc_rad695(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield695", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield695").
-!inspect_nuclear_plant695 : .intend(inspect_nuclear_plant695, I) & violated(I, "shield695", Cmds) & (count(I, "shield695", Count) | (not(count(I, "shield695", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant695.
-!inspect_nuclear_plant695 : .intend(inspect_nuclear_plant695, I) & (count(I, "shield695", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield695"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant696 : true <- !inspect_nuclear_plant6961. 
+!inspect_nuclear_plant6961 : fast & .intend(inspect_nuclear_plant696, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield696_id1198_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield696", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield696", "G(add_belief(perc_rad696(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield696", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield696").
+!inspect_nuclear_plant696 : true <- !inspect_nuclear_plant6961. 
+!inspect_nuclear_plant6961 : true & .intend(inspect_nuclear_plant696, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield696_id1199_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield696", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield696", "G(add_belief(perc_rad696(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield696", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield696").
-!inspect_nuclear_plant696 : .intend(inspect_nuclear_plant696, I) & violated(I, "shield696", Cmds) & (count(I, "shield696", Count) | (not(count(I, "shield696", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant696.
-!inspect_nuclear_plant696 : .intend(inspect_nuclear_plant696, I) & (count(I, "shield696", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield696"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant697 : true <- !inspect_nuclear_plant6971. 
+!inspect_nuclear_plant6971 : fast & .intend(inspect_nuclear_plant697, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield697_id1200_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield697", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield697", "G(add_belief(perc_rad697(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield697", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield697").
+!inspect_nuclear_plant697 : true <- !inspect_nuclear_plant6971. 
+!inspect_nuclear_plant6971 : true & .intend(inspect_nuclear_plant697, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield697_id1201_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield697", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield697", "G(add_belief(perc_rad697(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield697", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield697").
-!inspect_nuclear_plant697 : .intend(inspect_nuclear_plant697, I) & violated(I, "shield697", Cmds) & (count(I, "shield697", Count) | (not(count(I, "shield697", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant697.
-!inspect_nuclear_plant697 : .intend(inspect_nuclear_plant697, I) & (count(I, "shield697", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield697"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant698 : true <- !inspect_nuclear_plant6981. 
+!inspect_nuclear_plant6981 : fast & .intend(inspect_nuclear_plant698, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield698_id1202_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield698", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield698", "G(add_belief(perc_rad698(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield698", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield698").
+!inspect_nuclear_plant698 : true <- !inspect_nuclear_plant6981. 
+!inspect_nuclear_plant6981 : true & .intend(inspect_nuclear_plant698, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield698_id1203_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield698", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield698", "G(add_belief(perc_rad698(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield698", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield698").
-!inspect_nuclear_plant698 : .intend(inspect_nuclear_plant698, I) & violated(I, "shield698", Cmds) & (count(I, "shield698", Count) | (not(count(I, "shield698", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant698.
-!inspect_nuclear_plant698 : .intend(inspect_nuclear_plant698, I) & (count(I, "shield698", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield698"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant699 : true <- !inspect_nuclear_plant6991. 
+!inspect_nuclear_plant6991 : fast & .intend(inspect_nuclear_plant699, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield699_id1204_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield699", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield699", "G(add_belief(perc_rad699(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield699", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield699").
+!inspect_nuclear_plant699 : true <- !inspect_nuclear_plant6991. 
+!inspect_nuclear_plant6991 : true & .intend(inspect_nuclear_plant699, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield699_id1205_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield699", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield699", "G(add_belief(perc_rad699(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield699", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield699").
-!inspect_nuclear_plant699 : .intend(inspect_nuclear_plant699, I) & violated(I, "shield699", Cmds) & (count(I, "shield699", Count) | (not(count(I, "shield699", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant699.
-!inspect_nuclear_plant699 : .intend(inspect_nuclear_plant699, I) & (count(I, "shield699", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield699"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant700 : true <- !inspect_nuclear_plant7001. 
+!inspect_nuclear_plant7001 : fast & .intend(inspect_nuclear_plant700, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield700_id1206_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield700", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield700", "G(add_belief(perc_rad700(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield700", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield700").
+!inspect_nuclear_plant700 : true <- !inspect_nuclear_plant7001. 
+!inspect_nuclear_plant7001 : true & .intend(inspect_nuclear_plant700, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield700_id1207_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield700", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield700", "G(add_belief(perc_rad700(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield700", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield700").
-!inspect_nuclear_plant700 : .intend(inspect_nuclear_plant700, I) & violated(I, "shield700", Cmds) & (count(I, "shield700", Count) | (not(count(I, "shield700", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant700.
-!inspect_nuclear_plant700 : .intend(inspect_nuclear_plant700, I) & (count(I, "shield700", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield700"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant701 : true <- !inspect_nuclear_plant7011. 
+!inspect_nuclear_plant7011 : fast & .intend(inspect_nuclear_plant701, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield701_id1208_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield701", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield701", "G(add_belief(perc_rad701(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield701", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield701").
+!inspect_nuclear_plant701 : true <- !inspect_nuclear_plant7011. 
+!inspect_nuclear_plant7011 : true & .intend(inspect_nuclear_plant701, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield701_id1209_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield701", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield701", "G(add_belief(perc_rad701(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield701", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield701").
-!inspect_nuclear_plant701 : .intend(inspect_nuclear_plant701, I) & violated(I, "shield701", Cmds) & (count(I, "shield701", Count) | (not(count(I, "shield701", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant701.
-!inspect_nuclear_plant701 : .intend(inspect_nuclear_plant701, I) & (count(I, "shield701", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield701"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant702 : true <- !inspect_nuclear_plant7021. 
+!inspect_nuclear_plant7021 : fast & .intend(inspect_nuclear_plant702, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield702_id1210_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield702", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield702", "G(add_belief(perc_rad702(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield702", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield702").
+!inspect_nuclear_plant702 : true <- !inspect_nuclear_plant7021. 
+!inspect_nuclear_plant7021 : true & .intend(inspect_nuclear_plant702, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield702_id1211_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield702", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield702", "G(add_belief(perc_rad702(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield702", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield702").
-!inspect_nuclear_plant702 : .intend(inspect_nuclear_plant702, I) & violated(I, "shield702", Cmds) & (count(I, "shield702", Count) | (not(count(I, "shield702", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant702.
-!inspect_nuclear_plant702 : .intend(inspect_nuclear_plant702, I) & (count(I, "shield702", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield702"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant703 : true <- !inspect_nuclear_plant7031. 
+!inspect_nuclear_plant7031 : fast & .intend(inspect_nuclear_plant703, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield703_id1212_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield703", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield703", "G(add_belief(perc_rad703(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield703", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield703").
+!inspect_nuclear_plant703 : true <- !inspect_nuclear_plant7031. 
+!inspect_nuclear_plant7031 : true & .intend(inspect_nuclear_plant703, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield703_id1213_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield703", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield703", "G(add_belief(perc_rad703(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield703", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield703").
-!inspect_nuclear_plant703 : .intend(inspect_nuclear_plant703, I) & violated(I, "shield703", Cmds) & (count(I, "shield703", Count) | (not(count(I, "shield703", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant703.
-!inspect_nuclear_plant703 : .intend(inspect_nuclear_plant703, I) & (count(I, "shield703", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield703"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant704 : true <- !inspect_nuclear_plant7041. 
+!inspect_nuclear_plant7041 : fast & .intend(inspect_nuclear_plant704, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield704_id1214_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield704", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield704", "G(add_belief(perc_rad704(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield704", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield704").
+!inspect_nuclear_plant704 : true <- !inspect_nuclear_plant7041. 
+!inspect_nuclear_plant7041 : true & .intend(inspect_nuclear_plant704, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield704_id1215_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield704", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield704", "G(add_belief(perc_rad704(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield704", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield704").
-!inspect_nuclear_plant704 : .intend(inspect_nuclear_plant704, I) & violated(I, "shield704", Cmds) & (count(I, "shield704", Count) | (not(count(I, "shield704", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant704.
-!inspect_nuclear_plant704 : .intend(inspect_nuclear_plant704, I) & (count(I, "shield704", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield704"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant705 : true <- !inspect_nuclear_plant7051. 
+!inspect_nuclear_plant7051 : fast & .intend(inspect_nuclear_plant705, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield705_id1216_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield705", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield705", "G(add_belief(perc_rad705(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield705", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield705").
+!inspect_nuclear_plant705 : true <- !inspect_nuclear_plant7051. 
+!inspect_nuclear_plant7051 : true & .intend(inspect_nuclear_plant705, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield705_id1217_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield705", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield705", "G(add_belief(perc_rad705(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield705", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield705").
-!inspect_nuclear_plant705 : .intend(inspect_nuclear_plant705, I) & violated(I, "shield705", Cmds) & (count(I, "shield705", Count) | (not(count(I, "shield705", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant705.
-!inspect_nuclear_plant705 : .intend(inspect_nuclear_plant705, I) & (count(I, "shield705", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield705"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant706 : true <- !inspect_nuclear_plant7061. 
+!inspect_nuclear_plant7061 : fast & .intend(inspect_nuclear_plant706, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield706_id1218_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield706", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield706", "G(add_belief(perc_rad706(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield706", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield706").
+!inspect_nuclear_plant706 : true <- !inspect_nuclear_plant7061. 
+!inspect_nuclear_plant7061 : true & .intend(inspect_nuclear_plant706, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield706_id1219_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield706", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield706", "G(add_belief(perc_rad706(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield706", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield706").
-!inspect_nuclear_plant706 : .intend(inspect_nuclear_plant706, I) & violated(I, "shield706", Cmds) & (count(I, "shield706", Count) | (not(count(I, "shield706", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant706.
-!inspect_nuclear_plant706 : .intend(inspect_nuclear_plant706, I) & (count(I, "shield706", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield706"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant707 : true <- !inspect_nuclear_plant7071. 
+!inspect_nuclear_plant7071 : fast & .intend(inspect_nuclear_plant707, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield707_id1220_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield707", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield707", "G(add_belief(perc_rad707(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield707", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield707").
+!inspect_nuclear_plant707 : true <- !inspect_nuclear_plant7071. 
+!inspect_nuclear_plant7071 : true & .intend(inspect_nuclear_plant707, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield707_id1221_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield707", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield707", "G(add_belief(perc_rad707(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield707", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield707").
-!inspect_nuclear_plant707 : .intend(inspect_nuclear_plant707, I) & violated(I, "shield707", Cmds) & (count(I, "shield707", Count) | (not(count(I, "shield707", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant707.
-!inspect_nuclear_plant707 : .intend(inspect_nuclear_plant707, I) & (count(I, "shield707", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield707"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant708 : true <- !inspect_nuclear_plant7081. 
+!inspect_nuclear_plant7081 : fast & .intend(inspect_nuclear_plant708, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield708_id1222_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield708", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield708", "G(add_belief(perc_rad708(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield708", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield708").
+!inspect_nuclear_plant708 : true <- !inspect_nuclear_plant7081. 
+!inspect_nuclear_plant7081 : true & .intend(inspect_nuclear_plant708, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield708_id1223_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield708", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield708", "G(add_belief(perc_rad708(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield708", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield708").
-!inspect_nuclear_plant708 : .intend(inspect_nuclear_plant708, I) & violated(I, "shield708", Cmds) & (count(I, "shield708", Count) | (not(count(I, "shield708", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant708.
-!inspect_nuclear_plant708 : .intend(inspect_nuclear_plant708, I) & (count(I, "shield708", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield708"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant709 : true <- !inspect_nuclear_plant7091. 
+!inspect_nuclear_plant7091 : fast & .intend(inspect_nuclear_plant709, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield709_id1224_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield709", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield709", "G(add_belief(perc_rad709(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield709", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield709").
+!inspect_nuclear_plant709 : true <- !inspect_nuclear_plant7091. 
+!inspect_nuclear_plant7091 : true & .intend(inspect_nuclear_plant709, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield709_id1225_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield709", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield709", "G(add_belief(perc_rad709(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield709", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield709").
-!inspect_nuclear_plant709 : .intend(inspect_nuclear_plant709, I) & violated(I, "shield709", Cmds) & (count(I, "shield709", Count) | (not(count(I, "shield709", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant709.
-!inspect_nuclear_plant709 : .intend(inspect_nuclear_plant709, I) & (count(I, "shield709", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield709"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant710 : true <- !inspect_nuclear_plant7101. 
+!inspect_nuclear_plant7101 : fast & .intend(inspect_nuclear_plant710, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield710_id1226_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield710", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield710", "G(add_belief(perc_rad710(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield710", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield710").
+!inspect_nuclear_plant710 : true <- !inspect_nuclear_plant7101. 
+!inspect_nuclear_plant7101 : true & .intend(inspect_nuclear_plant710, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield710_id1227_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield710", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield710", "G(add_belief(perc_rad710(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield710", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield710").
-!inspect_nuclear_plant710 : .intend(inspect_nuclear_plant710, I) & violated(I, "shield710", Cmds) & (count(I, "shield710", Count) | (not(count(I, "shield710", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant710.
-!inspect_nuclear_plant710 : .intend(inspect_nuclear_plant710, I) & (count(I, "shield710", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield710"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant711 : true <- !inspect_nuclear_plant7111. 
+!inspect_nuclear_plant7111 : fast & .intend(inspect_nuclear_plant711, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield711_id1228_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield711", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield711", "G(add_belief(perc_rad711(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield711", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield711").
+!inspect_nuclear_plant711 : true <- !inspect_nuclear_plant7111. 
+!inspect_nuclear_plant7111 : true & .intend(inspect_nuclear_plant711, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield711_id1229_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield711", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield711", "G(add_belief(perc_rad711(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield711", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield711").
-!inspect_nuclear_plant711 : .intend(inspect_nuclear_plant711, I) & violated(I, "shield711", Cmds) & (count(I, "shield711", Count) | (not(count(I, "shield711", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant711.
-!inspect_nuclear_plant711 : .intend(inspect_nuclear_plant711, I) & (count(I, "shield711", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield711"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant712 : true <- !inspect_nuclear_plant7121. 
+!inspect_nuclear_plant7121 : fast & .intend(inspect_nuclear_plant712, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield712_id1230_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield712", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield712", "G(add_belief(perc_rad712(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield712", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield712").
+!inspect_nuclear_plant712 : true <- !inspect_nuclear_plant7121. 
+!inspect_nuclear_plant7121 : true & .intend(inspect_nuclear_plant712, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield712_id1231_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield712", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield712", "G(add_belief(perc_rad712(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield712", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield712").
-!inspect_nuclear_plant712 : .intend(inspect_nuclear_plant712, I) & violated(I, "shield712", Cmds) & (count(I, "shield712", Count) | (not(count(I, "shield712", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant712.
-!inspect_nuclear_plant712 : .intend(inspect_nuclear_plant712, I) & (count(I, "shield712", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield712"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant713 : true <- !inspect_nuclear_plant7131. 
+!inspect_nuclear_plant7131 : fast & .intend(inspect_nuclear_plant713, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield713_id1232_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield713", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield713", "G(add_belief(perc_rad713(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield713", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield713").
+!inspect_nuclear_plant713 : true <- !inspect_nuclear_plant7131. 
+!inspect_nuclear_plant7131 : true & .intend(inspect_nuclear_plant713, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield713_id1233_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield713", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield713", "G(add_belief(perc_rad713(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield713", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield713").
-!inspect_nuclear_plant713 : .intend(inspect_nuclear_plant713, I) & violated(I, "shield713", Cmds) & (count(I, "shield713", Count) | (not(count(I, "shield713", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant713.
-!inspect_nuclear_plant713 : .intend(inspect_nuclear_plant713, I) & (count(I, "shield713", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield713"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant714 : true <- !inspect_nuclear_plant7141. 
+!inspect_nuclear_plant7141 : fast & .intend(inspect_nuclear_plant714, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield714_id1234_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield714", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield714", "G(add_belief(perc_rad714(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield714", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield714").
+!inspect_nuclear_plant714 : true <- !inspect_nuclear_plant7141. 
+!inspect_nuclear_plant7141 : true & .intend(inspect_nuclear_plant714, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield714_id1235_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield714", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield714", "G(add_belief(perc_rad714(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield714", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield714").
-!inspect_nuclear_plant714 : .intend(inspect_nuclear_plant714, I) & violated(I, "shield714", Cmds) & (count(I, "shield714", Count) | (not(count(I, "shield714", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant714.
-!inspect_nuclear_plant714 : .intend(inspect_nuclear_plant714, I) & (count(I, "shield714", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield714"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant715 : true <- !inspect_nuclear_plant7151. 
+!inspect_nuclear_plant7151 : fast & .intend(inspect_nuclear_plant715, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield715_id1236_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield715", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield715", "G(add_belief(perc_rad715(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield715", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield715").
+!inspect_nuclear_plant715 : true <- !inspect_nuclear_plant7151. 
+!inspect_nuclear_plant7151 : true & .intend(inspect_nuclear_plant715, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield715_id1237_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield715", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield715", "G(add_belief(perc_rad715(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield715", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield715").
-!inspect_nuclear_plant715 : .intend(inspect_nuclear_plant715, I) & violated(I, "shield715", Cmds) & (count(I, "shield715", Count) | (not(count(I, "shield715", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant715.
-!inspect_nuclear_plant715 : .intend(inspect_nuclear_plant715, I) & (count(I, "shield715", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield715"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant716 : true <- !inspect_nuclear_plant7161. 
+!inspect_nuclear_plant7161 : fast & .intend(inspect_nuclear_plant716, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield716_id1238_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield716", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield716", "G(add_belief(perc_rad716(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield716", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield716").
+!inspect_nuclear_plant716 : true <- !inspect_nuclear_plant7161. 
+!inspect_nuclear_plant7161 : true & .intend(inspect_nuclear_plant716, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield716_id1239_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield716", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield716", "G(add_belief(perc_rad716(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield716", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield716").
-!inspect_nuclear_plant716 : .intend(inspect_nuclear_plant716, I) & violated(I, "shield716", Cmds) & (count(I, "shield716", Count) | (not(count(I, "shield716", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant716.
-!inspect_nuclear_plant716 : .intend(inspect_nuclear_plant716, I) & (count(I, "shield716", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield716"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant717 : true <- !inspect_nuclear_plant7171. 
+!inspect_nuclear_plant7171 : fast & .intend(inspect_nuclear_plant717, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield717_id1240_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield717", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield717", "G(add_belief(perc_rad717(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield717", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield717").
+!inspect_nuclear_plant717 : true <- !inspect_nuclear_plant7171. 
+!inspect_nuclear_plant7171 : true & .intend(inspect_nuclear_plant717, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield717_id1241_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield717", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield717", "G(add_belief(perc_rad717(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield717", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield717").
-!inspect_nuclear_plant717 : .intend(inspect_nuclear_plant717, I) & violated(I, "shield717", Cmds) & (count(I, "shield717", Count) | (not(count(I, "shield717", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant717.
-!inspect_nuclear_plant717 : .intend(inspect_nuclear_plant717, I) & (count(I, "shield717", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield717"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant718 : true <- !inspect_nuclear_plant7181. 
+!inspect_nuclear_plant7181 : fast & .intend(inspect_nuclear_plant718, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield718_id1242_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield718", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield718", "G(add_belief(perc_rad718(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield718", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield718").
+!inspect_nuclear_plant718 : true <- !inspect_nuclear_plant7181. 
+!inspect_nuclear_plant7181 : true & .intend(inspect_nuclear_plant718, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield718_id1243_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield718", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield718", "G(add_belief(perc_rad718(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield718", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield718").
-!inspect_nuclear_plant718 : .intend(inspect_nuclear_plant718, I) & violated(I, "shield718", Cmds) & (count(I, "shield718", Count) | (not(count(I, "shield718", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant718.
-!inspect_nuclear_plant718 : .intend(inspect_nuclear_plant718, I) & (count(I, "shield718", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield718"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant719 : true <- !inspect_nuclear_plant7191. 
+!inspect_nuclear_plant7191 : fast & .intend(inspect_nuclear_plant719, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield719_id1244_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield719", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield719", "G(add_belief(perc_rad719(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield719", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield719").
+!inspect_nuclear_plant719 : true <- !inspect_nuclear_plant7191. 
+!inspect_nuclear_plant7191 : true & .intend(inspect_nuclear_plant719, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield719_id1245_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield719", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield719", "G(add_belief(perc_rad719(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield719", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield719").
-!inspect_nuclear_plant719 : .intend(inspect_nuclear_plant719, I) & violated(I, "shield719", Cmds) & (count(I, "shield719", Count) | (not(count(I, "shield719", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant719.
-!inspect_nuclear_plant719 : .intend(inspect_nuclear_plant719, I) & (count(I, "shield719", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield719"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant720 : true <- !inspect_nuclear_plant7201. 
+!inspect_nuclear_plant7201 : fast & .intend(inspect_nuclear_plant720, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield720_id1246_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield720", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield720", "G(add_belief(perc_rad720(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield720", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield720").
+!inspect_nuclear_plant720 : true <- !inspect_nuclear_plant7201. 
+!inspect_nuclear_plant7201 : true & .intend(inspect_nuclear_plant720, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield720_id1247_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield720", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield720", "G(add_belief(perc_rad720(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield720", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield720").
-!inspect_nuclear_plant720 : .intend(inspect_nuclear_plant720, I) & violated(I, "shield720", Cmds) & (count(I, "shield720", Count) | (not(count(I, "shield720", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant720.
-!inspect_nuclear_plant720 : .intend(inspect_nuclear_plant720, I) & (count(I, "shield720", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield720"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant721 : true <- !inspect_nuclear_plant7211. 
+!inspect_nuclear_plant7211 : fast & .intend(inspect_nuclear_plant721, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield721_id1248_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield721", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield721", "G(add_belief(perc_rad721(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield721", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield721").
+!inspect_nuclear_plant721 : true <- !inspect_nuclear_plant7211. 
+!inspect_nuclear_plant7211 : true & .intend(inspect_nuclear_plant721, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield721_id1249_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield721", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield721", "G(add_belief(perc_rad721(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield721", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield721").
-!inspect_nuclear_plant721 : .intend(inspect_nuclear_plant721, I) & violated(I, "shield721", Cmds) & (count(I, "shield721", Count) | (not(count(I, "shield721", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant721.
-!inspect_nuclear_plant721 : .intend(inspect_nuclear_plant721, I) & (count(I, "shield721", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield721"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant722 : true <- !inspect_nuclear_plant7221. 
+!inspect_nuclear_plant7221 : fast & .intend(inspect_nuclear_plant722, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield722_id1250_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield722", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield722", "G(add_belief(perc_rad722(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield722", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield722").
+!inspect_nuclear_plant722 : true <- !inspect_nuclear_plant7221. 
+!inspect_nuclear_plant7221 : true & .intend(inspect_nuclear_plant722, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield722_id1251_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield722", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield722", "G(add_belief(perc_rad722(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield722", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield722").
-!inspect_nuclear_plant722 : .intend(inspect_nuclear_plant722, I) & violated(I, "shield722", Cmds) & (count(I, "shield722", Count) | (not(count(I, "shield722", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant722.
-!inspect_nuclear_plant722 : .intend(inspect_nuclear_plant722, I) & (count(I, "shield722", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield722"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant723 : true <- !inspect_nuclear_plant7231. 
+!inspect_nuclear_plant7231 : fast & .intend(inspect_nuclear_plant723, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield723_id1252_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield723", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield723", "G(add_belief(perc_rad723(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield723", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield723").
+!inspect_nuclear_plant723 : true <- !inspect_nuclear_plant7231. 
+!inspect_nuclear_plant7231 : true & .intend(inspect_nuclear_plant723, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield723_id1253_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield723", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield723", "G(add_belief(perc_rad723(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield723", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield723").
-!inspect_nuclear_plant723 : .intend(inspect_nuclear_plant723, I) & violated(I, "shield723", Cmds) & (count(I, "shield723", Count) | (not(count(I, "shield723", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant723.
-!inspect_nuclear_plant723 : .intend(inspect_nuclear_plant723, I) & (count(I, "shield723", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield723"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant724 : true <- !inspect_nuclear_plant7241. 
+!inspect_nuclear_plant7241 : fast & .intend(inspect_nuclear_plant724, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield724_id1254_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield724", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield724", "G(add_belief(perc_rad724(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield724", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield724").
+!inspect_nuclear_plant724 : true <- !inspect_nuclear_plant7241. 
+!inspect_nuclear_plant7241 : true & .intend(inspect_nuclear_plant724, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield724_id1255_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield724", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield724", "G(add_belief(perc_rad724(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield724", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield724").
-!inspect_nuclear_plant724 : .intend(inspect_nuclear_plant724, I) & violated(I, "shield724", Cmds) & (count(I, "shield724", Count) | (not(count(I, "shield724", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant724.
-!inspect_nuclear_plant724 : .intend(inspect_nuclear_plant724, I) & (count(I, "shield724", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield724"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant725 : true <- !inspect_nuclear_plant7251. 
+!inspect_nuclear_plant7251 : fast & .intend(inspect_nuclear_plant725, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield725_id1256_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield725", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield725", "G(add_belief(perc_rad725(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield725", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield725").
+!inspect_nuclear_plant725 : true <- !inspect_nuclear_plant7251. 
+!inspect_nuclear_plant7251 : true & .intend(inspect_nuclear_plant725, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield725_id1257_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield725", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield725", "G(add_belief(perc_rad725(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield725", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield725").
-!inspect_nuclear_plant725 : .intend(inspect_nuclear_plant725, I) & violated(I, "shield725", Cmds) & (count(I, "shield725", Count) | (not(count(I, "shield725", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant725.
-!inspect_nuclear_plant725 : .intend(inspect_nuclear_plant725, I) & (count(I, "shield725", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield725"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant726 : true <- !inspect_nuclear_plant7261. 
+!inspect_nuclear_plant7261 : fast & .intend(inspect_nuclear_plant726, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield726_id1258_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield726", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield726", "G(add_belief(perc_rad726(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield726", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield726").
+!inspect_nuclear_plant726 : true <- !inspect_nuclear_plant7261. 
+!inspect_nuclear_plant7261 : true & .intend(inspect_nuclear_plant726, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield726_id1259_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield726", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield726", "G(add_belief(perc_rad726(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield726", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield726").
-!inspect_nuclear_plant726 : .intend(inspect_nuclear_plant726, I) & violated(I, "shield726", Cmds) & (count(I, "shield726", Count) | (not(count(I, "shield726", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant726.
-!inspect_nuclear_plant726 : .intend(inspect_nuclear_plant726, I) & (count(I, "shield726", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield726"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant727 : true <- !inspect_nuclear_plant7271. 
+!inspect_nuclear_plant7271 : fast & .intend(inspect_nuclear_plant727, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield727_id1260_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield727", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield727", "G(add_belief(perc_rad727(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield727", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield727").
+!inspect_nuclear_plant727 : true <- !inspect_nuclear_plant7271. 
+!inspect_nuclear_plant7271 : true & .intend(inspect_nuclear_plant727, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield727_id1261_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield727", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield727", "G(add_belief(perc_rad727(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield727", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield727").
-!inspect_nuclear_plant727 : .intend(inspect_nuclear_plant727, I) & violated(I, "shield727", Cmds) & (count(I, "shield727", Count) | (not(count(I, "shield727", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant727.
-!inspect_nuclear_plant727 : .intend(inspect_nuclear_plant727, I) & (count(I, "shield727", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield727"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant728 : true <- !inspect_nuclear_plant7281. 
+!inspect_nuclear_plant7281 : fast & .intend(inspect_nuclear_plant728, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield728_id1262_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield728", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield728", "G(add_belief(perc_rad728(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield728", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield728").
+!inspect_nuclear_plant728 : true <- !inspect_nuclear_plant7281. 
+!inspect_nuclear_plant7281 : true & .intend(inspect_nuclear_plant728, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield728_id1263_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield728", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield728", "G(add_belief(perc_rad728(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield728", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield728").
-!inspect_nuclear_plant728 : .intend(inspect_nuclear_plant728, I) & violated(I, "shield728", Cmds) & (count(I, "shield728", Count) | (not(count(I, "shield728", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant728.
-!inspect_nuclear_plant728 : .intend(inspect_nuclear_plant728, I) & (count(I, "shield728", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield728"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant729 : true <- !inspect_nuclear_plant7291. 
+!inspect_nuclear_plant7291 : fast & .intend(inspect_nuclear_plant729, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield729_id1264_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield729", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield729", "G(add_belief(perc_rad729(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield729", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield729").
+!inspect_nuclear_plant729 : true <- !inspect_nuclear_plant7291. 
+!inspect_nuclear_plant7291 : true & .intend(inspect_nuclear_plant729, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield729_id1265_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield729", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield729", "G(add_belief(perc_rad729(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield729", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield729").
-!inspect_nuclear_plant729 : .intend(inspect_nuclear_plant729, I) & violated(I, "shield729", Cmds) & (count(I, "shield729", Count) | (not(count(I, "shield729", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant729.
-!inspect_nuclear_plant729 : .intend(inspect_nuclear_plant729, I) & (count(I, "shield729", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield729"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant730 : true <- !inspect_nuclear_plant7301. 
+!inspect_nuclear_plant7301 : fast & .intend(inspect_nuclear_plant730, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield730_id1266_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield730", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield730", "G(add_belief(perc_rad730(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield730", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield730").
+!inspect_nuclear_plant730 : true <- !inspect_nuclear_plant7301. 
+!inspect_nuclear_plant7301 : true & .intend(inspect_nuclear_plant730, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield730_id1267_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield730", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield730", "G(add_belief(perc_rad730(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield730", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield730").
-!inspect_nuclear_plant730 : .intend(inspect_nuclear_plant730, I) & violated(I, "shield730", Cmds) & (count(I, "shield730", Count) | (not(count(I, "shield730", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant730.
-!inspect_nuclear_plant730 : .intend(inspect_nuclear_plant730, I) & (count(I, "shield730", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield730"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant731 : true <- !inspect_nuclear_plant7311. 
+!inspect_nuclear_plant7311 : fast & .intend(inspect_nuclear_plant731, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield731_id1268_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield731", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield731", "G(add_belief(perc_rad731(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield731", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield731").
+!inspect_nuclear_plant731 : true <- !inspect_nuclear_plant7311. 
+!inspect_nuclear_plant7311 : true & .intend(inspect_nuclear_plant731, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield731_id1269_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield731", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield731", "G(add_belief(perc_rad731(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield731", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield731").
-!inspect_nuclear_plant731 : .intend(inspect_nuclear_plant731, I) & violated(I, "shield731", Cmds) & (count(I, "shield731", Count) | (not(count(I, "shield731", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant731.
-!inspect_nuclear_plant731 : .intend(inspect_nuclear_plant731, I) & (count(I, "shield731", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield731"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant732 : true <- !inspect_nuclear_plant7321. 
+!inspect_nuclear_plant7321 : fast & .intend(inspect_nuclear_plant732, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield732_id1270_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield732", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield732", "G(add_belief(perc_rad732(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield732", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield732").
+!inspect_nuclear_plant732 : true <- !inspect_nuclear_plant7321. 
+!inspect_nuclear_plant7321 : true & .intend(inspect_nuclear_plant732, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield732_id1271_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield732", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield732", "G(add_belief(perc_rad732(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield732", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield732").
-!inspect_nuclear_plant732 : .intend(inspect_nuclear_plant732, I) & violated(I, "shield732", Cmds) & (count(I, "shield732", Count) | (not(count(I, "shield732", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant732.
-!inspect_nuclear_plant732 : .intend(inspect_nuclear_plant732, I) & (count(I, "shield732", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield732"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant733 : true <- !inspect_nuclear_plant7331. 
+!inspect_nuclear_plant7331 : fast & .intend(inspect_nuclear_plant733, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield733_id1272_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield733", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield733", "G(add_belief(perc_rad733(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield733", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield733").
+!inspect_nuclear_plant733 : true <- !inspect_nuclear_plant7331. 
+!inspect_nuclear_plant7331 : true & .intend(inspect_nuclear_plant733, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield733_id1273_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield733", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield733", "G(add_belief(perc_rad733(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield733", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield733").
-!inspect_nuclear_plant733 : .intend(inspect_nuclear_plant733, I) & violated(I, "shield733", Cmds) & (count(I, "shield733", Count) | (not(count(I, "shield733", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant733.
-!inspect_nuclear_plant733 : .intend(inspect_nuclear_plant733, I) & (count(I, "shield733", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield733"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant734 : true <- !inspect_nuclear_plant7341. 
+!inspect_nuclear_plant7341 : fast & .intend(inspect_nuclear_plant734, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield734_id1274_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield734", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield734", "G(add_belief(perc_rad734(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield734", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield734").
+!inspect_nuclear_plant734 : true <- !inspect_nuclear_plant7341. 
+!inspect_nuclear_plant7341 : true & .intend(inspect_nuclear_plant734, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield734_id1275_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield734", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield734", "G(add_belief(perc_rad734(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield734", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield734").
-!inspect_nuclear_plant734 : .intend(inspect_nuclear_plant734, I) & violated(I, "shield734", Cmds) & (count(I, "shield734", Count) | (not(count(I, "shield734", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant734.
-!inspect_nuclear_plant734 : .intend(inspect_nuclear_plant734, I) & (count(I, "shield734", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield734"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant735 : true <- !inspect_nuclear_plant7351. 
+!inspect_nuclear_plant7351 : fast & .intend(inspect_nuclear_plant735, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield735_id1276_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield735", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield735", "G(add_belief(perc_rad735(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield735", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield735").
+!inspect_nuclear_plant735 : true <- !inspect_nuclear_plant7351. 
+!inspect_nuclear_plant7351 : true & .intend(inspect_nuclear_plant735, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield735_id1277_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield735", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield735", "G(add_belief(perc_rad735(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield735", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield735").
-!inspect_nuclear_plant735 : .intend(inspect_nuclear_plant735, I) & violated(I, "shield735", Cmds) & (count(I, "shield735", Count) | (not(count(I, "shield735", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant735.
-!inspect_nuclear_plant735 : .intend(inspect_nuclear_plant735, I) & (count(I, "shield735", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield735"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant736 : true <- !inspect_nuclear_plant7361. 
+!inspect_nuclear_plant7361 : fast & .intend(inspect_nuclear_plant736, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield736_id1278_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield736", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield736", "G(add_belief(perc_rad736(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield736", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield736").
+!inspect_nuclear_plant736 : true <- !inspect_nuclear_plant7361. 
+!inspect_nuclear_plant7361 : true & .intend(inspect_nuclear_plant736, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield736_id1279_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield736", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield736", "G(add_belief(perc_rad736(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield736", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield736").
-!inspect_nuclear_plant736 : .intend(inspect_nuclear_plant736, I) & violated(I, "shield736", Cmds) & (count(I, "shield736", Count) | (not(count(I, "shield736", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant736.
-!inspect_nuclear_plant736 : .intend(inspect_nuclear_plant736, I) & (count(I, "shield736", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield736"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant737 : true <- !inspect_nuclear_plant7371. 
+!inspect_nuclear_plant7371 : fast & .intend(inspect_nuclear_plant737, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield737_id1280_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield737", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield737", "G(add_belief(perc_rad737(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield737", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield737").
+!inspect_nuclear_plant737 : true <- !inspect_nuclear_plant7371. 
+!inspect_nuclear_plant7371 : true & .intend(inspect_nuclear_plant737, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield737_id1281_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield737", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield737", "G(add_belief(perc_rad737(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield737", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield737").
-!inspect_nuclear_plant737 : .intend(inspect_nuclear_plant737, I) & violated(I, "shield737", Cmds) & (count(I, "shield737", Count) | (not(count(I, "shield737", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant737.
-!inspect_nuclear_plant737 : .intend(inspect_nuclear_plant737, I) & (count(I, "shield737", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield737"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant738 : true <- !inspect_nuclear_plant7381. 
+!inspect_nuclear_plant7381 : fast & .intend(inspect_nuclear_plant738, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield738_id1282_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield738", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield738", "G(add_belief(perc_rad738(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield738", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield738").
+!inspect_nuclear_plant738 : true <- !inspect_nuclear_plant7381. 
+!inspect_nuclear_plant7381 : true & .intend(inspect_nuclear_plant738, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield738_id1283_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield738", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield738", "G(add_belief(perc_rad738(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield738", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield738").
-!inspect_nuclear_plant738 : .intend(inspect_nuclear_plant738, I) & violated(I, "shield738", Cmds) & (count(I, "shield738", Count) | (not(count(I, "shield738", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant738.
-!inspect_nuclear_plant738 : .intend(inspect_nuclear_plant738, I) & (count(I, "shield738", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield738"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant739 : true <- !inspect_nuclear_plant7391. 
+!inspect_nuclear_plant7391 : fast & .intend(inspect_nuclear_plant739, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield739_id1284_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield739", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield739", "G(add_belief(perc_rad739(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield739", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield739").
+!inspect_nuclear_plant739 : true <- !inspect_nuclear_plant7391. 
+!inspect_nuclear_plant7391 : true & .intend(inspect_nuclear_plant739, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield739_id1285_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield739", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield739", "G(add_belief(perc_rad739(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield739", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield739").
-!inspect_nuclear_plant739 : .intend(inspect_nuclear_plant739, I) & violated(I, "shield739", Cmds) & (count(I, "shield739", Count) | (not(count(I, "shield739", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant739.
-!inspect_nuclear_plant739 : .intend(inspect_nuclear_plant739, I) & (count(I, "shield739", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield739"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant740 : true <- !inspect_nuclear_plant7401. 
+!inspect_nuclear_plant7401 : fast & .intend(inspect_nuclear_plant740, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield740_id1286_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield740", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield740", "G(add_belief(perc_rad740(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield740", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield740").
+!inspect_nuclear_plant740 : true <- !inspect_nuclear_plant7401. 
+!inspect_nuclear_plant7401 : true & .intend(inspect_nuclear_plant740, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield740_id1287_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield740", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield740", "G(add_belief(perc_rad740(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield740", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield740").
-!inspect_nuclear_plant740 : .intend(inspect_nuclear_plant740, I) & violated(I, "shield740", Cmds) & (count(I, "shield740", Count) | (not(count(I, "shield740", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant740.
-!inspect_nuclear_plant740 : .intend(inspect_nuclear_plant740, I) & (count(I, "shield740", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield740"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant741 : true <- !inspect_nuclear_plant7411. 
+!inspect_nuclear_plant7411 : fast & .intend(inspect_nuclear_plant741, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield741_id1288_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield741", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield741", "G(add_belief(perc_rad741(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield741", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield741").
+!inspect_nuclear_plant741 : true <- !inspect_nuclear_plant7411. 
+!inspect_nuclear_plant7411 : true & .intend(inspect_nuclear_plant741, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield741_id1289_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield741", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield741", "G(add_belief(perc_rad741(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield741", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield741").
-!inspect_nuclear_plant741 : .intend(inspect_nuclear_plant741, I) & violated(I, "shield741", Cmds) & (count(I, "shield741", Count) | (not(count(I, "shield741", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant741.
-!inspect_nuclear_plant741 : .intend(inspect_nuclear_plant741, I) & (count(I, "shield741", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield741"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant742 : true <- !inspect_nuclear_plant7421. 
+!inspect_nuclear_plant7421 : fast & .intend(inspect_nuclear_plant742, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield742_id1290_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield742", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield742", "G(add_belief(perc_rad742(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield742", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield742").
+!inspect_nuclear_plant742 : true <- !inspect_nuclear_plant7421. 
+!inspect_nuclear_plant7421 : true & .intend(inspect_nuclear_plant742, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield742_id1291_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield742", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield742", "G(add_belief(perc_rad742(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield742", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield742").
-!inspect_nuclear_plant742 : .intend(inspect_nuclear_plant742, I) & violated(I, "shield742", Cmds) & (count(I, "shield742", Count) | (not(count(I, "shield742", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant742.
-!inspect_nuclear_plant742 : .intend(inspect_nuclear_plant742, I) & (count(I, "shield742", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield742"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant743 : true <- !inspect_nuclear_plant7431. 
+!inspect_nuclear_plant7431 : fast & .intend(inspect_nuclear_plant743, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield743_id1292_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield743", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield743", "G(add_belief(perc_rad743(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield743", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield743").
+!inspect_nuclear_plant743 : true <- !inspect_nuclear_plant7431. 
+!inspect_nuclear_plant7431 : true & .intend(inspect_nuclear_plant743, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield743_id1293_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield743", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield743", "G(add_belief(perc_rad743(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield743", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield743").
-!inspect_nuclear_plant743 : .intend(inspect_nuclear_plant743, I) & violated(I, "shield743", Cmds) & (count(I, "shield743", Count) | (not(count(I, "shield743", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant743.
-!inspect_nuclear_plant743 : .intend(inspect_nuclear_plant743, I) & (count(I, "shield743", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield743"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant744 : true <- !inspect_nuclear_plant7441. 
+!inspect_nuclear_plant7441 : fast & .intend(inspect_nuclear_plant744, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield744_id1294_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield744", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield744", "G(add_belief(perc_rad744(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield744", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield744").
+!inspect_nuclear_plant744 : true <- !inspect_nuclear_plant7441. 
+!inspect_nuclear_plant7441 : true & .intend(inspect_nuclear_plant744, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield744_id1295_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield744", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield744", "G(add_belief(perc_rad744(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield744", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield744").
-!inspect_nuclear_plant744 : .intend(inspect_nuclear_plant744, I) & violated(I, "shield744", Cmds) & (count(I, "shield744", Count) | (not(count(I, "shield744", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant744.
-!inspect_nuclear_plant744 : .intend(inspect_nuclear_plant744, I) & (count(I, "shield744", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield744"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant745 : true <- !inspect_nuclear_plant7451. 
+!inspect_nuclear_plant7451 : fast & .intend(inspect_nuclear_plant745, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield745_id1296_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield745", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield745", "G(add_belief(perc_rad745(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield745", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield745").
+!inspect_nuclear_plant745 : true <- !inspect_nuclear_plant7451. 
+!inspect_nuclear_plant7451 : true & .intend(inspect_nuclear_plant745, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield745_id1297_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield745", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield745", "G(add_belief(perc_rad745(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield745", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield745").
-!inspect_nuclear_plant745 : .intend(inspect_nuclear_plant745, I) & violated(I, "shield745", Cmds) & (count(I, "shield745", Count) | (not(count(I, "shield745", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant745.
-!inspect_nuclear_plant745 : .intend(inspect_nuclear_plant745, I) & (count(I, "shield745", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield745"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant746 : true <- !inspect_nuclear_plant7461. 
+!inspect_nuclear_plant7461 : fast & .intend(inspect_nuclear_plant746, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield746_id1298_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield746", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield746", "G(add_belief(perc_rad746(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield746", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield746").
+!inspect_nuclear_plant746 : true <- !inspect_nuclear_plant7461. 
+!inspect_nuclear_plant7461 : true & .intend(inspect_nuclear_plant746, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield746_id1299_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield746", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield746", "G(add_belief(perc_rad746(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield746", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield746").
-!inspect_nuclear_plant746 : .intend(inspect_nuclear_plant746, I) & violated(I, "shield746", Cmds) & (count(I, "shield746", Count) | (not(count(I, "shield746", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant746.
-!inspect_nuclear_plant746 : .intend(inspect_nuclear_plant746, I) & (count(I, "shield746", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield746"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant747 : true <- !inspect_nuclear_plant7471. 
+!inspect_nuclear_plant7471 : fast & .intend(inspect_nuclear_plant747, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield747_id1300_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield747", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield747", "G(add_belief(perc_rad747(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield747", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield747").
+!inspect_nuclear_plant747 : true <- !inspect_nuclear_plant7471. 
+!inspect_nuclear_plant7471 : true & .intend(inspect_nuclear_plant747, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield747_id1301_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield747", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield747", "G(add_belief(perc_rad747(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield747", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield747").
-!inspect_nuclear_plant747 : .intend(inspect_nuclear_plant747, I) & violated(I, "shield747", Cmds) & (count(I, "shield747", Count) | (not(count(I, "shield747", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant747.
-!inspect_nuclear_plant747 : .intend(inspect_nuclear_plant747, I) & (count(I, "shield747", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield747"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant748 : true <- !inspect_nuclear_plant7481. 
+!inspect_nuclear_plant7481 : fast & .intend(inspect_nuclear_plant748, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield748_id1302_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield748", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield748", "G(add_belief(perc_rad748(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield748", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield748").
+!inspect_nuclear_plant748 : true <- !inspect_nuclear_plant7481. 
+!inspect_nuclear_plant7481 : true & .intend(inspect_nuclear_plant748, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield748_id1303_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield748", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield748", "G(add_belief(perc_rad748(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield748", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield748").
-!inspect_nuclear_plant748 : .intend(inspect_nuclear_plant748, I) & violated(I, "shield748", Cmds) & (count(I, "shield748", Count) | (not(count(I, "shield748", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant748.
-!inspect_nuclear_plant748 : .intend(inspect_nuclear_plant748, I) & (count(I, "shield748", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield748"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant749 : true <- !inspect_nuclear_plant7491. 
+!inspect_nuclear_plant7491 : fast & .intend(inspect_nuclear_plant749, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield749_id1304_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield749", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield749", "G(add_belief(perc_rad749(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield749", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield749").
+!inspect_nuclear_plant749 : true <- !inspect_nuclear_plant7491. 
+!inspect_nuclear_plant7491 : true & .intend(inspect_nuclear_plant749, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield749_id1305_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield749", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield749", "G(add_belief(perc_rad749(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield749", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield749").
-!inspect_nuclear_plant749 : .intend(inspect_nuclear_plant749, I) & violated(I, "shield749", Cmds) & (count(I, "shield749", Count) | (not(count(I, "shield749", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant749.
-!inspect_nuclear_plant749 : .intend(inspect_nuclear_plant749, I) & (count(I, "shield749", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield749"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant750 : true <- !inspect_nuclear_plant7501. 
+!inspect_nuclear_plant7501 : fast & .intend(inspect_nuclear_plant750, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield750_id1306_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield750", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield750", "G(add_belief(perc_rad750(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield750", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield750").
+!inspect_nuclear_plant750 : true <- !inspect_nuclear_plant7501. 
+!inspect_nuclear_plant7501 : true & .intend(inspect_nuclear_plant750, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield750_id1307_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield750", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield750", "G(add_belief(perc_rad750(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield750", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield750").
-!inspect_nuclear_plant750 : .intend(inspect_nuclear_plant750, I) & violated(I, "shield750", Cmds) & (count(I, "shield750", Count) | (not(count(I, "shield750", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant750.
-!inspect_nuclear_plant750 : .intend(inspect_nuclear_plant750, I) & (count(I, "shield750", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield750"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant751 : true <- !inspect_nuclear_plant7511. 
+!inspect_nuclear_plant7511 : fast & .intend(inspect_nuclear_plant751, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield751_id1308_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield751", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield751", "G(add_belief(perc_rad751(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield751", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield751").
+!inspect_nuclear_plant751 : true <- !inspect_nuclear_plant7511. 
+!inspect_nuclear_plant7511 : true & .intend(inspect_nuclear_plant751, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield751_id1309_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield751", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield751", "G(add_belief(perc_rad751(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield751", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield751").
-!inspect_nuclear_plant751 : .intend(inspect_nuclear_plant751, I) & violated(I, "shield751", Cmds) & (count(I, "shield751", Count) | (not(count(I, "shield751", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant751.
-!inspect_nuclear_plant751 : .intend(inspect_nuclear_plant751, I) & (count(I, "shield751", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield751"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant752 : true <- !inspect_nuclear_plant7521. 
+!inspect_nuclear_plant7521 : fast & .intend(inspect_nuclear_plant752, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield752_id1310_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield752", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield752", "G(add_belief(perc_rad752(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield752", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield752").
+!inspect_nuclear_plant752 : true <- !inspect_nuclear_plant7521. 
+!inspect_nuclear_plant7521 : true & .intend(inspect_nuclear_plant752, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield752_id1311_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield752", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield752", "G(add_belief(perc_rad752(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield752", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield752").
-!inspect_nuclear_plant752 : .intend(inspect_nuclear_plant752, I) & violated(I, "shield752", Cmds) & (count(I, "shield752", Count) | (not(count(I, "shield752", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant752.
-!inspect_nuclear_plant752 : .intend(inspect_nuclear_plant752, I) & (count(I, "shield752", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield752"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant753 : true <- !inspect_nuclear_plant7531. 
+!inspect_nuclear_plant7531 : fast & .intend(inspect_nuclear_plant753, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield753_id1312_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield753", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield753", "G(add_belief(perc_rad753(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield753", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield753").
+!inspect_nuclear_plant753 : true <- !inspect_nuclear_plant7531. 
+!inspect_nuclear_plant7531 : true & .intend(inspect_nuclear_plant753, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield753_id1313_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield753", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield753", "G(add_belief(perc_rad753(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield753", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield753").
-!inspect_nuclear_plant753 : .intend(inspect_nuclear_plant753, I) & violated(I, "shield753", Cmds) & (count(I, "shield753", Count) | (not(count(I, "shield753", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant753.
-!inspect_nuclear_plant753 : .intend(inspect_nuclear_plant753, I) & (count(I, "shield753", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield753"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant754 : true <- !inspect_nuclear_plant7541. 
+!inspect_nuclear_plant7541 : fast & .intend(inspect_nuclear_plant754, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield754_id1314_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield754", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield754", "G(add_belief(perc_rad754(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield754", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield754").
+!inspect_nuclear_plant754 : true <- !inspect_nuclear_plant7541. 
+!inspect_nuclear_plant7541 : true & .intend(inspect_nuclear_plant754, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield754_id1315_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield754", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield754", "G(add_belief(perc_rad754(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield754", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield754").
-!inspect_nuclear_plant754 : .intend(inspect_nuclear_plant754, I) & violated(I, "shield754", Cmds) & (count(I, "shield754", Count) | (not(count(I, "shield754", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant754.
-!inspect_nuclear_plant754 : .intend(inspect_nuclear_plant754, I) & (count(I, "shield754", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield754"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant755 : true <- !inspect_nuclear_plant7551. 
+!inspect_nuclear_plant7551 : fast & .intend(inspect_nuclear_plant755, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield755_id1316_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield755", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield755", "G(add_belief(perc_rad755(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield755", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield755").
+!inspect_nuclear_plant755 : true <- !inspect_nuclear_plant7551. 
+!inspect_nuclear_plant7551 : true & .intend(inspect_nuclear_plant755, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield755_id1317_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield755", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield755", "G(add_belief(perc_rad755(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield755", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield755").
-!inspect_nuclear_plant755 : .intend(inspect_nuclear_plant755, I) & violated(I, "shield755", Cmds) & (count(I, "shield755", Count) | (not(count(I, "shield755", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant755.
-!inspect_nuclear_plant755 : .intend(inspect_nuclear_plant755, I) & (count(I, "shield755", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield755"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant756 : true <- !inspect_nuclear_plant7561. 
+!inspect_nuclear_plant7561 : fast & .intend(inspect_nuclear_plant756, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield756_id1318_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield756", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield756", "G(add_belief(perc_rad756(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield756", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield756").
+!inspect_nuclear_plant756 : true <- !inspect_nuclear_plant7561. 
+!inspect_nuclear_plant7561 : true & .intend(inspect_nuclear_plant756, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield756_id1319_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield756", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield756", "G(add_belief(perc_rad756(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield756", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield756").
-!inspect_nuclear_plant756 : .intend(inspect_nuclear_plant756, I) & violated(I, "shield756", Cmds) & (count(I, "shield756", Count) | (not(count(I, "shield756", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant756.
-!inspect_nuclear_plant756 : .intend(inspect_nuclear_plant756, I) & (count(I, "shield756", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield756"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant757 : true <- !inspect_nuclear_plant7571. 
+!inspect_nuclear_plant7571 : fast & .intend(inspect_nuclear_plant757, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield757_id1320_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield757", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield757", "G(add_belief(perc_rad757(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield757", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield757").
+!inspect_nuclear_plant757 : true <- !inspect_nuclear_plant7571. 
+!inspect_nuclear_plant7571 : true & .intend(inspect_nuclear_plant757, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield757_id1321_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield757", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield757", "G(add_belief(perc_rad757(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield757", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield757").
-!inspect_nuclear_plant757 : .intend(inspect_nuclear_plant757, I) & violated(I, "shield757", Cmds) & (count(I, "shield757", Count) | (not(count(I, "shield757", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant757.
-!inspect_nuclear_plant757 : .intend(inspect_nuclear_plant757, I) & (count(I, "shield757", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield757"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant758 : true <- !inspect_nuclear_plant7581. 
+!inspect_nuclear_plant7581 : fast & .intend(inspect_nuclear_plant758, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield758_id1322_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield758", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield758", "G(add_belief(perc_rad758(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield758", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield758").
+!inspect_nuclear_plant758 : true <- !inspect_nuclear_plant7581. 
+!inspect_nuclear_plant7581 : true & .intend(inspect_nuclear_plant758, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield758_id1323_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield758", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield758", "G(add_belief(perc_rad758(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield758", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield758").
-!inspect_nuclear_plant758 : .intend(inspect_nuclear_plant758, I) & violated(I, "shield758", Cmds) & (count(I, "shield758", Count) | (not(count(I, "shield758", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant758.
-!inspect_nuclear_plant758 : .intend(inspect_nuclear_plant758, I) & (count(I, "shield758", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield758"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant759 : true <- !inspect_nuclear_plant7591. 
+!inspect_nuclear_plant7591 : fast & .intend(inspect_nuclear_plant759, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield759_id1324_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield759", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield759", "G(add_belief(perc_rad759(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield759", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield759").
+!inspect_nuclear_plant759 : true <- !inspect_nuclear_plant7591. 
+!inspect_nuclear_plant7591 : true & .intend(inspect_nuclear_plant759, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield759_id1325_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield759", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield759", "G(add_belief(perc_rad759(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield759", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield759").
-!inspect_nuclear_plant759 : .intend(inspect_nuclear_plant759, I) & violated(I, "shield759", Cmds) & (count(I, "shield759", Count) | (not(count(I, "shield759", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant759.
-!inspect_nuclear_plant759 : .intend(inspect_nuclear_plant759, I) & (count(I, "shield759", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield759"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant760 : true <- !inspect_nuclear_plant7601. 
+!inspect_nuclear_plant7601 : fast & .intend(inspect_nuclear_plant760, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield760_id1326_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield760", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield760", "G(add_belief(perc_rad760(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield760", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield760").
+!inspect_nuclear_plant760 : true <- !inspect_nuclear_plant7601. 
+!inspect_nuclear_plant7601 : true & .intend(inspect_nuclear_plant760, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield760_id1327_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield760", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield760", "G(add_belief(perc_rad760(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield760", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield760").
-!inspect_nuclear_plant760 : .intend(inspect_nuclear_plant760, I) & violated(I, "shield760", Cmds) & (count(I, "shield760", Count) | (not(count(I, "shield760", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant760.
-!inspect_nuclear_plant760 : .intend(inspect_nuclear_plant760, I) & (count(I, "shield760", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield760"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant761 : true <- !inspect_nuclear_plant7611. 
+!inspect_nuclear_plant7611 : fast & .intend(inspect_nuclear_plant761, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield761_id1328_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield761", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield761", "G(add_belief(perc_rad761(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield761", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield761").
+!inspect_nuclear_plant761 : true <- !inspect_nuclear_plant7611. 
+!inspect_nuclear_plant7611 : true & .intend(inspect_nuclear_plant761, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield761_id1329_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield761", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield761", "G(add_belief(perc_rad761(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield761", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield761").
-!inspect_nuclear_plant761 : .intend(inspect_nuclear_plant761, I) & violated(I, "shield761", Cmds) & (count(I, "shield761", Count) | (not(count(I, "shield761", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant761.
-!inspect_nuclear_plant761 : .intend(inspect_nuclear_plant761, I) & (count(I, "shield761", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield761"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant762 : true <- !inspect_nuclear_plant7621. 
+!inspect_nuclear_plant7621 : fast & .intend(inspect_nuclear_plant762, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield762_id1330_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield762", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield762", "G(add_belief(perc_rad762(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield762", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield762").
+!inspect_nuclear_plant762 : true <- !inspect_nuclear_plant7621. 
+!inspect_nuclear_plant7621 : true & .intend(inspect_nuclear_plant762, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield762_id1331_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield762", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield762", "G(add_belief(perc_rad762(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield762", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield762").
-!inspect_nuclear_plant762 : .intend(inspect_nuclear_plant762, I) & violated(I, "shield762", Cmds) & (count(I, "shield762", Count) | (not(count(I, "shield762", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant762.
-!inspect_nuclear_plant762 : .intend(inspect_nuclear_plant762, I) & (count(I, "shield762", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield762"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant763 : true <- !inspect_nuclear_plant7631. 
+!inspect_nuclear_plant7631 : fast & .intend(inspect_nuclear_plant763, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield763_id1332_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield763", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield763", "G(add_belief(perc_rad763(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield763", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield763").
+!inspect_nuclear_plant763 : true <- !inspect_nuclear_plant7631. 
+!inspect_nuclear_plant7631 : true & .intend(inspect_nuclear_plant763, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield763_id1333_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield763", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield763", "G(add_belief(perc_rad763(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield763", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield763").
-!inspect_nuclear_plant763 : .intend(inspect_nuclear_plant763, I) & violated(I, "shield763", Cmds) & (count(I, "shield763", Count) | (not(count(I, "shield763", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant763.
-!inspect_nuclear_plant763 : .intend(inspect_nuclear_plant763, I) & (count(I, "shield763", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield763"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant764 : true <- !inspect_nuclear_plant7641. 
+!inspect_nuclear_plant7641 : fast & .intend(inspect_nuclear_plant764, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield764_id1334_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield764", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield764", "G(add_belief(perc_rad764(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield764", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield764").
+!inspect_nuclear_plant764 : true <- !inspect_nuclear_plant7641. 
+!inspect_nuclear_plant7641 : true & .intend(inspect_nuclear_plant764, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield764_id1335_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield764", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield764", "G(add_belief(perc_rad764(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield764", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield764").
-!inspect_nuclear_plant764 : .intend(inspect_nuclear_plant764, I) & violated(I, "shield764", Cmds) & (count(I, "shield764", Count) | (not(count(I, "shield764", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant764.
-!inspect_nuclear_plant764 : .intend(inspect_nuclear_plant764, I) & (count(I, "shield764", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield764"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant765 : true <- !inspect_nuclear_plant7651. 
+!inspect_nuclear_plant7651 : fast & .intend(inspect_nuclear_plant765, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield765_id1336_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield765", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield765", "G(add_belief(perc_rad765(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield765", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield765").
+!inspect_nuclear_plant765 : true <- !inspect_nuclear_plant7651. 
+!inspect_nuclear_plant7651 : true & .intend(inspect_nuclear_plant765, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield765_id1337_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield765", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield765", "G(add_belief(perc_rad765(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield765", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield765").
-!inspect_nuclear_plant765 : .intend(inspect_nuclear_plant765, I) & violated(I, "shield765", Cmds) & (count(I, "shield765", Count) | (not(count(I, "shield765", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant765.
-!inspect_nuclear_plant765 : .intend(inspect_nuclear_plant765, I) & (count(I, "shield765", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield765"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant766 : true <- !inspect_nuclear_plant7661. 
+!inspect_nuclear_plant7661 : fast & .intend(inspect_nuclear_plant766, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield766_id1338_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield766", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield766", "G(add_belief(perc_rad766(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield766", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield766").
+!inspect_nuclear_plant766 : true <- !inspect_nuclear_plant7661. 
+!inspect_nuclear_plant7661 : true & .intend(inspect_nuclear_plant766, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield766_id1339_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield766", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield766", "G(add_belief(perc_rad766(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield766", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield766").
-!inspect_nuclear_plant766 : .intend(inspect_nuclear_plant766, I) & violated(I, "shield766", Cmds) & (count(I, "shield766", Count) | (not(count(I, "shield766", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant766.
-!inspect_nuclear_plant766 : .intend(inspect_nuclear_plant766, I) & (count(I, "shield766", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield766"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant767 : true <- !inspect_nuclear_plant7671. 
+!inspect_nuclear_plant7671 : fast & .intend(inspect_nuclear_plant767, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield767_id1340_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield767", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield767", "G(add_belief(perc_rad767(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield767", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield767").
+!inspect_nuclear_plant767 : true <- !inspect_nuclear_plant7671. 
+!inspect_nuclear_plant7671 : true & .intend(inspect_nuclear_plant767, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield767_id1341_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield767", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield767", "G(add_belief(perc_rad767(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield767", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield767").
-!inspect_nuclear_plant767 : .intend(inspect_nuclear_plant767, I) & violated(I, "shield767", Cmds) & (count(I, "shield767", Count) | (not(count(I, "shield767", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant767.
-!inspect_nuclear_plant767 : .intend(inspect_nuclear_plant767, I) & (count(I, "shield767", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield767"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant768 : true <- !inspect_nuclear_plant7681. 
+!inspect_nuclear_plant7681 : fast & .intend(inspect_nuclear_plant768, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield768_id1342_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield768", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield768", "G(add_belief(perc_rad768(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield768", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield768").
+!inspect_nuclear_plant768 : true <- !inspect_nuclear_plant7681. 
+!inspect_nuclear_plant7681 : true & .intend(inspect_nuclear_plant768, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield768_id1343_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield768", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield768", "G(add_belief(perc_rad768(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield768", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield768").
-!inspect_nuclear_plant768 : .intend(inspect_nuclear_plant768, I) & violated(I, "shield768", Cmds) & (count(I, "shield768", Count) | (not(count(I, "shield768", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant768.
-!inspect_nuclear_plant768 : .intend(inspect_nuclear_plant768, I) & (count(I, "shield768", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield768"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant769 : true <- !inspect_nuclear_plant7691. 
+!inspect_nuclear_plant7691 : fast & .intend(inspect_nuclear_plant769, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield769_id1344_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield769", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield769", "G(add_belief(perc_rad769(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield769", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield769").
+!inspect_nuclear_plant769 : true <- !inspect_nuclear_plant7691. 
+!inspect_nuclear_plant7691 : true & .intend(inspect_nuclear_plant769, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield769_id1345_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield769", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield769", "G(add_belief(perc_rad769(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield769", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield769").
-!inspect_nuclear_plant769 : .intend(inspect_nuclear_plant769, I) & violated(I, "shield769", Cmds) & (count(I, "shield769", Count) | (not(count(I, "shield769", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant769.
-!inspect_nuclear_plant769 : .intend(inspect_nuclear_plant769, I) & (count(I, "shield769", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield769"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant770 : true <- !inspect_nuclear_plant7701. 
+!inspect_nuclear_plant7701 : fast & .intend(inspect_nuclear_plant770, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield770_id1346_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield770", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield770", "G(add_belief(perc_rad770(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield770", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield770").
+!inspect_nuclear_plant770 : true <- !inspect_nuclear_plant7701. 
+!inspect_nuclear_plant7701 : true & .intend(inspect_nuclear_plant770, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield770_id1347_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield770", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield770", "G(add_belief(perc_rad770(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield770", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield770").
-!inspect_nuclear_plant770 : .intend(inspect_nuclear_plant770, I) & violated(I, "shield770", Cmds) & (count(I, "shield770", Count) | (not(count(I, "shield770", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant770.
-!inspect_nuclear_plant770 : .intend(inspect_nuclear_plant770, I) & (count(I, "shield770", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield770"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant771 : true <- !inspect_nuclear_plant7711. 
+!inspect_nuclear_plant7711 : fast & .intend(inspect_nuclear_plant771, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield771_id1348_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield771", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield771", "G(add_belief(perc_rad771(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield771", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield771").
+!inspect_nuclear_plant771 : true <- !inspect_nuclear_plant7711. 
+!inspect_nuclear_plant7711 : true & .intend(inspect_nuclear_plant771, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield771_id1349_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield771", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield771", "G(add_belief(perc_rad771(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield771", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield771").
-!inspect_nuclear_plant771 : .intend(inspect_nuclear_plant771, I) & violated(I, "shield771", Cmds) & (count(I, "shield771", Count) | (not(count(I, "shield771", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant771.
-!inspect_nuclear_plant771 : .intend(inspect_nuclear_plant771, I) & (count(I, "shield771", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield771"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant772 : true <- !inspect_nuclear_plant7721. 
+!inspect_nuclear_plant7721 : fast & .intend(inspect_nuclear_plant772, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield772_id1350_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield772", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield772", "G(add_belief(perc_rad772(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield772", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield772").
+!inspect_nuclear_plant772 : true <- !inspect_nuclear_plant7721. 
+!inspect_nuclear_plant7721 : true & .intend(inspect_nuclear_plant772, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield772_id1351_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield772", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield772", "G(add_belief(perc_rad772(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield772", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield772").
-!inspect_nuclear_plant772 : .intend(inspect_nuclear_plant772, I) & violated(I, "shield772", Cmds) & (count(I, "shield772", Count) | (not(count(I, "shield772", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant772.
-!inspect_nuclear_plant772 : .intend(inspect_nuclear_plant772, I) & (count(I, "shield772", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield772"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant773 : true <- !inspect_nuclear_plant7731. 
+!inspect_nuclear_plant7731 : fast & .intend(inspect_nuclear_plant773, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield773_id1352_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield773", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield773", "G(add_belief(perc_rad773(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield773", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield773").
+!inspect_nuclear_plant773 : true <- !inspect_nuclear_plant7731. 
+!inspect_nuclear_plant7731 : true & .intend(inspect_nuclear_plant773, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield773_id1353_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield773", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield773", "G(add_belief(perc_rad773(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield773", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield773").
-!inspect_nuclear_plant773 : .intend(inspect_nuclear_plant773, I) & violated(I, "shield773", Cmds) & (count(I, "shield773", Count) | (not(count(I, "shield773", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant773.
-!inspect_nuclear_plant773 : .intend(inspect_nuclear_plant773, I) & (count(I, "shield773", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield773"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant774 : true <- !inspect_nuclear_plant7741. 
+!inspect_nuclear_plant7741 : fast & .intend(inspect_nuclear_plant774, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield774_id1354_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield774", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield774", "G(add_belief(perc_rad774(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield774", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield774").
+!inspect_nuclear_plant774 : true <- !inspect_nuclear_plant7741. 
+!inspect_nuclear_plant7741 : true & .intend(inspect_nuclear_plant774, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield774_id1355_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield774", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield774", "G(add_belief(perc_rad774(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield774", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield774").
-!inspect_nuclear_plant774 : .intend(inspect_nuclear_plant774, I) & violated(I, "shield774", Cmds) & (count(I, "shield774", Count) | (not(count(I, "shield774", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant774.
-!inspect_nuclear_plant774 : .intend(inspect_nuclear_plant774, I) & (count(I, "shield774", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield774"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant775 : true <- !inspect_nuclear_plant7751. 
+!inspect_nuclear_plant7751 : fast & .intend(inspect_nuclear_plant775, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield775_id1356_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield775", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield775", "G(add_belief(perc_rad775(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield775", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield775").
+!inspect_nuclear_plant775 : true <- !inspect_nuclear_plant7751. 
+!inspect_nuclear_plant7751 : true & .intend(inspect_nuclear_plant775, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield775_id1357_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield775", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield775", "G(add_belief(perc_rad775(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield775", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield775").
-!inspect_nuclear_plant775 : .intend(inspect_nuclear_plant775, I) & violated(I, "shield775", Cmds) & (count(I, "shield775", Count) | (not(count(I, "shield775", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant775.
-!inspect_nuclear_plant775 : .intend(inspect_nuclear_plant775, I) & (count(I, "shield775", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield775"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant776 : true <- !inspect_nuclear_plant7761. 
+!inspect_nuclear_plant7761 : fast & .intend(inspect_nuclear_plant776, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield776_id1358_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield776", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield776", "G(add_belief(perc_rad776(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield776", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield776").
+!inspect_nuclear_plant776 : true <- !inspect_nuclear_plant7761. 
+!inspect_nuclear_plant7761 : true & .intend(inspect_nuclear_plant776, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield776_id1359_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield776", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield776", "G(add_belief(perc_rad776(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield776", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield776").
-!inspect_nuclear_plant776 : .intend(inspect_nuclear_plant776, I) & violated(I, "shield776", Cmds) & (count(I, "shield776", Count) | (not(count(I, "shield776", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant776.
-!inspect_nuclear_plant776 : .intend(inspect_nuclear_plant776, I) & (count(I, "shield776", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield776"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant777 : true <- !inspect_nuclear_plant7771. 
+!inspect_nuclear_plant7771 : fast & .intend(inspect_nuclear_plant777, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield777_id1360_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield777", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield777", "G(add_belief(perc_rad777(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield777", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield777").
+!inspect_nuclear_plant777 : true <- !inspect_nuclear_plant7771. 
+!inspect_nuclear_plant7771 : true & .intend(inspect_nuclear_plant777, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield777_id1361_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield777", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield777", "G(add_belief(perc_rad777(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield777", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield777").
-!inspect_nuclear_plant777 : .intend(inspect_nuclear_plant777, I) & violated(I, "shield777", Cmds) & (count(I, "shield777", Count) | (not(count(I, "shield777", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant777.
-!inspect_nuclear_plant777 : .intend(inspect_nuclear_plant777, I) & (count(I, "shield777", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield777"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant778 : true <- !inspect_nuclear_plant7781. 
+!inspect_nuclear_plant7781 : fast & .intend(inspect_nuclear_plant778, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield778_id1362_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield778", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield778", "G(add_belief(perc_rad778(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield778", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield778").
+!inspect_nuclear_plant778 : true <- !inspect_nuclear_plant7781. 
+!inspect_nuclear_plant7781 : true & .intend(inspect_nuclear_plant778, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield778_id1363_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield778", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield778", "G(add_belief(perc_rad778(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield778", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield778").
-!inspect_nuclear_plant778 : .intend(inspect_nuclear_plant778, I) & violated(I, "shield778", Cmds) & (count(I, "shield778", Count) | (not(count(I, "shield778", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant778.
-!inspect_nuclear_plant778 : .intend(inspect_nuclear_plant778, I) & (count(I, "shield778", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield778"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant779 : true <- !inspect_nuclear_plant7791. 
+!inspect_nuclear_plant7791 : fast & .intend(inspect_nuclear_plant779, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield779_id1364_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield779", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield779", "G(add_belief(perc_rad779(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield779", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield779").
+!inspect_nuclear_plant779 : true <- !inspect_nuclear_plant7791. 
+!inspect_nuclear_plant7791 : true & .intend(inspect_nuclear_plant779, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield779_id1365_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield779", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield779", "G(add_belief(perc_rad779(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield779", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield779").
-!inspect_nuclear_plant779 : .intend(inspect_nuclear_plant779, I) & violated(I, "shield779", Cmds) & (count(I, "shield779", Count) | (not(count(I, "shield779", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant779.
-!inspect_nuclear_plant779 : .intend(inspect_nuclear_plant779, I) & (count(I, "shield779", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield779"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant780 : true <- !inspect_nuclear_plant7801. 
+!inspect_nuclear_plant7801 : fast & .intend(inspect_nuclear_plant780, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield780_id1366_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield780", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield780", "G(add_belief(perc_rad780(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield780", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield780").
+!inspect_nuclear_plant780 : true <- !inspect_nuclear_plant7801. 
+!inspect_nuclear_plant7801 : true & .intend(inspect_nuclear_plant780, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield780_id1367_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield780", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield780", "G(add_belief(perc_rad780(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield780", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield780").
-!inspect_nuclear_plant780 : .intend(inspect_nuclear_plant780, I) & violated(I, "shield780", Cmds) & (count(I, "shield780", Count) | (not(count(I, "shield780", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant780.
-!inspect_nuclear_plant780 : .intend(inspect_nuclear_plant780, I) & (count(I, "shield780", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield780"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant781 : true <- !inspect_nuclear_plant7811. 
+!inspect_nuclear_plant7811 : fast & .intend(inspect_nuclear_plant781, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield781_id1368_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield781", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield781", "G(add_belief(perc_rad781(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield781", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield781").
+!inspect_nuclear_plant781 : true <- !inspect_nuclear_plant7811. 
+!inspect_nuclear_plant7811 : true & .intend(inspect_nuclear_plant781, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield781_id1369_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield781", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield781", "G(add_belief(perc_rad781(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield781", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield781").
-!inspect_nuclear_plant781 : .intend(inspect_nuclear_plant781, I) & violated(I, "shield781", Cmds) & (count(I, "shield781", Count) | (not(count(I, "shield781", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant781.
-!inspect_nuclear_plant781 : .intend(inspect_nuclear_plant781, I) & (count(I, "shield781", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield781"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant782 : true <- !inspect_nuclear_plant7821. 
+!inspect_nuclear_plant7821 : fast & .intend(inspect_nuclear_plant782, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield782_id1370_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield782", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield782", "G(add_belief(perc_rad782(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield782", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield782").
+!inspect_nuclear_plant782 : true <- !inspect_nuclear_plant7821. 
+!inspect_nuclear_plant7821 : true & .intend(inspect_nuclear_plant782, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield782_id1371_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield782", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield782", "G(add_belief(perc_rad782(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield782", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield782").
-!inspect_nuclear_plant782 : .intend(inspect_nuclear_plant782, I) & violated(I, "shield782", Cmds) & (count(I, "shield782", Count) | (not(count(I, "shield782", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant782.
-!inspect_nuclear_plant782 : .intend(inspect_nuclear_plant782, I) & (count(I, "shield782", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield782"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant783 : true <- !inspect_nuclear_plant7831. 
+!inspect_nuclear_plant7831 : fast & .intend(inspect_nuclear_plant783, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield783_id1372_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield783", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield783", "G(add_belief(perc_rad783(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield783", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield783").
+!inspect_nuclear_plant783 : true <- !inspect_nuclear_plant7831. 
+!inspect_nuclear_plant7831 : true & .intend(inspect_nuclear_plant783, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield783_id1373_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield783", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield783", "G(add_belief(perc_rad783(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield783", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield783").
-!inspect_nuclear_plant783 : .intend(inspect_nuclear_plant783, I) & violated(I, "shield783", Cmds) & (count(I, "shield783", Count) | (not(count(I, "shield783", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant783.
-!inspect_nuclear_plant783 : .intend(inspect_nuclear_plant783, I) & (count(I, "shield783", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield783"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant784 : true <- !inspect_nuclear_plant7841. 
+!inspect_nuclear_plant7841 : fast & .intend(inspect_nuclear_plant784, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield784_id1374_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield784", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield784", "G(add_belief(perc_rad784(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield784", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield784").
+!inspect_nuclear_plant784 : true <- !inspect_nuclear_plant7841. 
+!inspect_nuclear_plant7841 : true & .intend(inspect_nuclear_plant784, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield784_id1375_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield784", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield784", "G(add_belief(perc_rad784(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield784", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield784").
-!inspect_nuclear_plant784 : .intend(inspect_nuclear_plant784, I) & violated(I, "shield784", Cmds) & (count(I, "shield784", Count) | (not(count(I, "shield784", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant784.
-!inspect_nuclear_plant784 : .intend(inspect_nuclear_plant784, I) & (count(I, "shield784", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield784"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant785 : true <- !inspect_nuclear_plant7851. 
+!inspect_nuclear_plant7851 : fast & .intend(inspect_nuclear_plant785, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield785_id1376_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield785", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield785", "G(add_belief(perc_rad785(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield785", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield785").
+!inspect_nuclear_plant785 : true <- !inspect_nuclear_plant7851. 
+!inspect_nuclear_plant7851 : true & .intend(inspect_nuclear_plant785, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield785_id1377_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield785", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield785", "G(add_belief(perc_rad785(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield785", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield785").
-!inspect_nuclear_plant785 : .intend(inspect_nuclear_plant785, I) & violated(I, "shield785", Cmds) & (count(I, "shield785", Count) | (not(count(I, "shield785", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant785.
-!inspect_nuclear_plant785 : .intend(inspect_nuclear_plant785, I) & (count(I, "shield785", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield785"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant786 : true <- !inspect_nuclear_plant7861. 
+!inspect_nuclear_plant7861 : fast & .intend(inspect_nuclear_plant786, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield786_id1378_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield786", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield786", "G(add_belief(perc_rad786(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield786", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield786").
+!inspect_nuclear_plant786 : true <- !inspect_nuclear_plant7861. 
+!inspect_nuclear_plant7861 : true & .intend(inspect_nuclear_plant786, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield786_id1379_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield786", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield786", "G(add_belief(perc_rad786(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield786", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield786").
-!inspect_nuclear_plant786 : .intend(inspect_nuclear_plant786, I) & violated(I, "shield786", Cmds) & (count(I, "shield786", Count) | (not(count(I, "shield786", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant786.
-!inspect_nuclear_plant786 : .intend(inspect_nuclear_plant786, I) & (count(I, "shield786", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield786"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant787 : true <- !inspect_nuclear_plant7871. 
+!inspect_nuclear_plant7871 : fast & .intend(inspect_nuclear_plant787, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield787_id1380_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield787", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield787", "G(add_belief(perc_rad787(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield787", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield787").
+!inspect_nuclear_plant787 : true <- !inspect_nuclear_plant7871. 
+!inspect_nuclear_plant7871 : true & .intend(inspect_nuclear_plant787, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield787_id1381_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield787", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield787", "G(add_belief(perc_rad787(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield787", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield787").
-!inspect_nuclear_plant787 : .intend(inspect_nuclear_plant787, I) & violated(I, "shield787", Cmds) & (count(I, "shield787", Count) | (not(count(I, "shield787", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant787.
-!inspect_nuclear_plant787 : .intend(inspect_nuclear_plant787, I) & (count(I, "shield787", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield787"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant788 : true <- !inspect_nuclear_plant7881. 
+!inspect_nuclear_plant7881 : fast & .intend(inspect_nuclear_plant788, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield788_id1382_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield788", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield788", "G(add_belief(perc_rad788(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield788", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield788").
+!inspect_nuclear_plant788 : true <- !inspect_nuclear_plant7881. 
+!inspect_nuclear_plant7881 : true & .intend(inspect_nuclear_plant788, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield788_id1383_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield788", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield788", "G(add_belief(perc_rad788(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield788", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield788").
-!inspect_nuclear_plant788 : .intend(inspect_nuclear_plant788, I) & violated(I, "shield788", Cmds) & (count(I, "shield788", Count) | (not(count(I, "shield788", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant788.
-!inspect_nuclear_plant788 : .intend(inspect_nuclear_plant788, I) & (count(I, "shield788", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield788"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant789 : true <- !inspect_nuclear_plant7891. 
+!inspect_nuclear_plant7891 : fast & .intend(inspect_nuclear_plant789, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield789_id1384_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield789", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield789", "G(add_belief(perc_rad789(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield789", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield789").
+!inspect_nuclear_plant789 : true <- !inspect_nuclear_plant7891. 
+!inspect_nuclear_plant7891 : true & .intend(inspect_nuclear_plant789, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield789_id1385_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield789", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield789", "G(add_belief(perc_rad789(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield789", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield789").
-!inspect_nuclear_plant789 : .intend(inspect_nuclear_plant789, I) & violated(I, "shield789", Cmds) & (count(I, "shield789", Count) | (not(count(I, "shield789", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant789.
-!inspect_nuclear_plant789 : .intend(inspect_nuclear_plant789, I) & (count(I, "shield789", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield789"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant790 : true <- !inspect_nuclear_plant7901. 
+!inspect_nuclear_plant7901 : fast & .intend(inspect_nuclear_plant790, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield790_id1386_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield790", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield790", "G(add_belief(perc_rad790(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield790", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield790").
+!inspect_nuclear_plant790 : true <- !inspect_nuclear_plant7901. 
+!inspect_nuclear_plant7901 : true & .intend(inspect_nuclear_plant790, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield790_id1387_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield790", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield790", "G(add_belief(perc_rad790(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield790", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield790").
-!inspect_nuclear_plant790 : .intend(inspect_nuclear_plant790, I) & violated(I, "shield790", Cmds) & (count(I, "shield790", Count) | (not(count(I, "shield790", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant790.
-!inspect_nuclear_plant790 : .intend(inspect_nuclear_plant790, I) & (count(I, "shield790", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield790"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant791 : true <- !inspect_nuclear_plant7911. 
+!inspect_nuclear_plant7911 : fast & .intend(inspect_nuclear_plant791, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield791_id1388_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield791", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield791", "G(add_belief(perc_rad791(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield791", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield791").
+!inspect_nuclear_plant791 : true <- !inspect_nuclear_plant7911. 
+!inspect_nuclear_plant7911 : true & .intend(inspect_nuclear_plant791, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield791_id1389_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield791", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield791", "G(add_belief(perc_rad791(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield791", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield791").
-!inspect_nuclear_plant791 : .intend(inspect_nuclear_plant791, I) & violated(I, "shield791", Cmds) & (count(I, "shield791", Count) | (not(count(I, "shield791", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant791.
-!inspect_nuclear_plant791 : .intend(inspect_nuclear_plant791, I) & (count(I, "shield791", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield791"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant792 : true <- !inspect_nuclear_plant7921. 
+!inspect_nuclear_plant7921 : fast & .intend(inspect_nuclear_plant792, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield792_id1390_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield792", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield792", "G(add_belief(perc_rad792(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield792", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield792").
+!inspect_nuclear_plant792 : true <- !inspect_nuclear_plant7921. 
+!inspect_nuclear_plant7921 : true & .intend(inspect_nuclear_plant792, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield792_id1391_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield792", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield792", "G(add_belief(perc_rad792(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield792", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield792").
-!inspect_nuclear_plant792 : .intend(inspect_nuclear_plant792, I) & violated(I, "shield792", Cmds) & (count(I, "shield792", Count) | (not(count(I, "shield792", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant792.
-!inspect_nuclear_plant792 : .intend(inspect_nuclear_plant792, I) & (count(I, "shield792", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield792"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant793 : true <- !inspect_nuclear_plant7931. 
+!inspect_nuclear_plant7931 : fast & .intend(inspect_nuclear_plant793, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield793_id1392_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield793", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield793", "G(add_belief(perc_rad793(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield793", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield793").
+!inspect_nuclear_plant793 : true <- !inspect_nuclear_plant7931. 
+!inspect_nuclear_plant7931 : true & .intend(inspect_nuclear_plant793, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield793_id1393_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield793", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield793", "G(add_belief(perc_rad793(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield793", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield793").
-!inspect_nuclear_plant793 : .intend(inspect_nuclear_plant793, I) & violated(I, "shield793", Cmds) & (count(I, "shield793", Count) | (not(count(I, "shield793", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant793.
-!inspect_nuclear_plant793 : .intend(inspect_nuclear_plant793, I) & (count(I, "shield793", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield793"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant794 : true <- !inspect_nuclear_plant7941. 
+!inspect_nuclear_plant7941 : fast & .intend(inspect_nuclear_plant794, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield794_id1394_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield794", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield794", "G(add_belief(perc_rad794(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield794", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield794").
+!inspect_nuclear_plant794 : true <- !inspect_nuclear_plant7941. 
+!inspect_nuclear_plant7941 : true & .intend(inspect_nuclear_plant794, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield794_id1395_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield794", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield794", "G(add_belief(perc_rad794(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield794", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield794").
-!inspect_nuclear_plant794 : .intend(inspect_nuclear_plant794, I) & violated(I, "shield794", Cmds) & (count(I, "shield794", Count) | (not(count(I, "shield794", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant794.
-!inspect_nuclear_plant794 : .intend(inspect_nuclear_plant794, I) & (count(I, "shield794", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield794"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant795 : true <- !inspect_nuclear_plant7951. 
+!inspect_nuclear_plant7951 : fast & .intend(inspect_nuclear_plant795, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield795_id1396_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield795", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield795", "G(add_belief(perc_rad795(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield795", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield795").
+!inspect_nuclear_plant795 : true <- !inspect_nuclear_plant7951. 
+!inspect_nuclear_plant7951 : true & .intend(inspect_nuclear_plant795, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield795_id1397_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield795", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield795", "G(add_belief(perc_rad795(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield795", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield795").
-!inspect_nuclear_plant795 : .intend(inspect_nuclear_plant795, I) & violated(I, "shield795", Cmds) & (count(I, "shield795", Count) | (not(count(I, "shield795", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant795.
-!inspect_nuclear_plant795 : .intend(inspect_nuclear_plant795, I) & (count(I, "shield795", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield795"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant796 : true <- !inspect_nuclear_plant7961. 
+!inspect_nuclear_plant7961 : fast & .intend(inspect_nuclear_plant796, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield796_id1398_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield796", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield796", "G(add_belief(perc_rad796(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield796", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield796").
+!inspect_nuclear_plant796 : true <- !inspect_nuclear_plant7961. 
+!inspect_nuclear_plant7961 : true & .intend(inspect_nuclear_plant796, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield796_id1399_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield796", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield796", "G(add_belief(perc_rad796(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield796", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield796").
-!inspect_nuclear_plant796 : .intend(inspect_nuclear_plant796, I) & violated(I, "shield796", Cmds) & (count(I, "shield796", Count) | (not(count(I, "shield796", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant796.
-!inspect_nuclear_plant796 : .intend(inspect_nuclear_plant796, I) & (count(I, "shield796", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield796"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant797 : true <- !inspect_nuclear_plant7971. 
+!inspect_nuclear_plant7971 : fast & .intend(inspect_nuclear_plant797, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield797_id1400_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield797", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield797", "G(add_belief(perc_rad797(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield797", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield797").
+!inspect_nuclear_plant797 : true <- !inspect_nuclear_plant7971. 
+!inspect_nuclear_plant7971 : true & .intend(inspect_nuclear_plant797, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield797_id1401_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield797", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield797", "G(add_belief(perc_rad797(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield797", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield797").
-!inspect_nuclear_plant797 : .intend(inspect_nuclear_plant797, I) & violated(I, "shield797", Cmds) & (count(I, "shield797", Count) | (not(count(I, "shield797", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant797.
-!inspect_nuclear_plant797 : .intend(inspect_nuclear_plant797, I) & (count(I, "shield797", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield797"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant798 : true <- !inspect_nuclear_plant7981. 
+!inspect_nuclear_plant7981 : fast & .intend(inspect_nuclear_plant798, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield798_id1402_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield798", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield798", "G(add_belief(perc_rad798(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield798", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield798").
+!inspect_nuclear_plant798 : true <- !inspect_nuclear_plant7981. 
+!inspect_nuclear_plant7981 : true & .intend(inspect_nuclear_plant798, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield798_id1403_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield798", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield798", "G(add_belief(perc_rad798(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield798", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield798").
-!inspect_nuclear_plant798 : .intend(inspect_nuclear_plant798, I) & violated(I, "shield798", Cmds) & (count(I, "shield798", Count) | (not(count(I, "shield798", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant798.
-!inspect_nuclear_plant798 : .intend(inspect_nuclear_plant798, I) & (count(I, "shield798", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield798"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant799 : true <- !inspect_nuclear_plant7991. 
+!inspect_nuclear_plant7991 : fast & .intend(inspect_nuclear_plant799, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield799_id1404_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield799", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield799", "G(add_belief(perc_rad799(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield799", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield799").
+!inspect_nuclear_plant799 : true <- !inspect_nuclear_plant7991. 
+!inspect_nuclear_plant7991 : true & .intend(inspect_nuclear_plant799, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield799_id1405_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield799", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield799", "G(add_belief(perc_rad799(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield799", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield799").
-!inspect_nuclear_plant799 : .intend(inspect_nuclear_plant799, I) & violated(I, "shield799", Cmds) & (count(I, "shield799", Count) | (not(count(I, "shield799", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant799.
-!inspect_nuclear_plant799 : .intend(inspect_nuclear_plant799, I) & (count(I, "shield799", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield799"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant800 : true <- !inspect_nuclear_plant8001. 
+!inspect_nuclear_plant8001 : fast & .intend(inspect_nuclear_plant800, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield800_id1406_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield800", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield800", "G(add_belief(perc_rad800(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield800", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield800").
+!inspect_nuclear_plant800 : true <- !inspect_nuclear_plant8001. 
+!inspect_nuclear_plant8001 : true & .intend(inspect_nuclear_plant800, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield800_id1407_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield800", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield800", "G(add_belief(perc_rad800(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield800", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield800").
-!inspect_nuclear_plant800 : .intend(inspect_nuclear_plant800, I) & violated(I, "shield800", Cmds) & (count(I, "shield800", Count) | (not(count(I, "shield800", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant800.
-!inspect_nuclear_plant800 : .intend(inspect_nuclear_plant800, I) & (count(I, "shield800", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield800"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant801 : true <- !inspect_nuclear_plant8011. 
+!inspect_nuclear_plant8011 : fast & .intend(inspect_nuclear_plant801, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield801_id1408_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield801", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield801", "G(add_belief(perc_rad801(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield801", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield801").
+!inspect_nuclear_plant801 : true <- !inspect_nuclear_plant8011. 
+!inspect_nuclear_plant8011 : true & .intend(inspect_nuclear_plant801, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield801_id1409_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield801", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield801", "G(add_belief(perc_rad801(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield801", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield801").
-!inspect_nuclear_plant801 : .intend(inspect_nuclear_plant801, I) & violated(I, "shield801", Cmds) & (count(I, "shield801", Count) | (not(count(I, "shield801", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant801.
-!inspect_nuclear_plant801 : .intend(inspect_nuclear_plant801, I) & (count(I, "shield801", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield801"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant802 : true <- !inspect_nuclear_plant8021. 
+!inspect_nuclear_plant8021 : fast & .intend(inspect_nuclear_plant802, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield802_id1410_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield802", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield802", "G(add_belief(perc_rad802(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield802", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield802").
+!inspect_nuclear_plant802 : true <- !inspect_nuclear_plant8021. 
+!inspect_nuclear_plant8021 : true & .intend(inspect_nuclear_plant802, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield802_id1411_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield802", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield802", "G(add_belief(perc_rad802(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield802", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield802").
-!inspect_nuclear_plant802 : .intend(inspect_nuclear_plant802, I) & violated(I, "shield802", Cmds) & (count(I, "shield802", Count) | (not(count(I, "shield802", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant802.
-!inspect_nuclear_plant802 : .intend(inspect_nuclear_plant802, I) & (count(I, "shield802", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield802"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant803 : true <- !inspect_nuclear_plant8031. 
+!inspect_nuclear_plant8031 : fast & .intend(inspect_nuclear_plant803, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield803_id1412_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield803", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield803", "G(add_belief(perc_rad803(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield803", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield803").
+!inspect_nuclear_plant803 : true <- !inspect_nuclear_plant8031. 
+!inspect_nuclear_plant8031 : true & .intend(inspect_nuclear_plant803, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield803_id1413_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield803", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield803", "G(add_belief(perc_rad803(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield803", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield803").
-!inspect_nuclear_plant803 : .intend(inspect_nuclear_plant803, I) & violated(I, "shield803", Cmds) & (count(I, "shield803", Count) | (not(count(I, "shield803", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant803.
-!inspect_nuclear_plant803 : .intend(inspect_nuclear_plant803, I) & (count(I, "shield803", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield803"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant804 : true <- !inspect_nuclear_plant8041. 
+!inspect_nuclear_plant8041 : fast & .intend(inspect_nuclear_plant804, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield804_id1414_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield804", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield804", "G(add_belief(perc_rad804(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield804", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield804").
+!inspect_nuclear_plant804 : true <- !inspect_nuclear_plant8041. 
+!inspect_nuclear_plant8041 : true & .intend(inspect_nuclear_plant804, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield804_id1415_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield804", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield804", "G(add_belief(perc_rad804(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield804", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield804").
-!inspect_nuclear_plant804 : .intend(inspect_nuclear_plant804, I) & violated(I, "shield804", Cmds) & (count(I, "shield804", Count) | (not(count(I, "shield804", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant804.
-!inspect_nuclear_plant804 : .intend(inspect_nuclear_plant804, I) & (count(I, "shield804", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield804"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant805 : true <- !inspect_nuclear_plant8051. 
+!inspect_nuclear_plant8051 : fast & .intend(inspect_nuclear_plant805, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield805_id1416_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield805", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield805", "G(add_belief(perc_rad805(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield805", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield805").
+!inspect_nuclear_plant805 : true <- !inspect_nuclear_plant8051. 
+!inspect_nuclear_plant8051 : true & .intend(inspect_nuclear_plant805, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield805_id1417_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield805", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield805", "G(add_belief(perc_rad805(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield805", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield805").
-!inspect_nuclear_plant805 : .intend(inspect_nuclear_plant805, I) & violated(I, "shield805", Cmds) & (count(I, "shield805", Count) | (not(count(I, "shield805", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant805.
-!inspect_nuclear_plant805 : .intend(inspect_nuclear_plant805, I) & (count(I, "shield805", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield805"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant806 : true <- !inspect_nuclear_plant8061. 
+!inspect_nuclear_plant8061 : fast & .intend(inspect_nuclear_plant806, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield806_id1418_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield806", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield806", "G(add_belief(perc_rad806(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield806", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield806").
+!inspect_nuclear_plant806 : true <- !inspect_nuclear_plant8061. 
+!inspect_nuclear_plant8061 : true & .intend(inspect_nuclear_plant806, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield806_id1419_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield806", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield806", "G(add_belief(perc_rad806(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield806", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield806").
-!inspect_nuclear_plant806 : .intend(inspect_nuclear_plant806, I) & violated(I, "shield806", Cmds) & (count(I, "shield806", Count) | (not(count(I, "shield806", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant806.
-!inspect_nuclear_plant806 : .intend(inspect_nuclear_plant806, I) & (count(I, "shield806", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield806"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant807 : true <- !inspect_nuclear_plant8071. 
+!inspect_nuclear_plant8071 : fast & .intend(inspect_nuclear_plant807, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield807_id1420_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield807", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield807", "G(add_belief(perc_rad807(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield807", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield807").
+!inspect_nuclear_plant807 : true <- !inspect_nuclear_plant8071. 
+!inspect_nuclear_plant8071 : true & .intend(inspect_nuclear_plant807, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield807_id1421_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield807", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield807", "G(add_belief(perc_rad807(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield807", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield807").
-!inspect_nuclear_plant807 : .intend(inspect_nuclear_plant807, I) & violated(I, "shield807", Cmds) & (count(I, "shield807", Count) | (not(count(I, "shield807", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant807.
-!inspect_nuclear_plant807 : .intend(inspect_nuclear_plant807, I) & (count(I, "shield807", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield807"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant808 : true <- !inspect_nuclear_plant8081. 
+!inspect_nuclear_plant8081 : fast & .intend(inspect_nuclear_plant808, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield808_id1422_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield808", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield808", "G(add_belief(perc_rad808(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield808", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield808").
+!inspect_nuclear_plant808 : true <- !inspect_nuclear_plant8081. 
+!inspect_nuclear_plant8081 : true & .intend(inspect_nuclear_plant808, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield808_id1423_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield808", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield808", "G(add_belief(perc_rad808(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield808", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield808").
-!inspect_nuclear_plant808 : .intend(inspect_nuclear_plant808, I) & violated(I, "shield808", Cmds) & (count(I, "shield808", Count) | (not(count(I, "shield808", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant808.
-!inspect_nuclear_plant808 : .intend(inspect_nuclear_plant808, I) & (count(I, "shield808", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield808"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant809 : true <- !inspect_nuclear_plant8091. 
+!inspect_nuclear_plant8091 : fast & .intend(inspect_nuclear_plant809, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield809_id1424_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield809", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield809", "G(add_belief(perc_rad809(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield809", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield809").
+!inspect_nuclear_plant809 : true <- !inspect_nuclear_plant8091. 
+!inspect_nuclear_plant8091 : true & .intend(inspect_nuclear_plant809, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield809_id1425_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield809", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield809", "G(add_belief(perc_rad809(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield809", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield809").
-!inspect_nuclear_plant809 : .intend(inspect_nuclear_plant809, I) & violated(I, "shield809", Cmds) & (count(I, "shield809", Count) | (not(count(I, "shield809", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant809.
-!inspect_nuclear_plant809 : .intend(inspect_nuclear_plant809, I) & (count(I, "shield809", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield809"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant810 : true <- !inspect_nuclear_plant8101. 
+!inspect_nuclear_plant8101 : fast & .intend(inspect_nuclear_plant810, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield810_id1426_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield810", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield810", "G(add_belief(perc_rad810(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield810", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield810").
+!inspect_nuclear_plant810 : true <- !inspect_nuclear_plant8101. 
+!inspect_nuclear_plant8101 : true & .intend(inspect_nuclear_plant810, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield810_id1427_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield810", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield810", "G(add_belief(perc_rad810(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield810", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield810").
-!inspect_nuclear_plant810 : .intend(inspect_nuclear_plant810, I) & violated(I, "shield810", Cmds) & (count(I, "shield810", Count) | (not(count(I, "shield810", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant810.
-!inspect_nuclear_plant810 : .intend(inspect_nuclear_plant810, I) & (count(I, "shield810", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield810"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant811 : true <- !inspect_nuclear_plant8111. 
+!inspect_nuclear_plant8111 : fast & .intend(inspect_nuclear_plant811, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield811_id1428_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield811", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield811", "G(add_belief(perc_rad811(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield811", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield811").
+!inspect_nuclear_plant811 : true <- !inspect_nuclear_plant8111. 
+!inspect_nuclear_plant8111 : true & .intend(inspect_nuclear_plant811, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield811_id1429_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield811", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield811", "G(add_belief(perc_rad811(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield811", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield811").
-!inspect_nuclear_plant811 : .intend(inspect_nuclear_plant811, I) & violated(I, "shield811", Cmds) & (count(I, "shield811", Count) | (not(count(I, "shield811", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant811.
-!inspect_nuclear_plant811 : .intend(inspect_nuclear_plant811, I) & (count(I, "shield811", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield811"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant812 : true <- !inspect_nuclear_plant8121. 
+!inspect_nuclear_plant8121 : fast & .intend(inspect_nuclear_plant812, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield812_id1430_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield812", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield812", "G(add_belief(perc_rad812(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield812", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield812").
+!inspect_nuclear_plant812 : true <- !inspect_nuclear_plant8121. 
+!inspect_nuclear_plant8121 : true & .intend(inspect_nuclear_plant812, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield812_id1431_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield812", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield812", "G(add_belief(perc_rad812(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield812", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield812").
-!inspect_nuclear_plant812 : .intend(inspect_nuclear_plant812, I) & violated(I, "shield812", Cmds) & (count(I, "shield812", Count) | (not(count(I, "shield812", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant812.
-!inspect_nuclear_plant812 : .intend(inspect_nuclear_plant812, I) & (count(I, "shield812", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield812"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant813 : true <- !inspect_nuclear_plant8131. 
+!inspect_nuclear_plant8131 : fast & .intend(inspect_nuclear_plant813, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield813_id1432_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield813", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield813", "G(add_belief(perc_rad813(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield813", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield813").
+!inspect_nuclear_plant813 : true <- !inspect_nuclear_plant8131. 
+!inspect_nuclear_plant8131 : true & .intend(inspect_nuclear_plant813, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield813_id1433_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield813", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield813", "G(add_belief(perc_rad813(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield813", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield813").
-!inspect_nuclear_plant813 : .intend(inspect_nuclear_plant813, I) & violated(I, "shield813", Cmds) & (count(I, "shield813", Count) | (not(count(I, "shield813", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant813.
-!inspect_nuclear_plant813 : .intend(inspect_nuclear_plant813, I) & (count(I, "shield813", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield813"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant814 : true <- !inspect_nuclear_plant8141. 
+!inspect_nuclear_plant8141 : fast & .intend(inspect_nuclear_plant814, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield814_id1434_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield814", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield814", "G(add_belief(perc_rad814(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield814", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield814").
+!inspect_nuclear_plant814 : true <- !inspect_nuclear_plant8141. 
+!inspect_nuclear_plant8141 : true & .intend(inspect_nuclear_plant814, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield814_id1435_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield814", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield814", "G(add_belief(perc_rad814(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield814", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield814").
-!inspect_nuclear_plant814 : .intend(inspect_nuclear_plant814, I) & violated(I, "shield814", Cmds) & (count(I, "shield814", Count) | (not(count(I, "shield814", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant814.
-!inspect_nuclear_plant814 : .intend(inspect_nuclear_plant814, I) & (count(I, "shield814", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield814"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant815 : true <- !inspect_nuclear_plant8151. 
+!inspect_nuclear_plant8151 : fast & .intend(inspect_nuclear_plant815, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield815_id1436_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield815", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield815", "G(add_belief(perc_rad815(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield815", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield815").
+!inspect_nuclear_plant815 : true <- !inspect_nuclear_plant8151. 
+!inspect_nuclear_plant8151 : true & .intend(inspect_nuclear_plant815, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield815_id1437_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield815", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield815", "G(add_belief(perc_rad815(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield815", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield815").
-!inspect_nuclear_plant815 : .intend(inspect_nuclear_plant815, I) & violated(I, "shield815", Cmds) & (count(I, "shield815", Count) | (not(count(I, "shield815", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant815.
-!inspect_nuclear_plant815 : .intend(inspect_nuclear_plant815, I) & (count(I, "shield815", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield815"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant816 : true <- !inspect_nuclear_plant8161. 
+!inspect_nuclear_plant8161 : fast & .intend(inspect_nuclear_plant816, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield816_id1438_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield816", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield816", "G(add_belief(perc_rad816(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield816", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield816").
+!inspect_nuclear_plant816 : true <- !inspect_nuclear_plant8161. 
+!inspect_nuclear_plant8161 : true & .intend(inspect_nuclear_plant816, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield816_id1439_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield816", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield816", "G(add_belief(perc_rad816(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield816", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield816").
-!inspect_nuclear_plant816 : .intend(inspect_nuclear_plant816, I) & violated(I, "shield816", Cmds) & (count(I, "shield816", Count) | (not(count(I, "shield816", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant816.
-!inspect_nuclear_plant816 : .intend(inspect_nuclear_plant816, I) & (count(I, "shield816", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield816"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant817 : true <- !inspect_nuclear_plant8171. 
+!inspect_nuclear_plant8171 : fast & .intend(inspect_nuclear_plant817, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield817_id1440_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield817", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield817", "G(add_belief(perc_rad817(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield817", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield817").
+!inspect_nuclear_plant817 : true <- !inspect_nuclear_plant8171. 
+!inspect_nuclear_plant8171 : true & .intend(inspect_nuclear_plant817, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield817_id1441_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield817", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield817", "G(add_belief(perc_rad817(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield817", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield817").
-!inspect_nuclear_plant817 : .intend(inspect_nuclear_plant817, I) & violated(I, "shield817", Cmds) & (count(I, "shield817", Count) | (not(count(I, "shield817", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant817.
-!inspect_nuclear_plant817 : .intend(inspect_nuclear_plant817, I) & (count(I, "shield817", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield817"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant818 : true <- !inspect_nuclear_plant8181. 
+!inspect_nuclear_plant8181 : fast & .intend(inspect_nuclear_plant818, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield818_id1442_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield818", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield818", "G(add_belief(perc_rad818(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield818", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield818").
+!inspect_nuclear_plant818 : true <- !inspect_nuclear_plant8181. 
+!inspect_nuclear_plant8181 : true & .intend(inspect_nuclear_plant818, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield818_id1443_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield818", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield818", "G(add_belief(perc_rad818(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield818", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield818").
-!inspect_nuclear_plant818 : .intend(inspect_nuclear_plant818, I) & violated(I, "shield818", Cmds) & (count(I, "shield818", Count) | (not(count(I, "shield818", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant818.
-!inspect_nuclear_plant818 : .intend(inspect_nuclear_plant818, I) & (count(I, "shield818", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield818"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant819 : true <- !inspect_nuclear_plant8191. 
+!inspect_nuclear_plant8191 : fast & .intend(inspect_nuclear_plant819, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield819_id1444_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield819", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield819", "G(add_belief(perc_rad819(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield819", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield819").
+!inspect_nuclear_plant819 : true <- !inspect_nuclear_plant8191. 
+!inspect_nuclear_plant8191 : true & .intend(inspect_nuclear_plant819, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield819_id1445_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield819", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield819", "G(add_belief(perc_rad819(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield819", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield819").
-!inspect_nuclear_plant819 : .intend(inspect_nuclear_plant819, I) & violated(I, "shield819", Cmds) & (count(I, "shield819", Count) | (not(count(I, "shield819", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant819.
-!inspect_nuclear_plant819 : .intend(inspect_nuclear_plant819, I) & (count(I, "shield819", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield819"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant820 : true <- !inspect_nuclear_plant8201. 
+!inspect_nuclear_plant8201 : fast & .intend(inspect_nuclear_plant820, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield820_id1446_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield820", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield820", "G(add_belief(perc_rad820(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield820", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield820").
+!inspect_nuclear_plant820 : true <- !inspect_nuclear_plant8201. 
+!inspect_nuclear_plant8201 : true & .intend(inspect_nuclear_plant820, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield820_id1447_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield820", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield820", "G(add_belief(perc_rad820(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield820", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield820").
-!inspect_nuclear_plant820 : .intend(inspect_nuclear_plant820, I) & violated(I, "shield820", Cmds) & (count(I, "shield820", Count) | (not(count(I, "shield820", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant820.
-!inspect_nuclear_plant820 : .intend(inspect_nuclear_plant820, I) & (count(I, "shield820", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield820"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant821 : true <- !inspect_nuclear_plant8211. 
+!inspect_nuclear_plant8211 : fast & .intend(inspect_nuclear_plant821, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield821_id1448_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield821", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield821", "G(add_belief(perc_rad821(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield821", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield821").
+!inspect_nuclear_plant821 : true <- !inspect_nuclear_plant8211. 
+!inspect_nuclear_plant8211 : true & .intend(inspect_nuclear_plant821, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield821_id1449_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield821", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield821", "G(add_belief(perc_rad821(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield821", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield821").
-!inspect_nuclear_plant821 : .intend(inspect_nuclear_plant821, I) & violated(I, "shield821", Cmds) & (count(I, "shield821", Count) | (not(count(I, "shield821", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant821.
-!inspect_nuclear_plant821 : .intend(inspect_nuclear_plant821, I) & (count(I, "shield821", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield821"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant822 : true <- !inspect_nuclear_plant8221. 
+!inspect_nuclear_plant8221 : fast & .intend(inspect_nuclear_plant822, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield822_id1450_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield822", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield822", "G(add_belief(perc_rad822(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield822", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield822").
+!inspect_nuclear_plant822 : true <- !inspect_nuclear_plant8221. 
+!inspect_nuclear_plant8221 : true & .intend(inspect_nuclear_plant822, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield822_id1451_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield822", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield822", "G(add_belief(perc_rad822(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield822", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield822").
-!inspect_nuclear_plant822 : .intend(inspect_nuclear_plant822, I) & violated(I, "shield822", Cmds) & (count(I, "shield822", Count) | (not(count(I, "shield822", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant822.
-!inspect_nuclear_plant822 : .intend(inspect_nuclear_plant822, I) & (count(I, "shield822", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield822"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant823 : true <- !inspect_nuclear_plant8231. 
+!inspect_nuclear_plant8231 : fast & .intend(inspect_nuclear_plant823, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield823_id1452_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield823", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield823", "G(add_belief(perc_rad823(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield823", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield823").
+!inspect_nuclear_plant823 : true <- !inspect_nuclear_plant8231. 
+!inspect_nuclear_plant8231 : true & .intend(inspect_nuclear_plant823, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield823_id1453_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield823", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield823", "G(add_belief(perc_rad823(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield823", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield823").
-!inspect_nuclear_plant823 : .intend(inspect_nuclear_plant823, I) & violated(I, "shield823", Cmds) & (count(I, "shield823", Count) | (not(count(I, "shield823", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant823.
-!inspect_nuclear_plant823 : .intend(inspect_nuclear_plant823, I) & (count(I, "shield823", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield823"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant824 : true <- !inspect_nuclear_plant8241. 
+!inspect_nuclear_plant8241 : fast & .intend(inspect_nuclear_plant824, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield824_id1454_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield824", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield824", "G(add_belief(perc_rad824(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield824", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield824").
+!inspect_nuclear_plant824 : true <- !inspect_nuclear_plant8241. 
+!inspect_nuclear_plant8241 : true & .intend(inspect_nuclear_plant824, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield824_id1455_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield824", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield824", "G(add_belief(perc_rad824(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield824", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield824").
-!inspect_nuclear_plant824 : .intend(inspect_nuclear_plant824, I) & violated(I, "shield824", Cmds) & (count(I, "shield824", Count) | (not(count(I, "shield824", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant824.
-!inspect_nuclear_plant824 : .intend(inspect_nuclear_plant824, I) & (count(I, "shield824", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield824"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant825 : true <- !inspect_nuclear_plant8251. 
+!inspect_nuclear_plant8251 : fast & .intend(inspect_nuclear_plant825, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield825_id1456_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield825", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield825", "G(add_belief(perc_rad825(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield825", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield825").
+!inspect_nuclear_plant825 : true <- !inspect_nuclear_plant8251. 
+!inspect_nuclear_plant8251 : true & .intend(inspect_nuclear_plant825, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield825_id1457_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield825", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield825", "G(add_belief(perc_rad825(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield825", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield825").
-!inspect_nuclear_plant825 : .intend(inspect_nuclear_plant825, I) & violated(I, "shield825", Cmds) & (count(I, "shield825", Count) | (not(count(I, "shield825", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant825.
-!inspect_nuclear_plant825 : .intend(inspect_nuclear_plant825, I) & (count(I, "shield825", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield825"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant826 : true <- !inspect_nuclear_plant8261. 
+!inspect_nuclear_plant8261 : fast & .intend(inspect_nuclear_plant826, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield826_id1458_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield826", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield826", "G(add_belief(perc_rad826(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield826", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield826").
+!inspect_nuclear_plant826 : true <- !inspect_nuclear_plant8261. 
+!inspect_nuclear_plant8261 : true & .intend(inspect_nuclear_plant826, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield826_id1459_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield826", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield826", "G(add_belief(perc_rad826(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield826", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield826").
-!inspect_nuclear_plant826 : .intend(inspect_nuclear_plant826, I) & violated(I, "shield826", Cmds) & (count(I, "shield826", Count) | (not(count(I, "shield826", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant826.
-!inspect_nuclear_plant826 : .intend(inspect_nuclear_plant826, I) & (count(I, "shield826", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield826"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant827 : true <- !inspect_nuclear_plant8271. 
+!inspect_nuclear_plant8271 : fast & .intend(inspect_nuclear_plant827, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield827_id1460_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield827", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield827", "G(add_belief(perc_rad827(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield827", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield827").
+!inspect_nuclear_plant827 : true <- !inspect_nuclear_plant8271. 
+!inspect_nuclear_plant8271 : true & .intend(inspect_nuclear_plant827, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield827_id1461_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield827", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield827", "G(add_belief(perc_rad827(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield827", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield827").
-!inspect_nuclear_plant827 : .intend(inspect_nuclear_plant827, I) & violated(I, "shield827", Cmds) & (count(I, "shield827", Count) | (not(count(I, "shield827", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant827.
-!inspect_nuclear_plant827 : .intend(inspect_nuclear_plant827, I) & (count(I, "shield827", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield827"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant828 : true <- !inspect_nuclear_plant8281. 
+!inspect_nuclear_plant8281 : fast & .intend(inspect_nuclear_plant828, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield828_id1462_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield828", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield828", "G(add_belief(perc_rad828(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield828", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield828").
+!inspect_nuclear_plant828 : true <- !inspect_nuclear_plant8281. 
+!inspect_nuclear_plant8281 : true & .intend(inspect_nuclear_plant828, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield828_id1463_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield828", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield828", "G(add_belief(perc_rad828(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield828", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield828").
-!inspect_nuclear_plant828 : .intend(inspect_nuclear_plant828, I) & violated(I, "shield828", Cmds) & (count(I, "shield828", Count) | (not(count(I, "shield828", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant828.
-!inspect_nuclear_plant828 : .intend(inspect_nuclear_plant828, I) & (count(I, "shield828", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield828"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant829 : true <- !inspect_nuclear_plant8291. 
+!inspect_nuclear_plant8291 : fast & .intend(inspect_nuclear_plant829, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield829_id1464_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield829", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield829", "G(add_belief(perc_rad829(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield829", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield829").
+!inspect_nuclear_plant829 : true <- !inspect_nuclear_plant8291. 
+!inspect_nuclear_plant8291 : true & .intend(inspect_nuclear_plant829, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield829_id1465_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield829", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield829", "G(add_belief(perc_rad829(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield829", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield829").
-!inspect_nuclear_plant829 : .intend(inspect_nuclear_plant829, I) & violated(I, "shield829", Cmds) & (count(I, "shield829", Count) | (not(count(I, "shield829", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant829.
-!inspect_nuclear_plant829 : .intend(inspect_nuclear_plant829, I) & (count(I, "shield829", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield829"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant830 : true <- !inspect_nuclear_plant8301. 
+!inspect_nuclear_plant8301 : fast & .intend(inspect_nuclear_plant830, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield830_id1466_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield830", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield830", "G(add_belief(perc_rad830(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield830", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield830").
+!inspect_nuclear_plant830 : true <- !inspect_nuclear_plant8301. 
+!inspect_nuclear_plant8301 : true & .intend(inspect_nuclear_plant830, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield830_id1467_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield830", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield830", "G(add_belief(perc_rad830(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield830", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield830").
-!inspect_nuclear_plant830 : .intend(inspect_nuclear_plant830, I) & violated(I, "shield830", Cmds) & (count(I, "shield830", Count) | (not(count(I, "shield830", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant830.
-!inspect_nuclear_plant830 : .intend(inspect_nuclear_plant830, I) & (count(I, "shield830", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield830"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant831 : true <- !inspect_nuclear_plant8311. 
+!inspect_nuclear_plant8311 : fast & .intend(inspect_nuclear_plant831, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield831_id1468_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield831", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield831", "G(add_belief(perc_rad831(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield831", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield831").
+!inspect_nuclear_plant831 : true <- !inspect_nuclear_plant8311. 
+!inspect_nuclear_plant8311 : true & .intend(inspect_nuclear_plant831, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield831_id1469_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield831", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield831", "G(add_belief(perc_rad831(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield831", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield831").
-!inspect_nuclear_plant831 : .intend(inspect_nuclear_plant831, I) & violated(I, "shield831", Cmds) & (count(I, "shield831", Count) | (not(count(I, "shield831", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant831.
-!inspect_nuclear_plant831 : .intend(inspect_nuclear_plant831, I) & (count(I, "shield831", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield831"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant832 : true <- !inspect_nuclear_plant8321. 
+!inspect_nuclear_plant8321 : fast & .intend(inspect_nuclear_plant832, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield832_id1470_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield832", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield832", "G(add_belief(perc_rad832(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield832", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield832").
+!inspect_nuclear_plant832 : true <- !inspect_nuclear_plant8321. 
+!inspect_nuclear_plant8321 : true & .intend(inspect_nuclear_plant832, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield832_id1471_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield832", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield832", "G(add_belief(perc_rad832(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield832", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield832").
-!inspect_nuclear_plant832 : .intend(inspect_nuclear_plant832, I) & violated(I, "shield832", Cmds) & (count(I, "shield832", Count) | (not(count(I, "shield832", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant832.
-!inspect_nuclear_plant832 : .intend(inspect_nuclear_plant832, I) & (count(I, "shield832", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield832"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant833 : true <- !inspect_nuclear_plant8331. 
+!inspect_nuclear_plant8331 : fast & .intend(inspect_nuclear_plant833, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield833_id1472_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield833", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield833", "G(add_belief(perc_rad833(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield833", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield833").
+!inspect_nuclear_plant833 : true <- !inspect_nuclear_plant8331. 
+!inspect_nuclear_plant8331 : true & .intend(inspect_nuclear_plant833, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield833_id1473_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield833", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield833", "G(add_belief(perc_rad833(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield833", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield833").
-!inspect_nuclear_plant833 : .intend(inspect_nuclear_plant833, I) & violated(I, "shield833", Cmds) & (count(I, "shield833", Count) | (not(count(I, "shield833", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant833.
-!inspect_nuclear_plant833 : .intend(inspect_nuclear_plant833, I) & (count(I, "shield833", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield833"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant834 : true <- !inspect_nuclear_plant8341. 
+!inspect_nuclear_plant8341 : fast & .intend(inspect_nuclear_plant834, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield834_id1474_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield834", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield834", "G(add_belief(perc_rad834(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield834", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield834").
+!inspect_nuclear_plant834 : true <- !inspect_nuclear_plant8341. 
+!inspect_nuclear_plant8341 : true & .intend(inspect_nuclear_plant834, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield834_id1475_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield834", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield834", "G(add_belief(perc_rad834(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield834", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield834").
-!inspect_nuclear_plant834 : .intend(inspect_nuclear_plant834, I) & violated(I, "shield834", Cmds) & (count(I, "shield834", Count) | (not(count(I, "shield834", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant834.
-!inspect_nuclear_plant834 : .intend(inspect_nuclear_plant834, I) & (count(I, "shield834", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield834"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant835 : true <- !inspect_nuclear_plant8351. 
+!inspect_nuclear_plant8351 : fast & .intend(inspect_nuclear_plant835, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield835_id1476_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield835", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield835", "G(add_belief(perc_rad835(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield835", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield835").
+!inspect_nuclear_plant835 : true <- !inspect_nuclear_plant8351. 
+!inspect_nuclear_plant8351 : true & .intend(inspect_nuclear_plant835, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield835_id1477_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield835", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield835", "G(add_belief(perc_rad835(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield835", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield835").
-!inspect_nuclear_plant835 : .intend(inspect_nuclear_plant835, I) & violated(I, "shield835", Cmds) & (count(I, "shield835", Count) | (not(count(I, "shield835", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant835.
-!inspect_nuclear_plant835 : .intend(inspect_nuclear_plant835, I) & (count(I, "shield835", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield835"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant836 : true <- !inspect_nuclear_plant8361. 
+!inspect_nuclear_plant8361 : fast & .intend(inspect_nuclear_plant836, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield836_id1478_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield836", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield836", "G(add_belief(perc_rad836(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield836", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield836").
+!inspect_nuclear_plant836 : true <- !inspect_nuclear_plant8361. 
+!inspect_nuclear_plant8361 : true & .intend(inspect_nuclear_plant836, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield836_id1479_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield836", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield836", "G(add_belief(perc_rad836(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield836", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield836").
-!inspect_nuclear_plant836 : .intend(inspect_nuclear_plant836, I) & violated(I, "shield836", Cmds) & (count(I, "shield836", Count) | (not(count(I, "shield836", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant836.
-!inspect_nuclear_plant836 : .intend(inspect_nuclear_plant836, I) & (count(I, "shield836", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield836"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant837 : true <- !inspect_nuclear_plant8371. 
+!inspect_nuclear_plant8371 : fast & .intend(inspect_nuclear_plant837, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield837_id1480_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield837", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield837", "G(add_belief(perc_rad837(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield837", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield837").
+!inspect_nuclear_plant837 : true <- !inspect_nuclear_plant8371. 
+!inspect_nuclear_plant8371 : true & .intend(inspect_nuclear_plant837, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield837_id1481_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield837", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield837", "G(add_belief(perc_rad837(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield837", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield837").
-!inspect_nuclear_plant837 : .intend(inspect_nuclear_plant837, I) & violated(I, "shield837", Cmds) & (count(I, "shield837", Count) | (not(count(I, "shield837", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant837.
-!inspect_nuclear_plant837 : .intend(inspect_nuclear_plant837, I) & (count(I, "shield837", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield837"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant838 : true <- !inspect_nuclear_plant8381. 
+!inspect_nuclear_plant8381 : fast & .intend(inspect_nuclear_plant838, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield838_id1482_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield838", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield838", "G(add_belief(perc_rad838(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield838", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield838").
+!inspect_nuclear_plant838 : true <- !inspect_nuclear_plant8381. 
+!inspect_nuclear_plant8381 : true & .intend(inspect_nuclear_plant838, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield838_id1483_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield838", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield838", "G(add_belief(perc_rad838(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield838", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield838").
-!inspect_nuclear_plant838 : .intend(inspect_nuclear_plant838, I) & violated(I, "shield838", Cmds) & (count(I, "shield838", Count) | (not(count(I, "shield838", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant838.
-!inspect_nuclear_plant838 : .intend(inspect_nuclear_plant838, I) & (count(I, "shield838", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield838"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant839 : true <- !inspect_nuclear_plant8391. 
+!inspect_nuclear_plant8391 : fast & .intend(inspect_nuclear_plant839, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield839_id1484_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield839", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield839", "G(add_belief(perc_rad839(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield839", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield839").
+!inspect_nuclear_plant839 : true <- !inspect_nuclear_plant8391. 
+!inspect_nuclear_plant8391 : true & .intend(inspect_nuclear_plant839, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield839_id1485_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield839", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield839", "G(add_belief(perc_rad839(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield839", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield839").
-!inspect_nuclear_plant839 : .intend(inspect_nuclear_plant839, I) & violated(I, "shield839", Cmds) & (count(I, "shield839", Count) | (not(count(I, "shield839", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant839.
-!inspect_nuclear_plant839 : .intend(inspect_nuclear_plant839, I) & (count(I, "shield839", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield839"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant840 : true <- !inspect_nuclear_plant8401. 
+!inspect_nuclear_plant8401 : fast & .intend(inspect_nuclear_plant840, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield840_id1486_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield840", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield840", "G(add_belief(perc_rad840(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield840", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield840").
+!inspect_nuclear_plant840 : true <- !inspect_nuclear_plant8401. 
+!inspect_nuclear_plant8401 : true & .intend(inspect_nuclear_plant840, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield840_id1487_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield840", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield840", "G(add_belief(perc_rad840(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield840", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield840").
-!inspect_nuclear_plant840 : .intend(inspect_nuclear_plant840, I) & violated(I, "shield840", Cmds) & (count(I, "shield840", Count) | (not(count(I, "shield840", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant840.
-!inspect_nuclear_plant840 : .intend(inspect_nuclear_plant840, I) & (count(I, "shield840", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield840"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant841 : true <- !inspect_nuclear_plant8411. 
+!inspect_nuclear_plant8411 : fast & .intend(inspect_nuclear_plant841, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield841_id1488_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield841", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield841", "G(add_belief(perc_rad841(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield841", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield841").
+!inspect_nuclear_plant841 : true <- !inspect_nuclear_plant8411. 
+!inspect_nuclear_plant8411 : true & .intend(inspect_nuclear_plant841, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield841_id1489_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield841", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield841", "G(add_belief(perc_rad841(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield841", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield841").
-!inspect_nuclear_plant841 : .intend(inspect_nuclear_plant841, I) & violated(I, "shield841", Cmds) & (count(I, "shield841", Count) | (not(count(I, "shield841", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant841.
-!inspect_nuclear_plant841 : .intend(inspect_nuclear_plant841, I) & (count(I, "shield841", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield841"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant842 : true <- !inspect_nuclear_plant8421. 
+!inspect_nuclear_plant8421 : fast & .intend(inspect_nuclear_plant842, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield842_id1490_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield842", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield842", "G(add_belief(perc_rad842(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield842", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield842").
+!inspect_nuclear_plant842 : true <- !inspect_nuclear_plant8421. 
+!inspect_nuclear_plant8421 : true & .intend(inspect_nuclear_plant842, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield842_id1491_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield842", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield842", "G(add_belief(perc_rad842(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield842", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield842").
-!inspect_nuclear_plant842 : .intend(inspect_nuclear_plant842, I) & violated(I, "shield842", Cmds) & (count(I, "shield842", Count) | (not(count(I, "shield842", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant842.
-!inspect_nuclear_plant842 : .intend(inspect_nuclear_plant842, I) & (count(I, "shield842", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield842"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant843 : true <- !inspect_nuclear_plant8431. 
+!inspect_nuclear_plant8431 : fast & .intend(inspect_nuclear_plant843, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield843_id1492_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield843", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield843", "G(add_belief(perc_rad843(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield843", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield843").
+!inspect_nuclear_plant843 : true <- !inspect_nuclear_plant8431. 
+!inspect_nuclear_plant8431 : true & .intend(inspect_nuclear_plant843, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield843_id1493_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield843", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield843", "G(add_belief(perc_rad843(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield843", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield843").
-!inspect_nuclear_plant843 : .intend(inspect_nuclear_plant843, I) & violated(I, "shield843", Cmds) & (count(I, "shield843", Count) | (not(count(I, "shield843", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant843.
-!inspect_nuclear_plant843 : .intend(inspect_nuclear_plant843, I) & (count(I, "shield843", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield843"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant844 : true <- !inspect_nuclear_plant8441. 
+!inspect_nuclear_plant8441 : fast & .intend(inspect_nuclear_plant844, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield844_id1494_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield844", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield844", "G(add_belief(perc_rad844(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield844", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield844").
+!inspect_nuclear_plant844 : true <- !inspect_nuclear_plant8441. 
+!inspect_nuclear_plant8441 : true & .intend(inspect_nuclear_plant844, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield844_id1495_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield844", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield844", "G(add_belief(perc_rad844(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield844", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield844").
-!inspect_nuclear_plant844 : .intend(inspect_nuclear_plant844, I) & violated(I, "shield844", Cmds) & (count(I, "shield844", Count) | (not(count(I, "shield844", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant844.
-!inspect_nuclear_plant844 : .intend(inspect_nuclear_plant844, I) & (count(I, "shield844", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield844"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant845 : true <- !inspect_nuclear_plant8451. 
+!inspect_nuclear_plant8451 : fast & .intend(inspect_nuclear_plant845, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield845_id1496_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield845", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield845", "G(add_belief(perc_rad845(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield845", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield845").
+!inspect_nuclear_plant845 : true <- !inspect_nuclear_plant8451. 
+!inspect_nuclear_plant8451 : true & .intend(inspect_nuclear_plant845, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield845_id1497_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield845", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield845", "G(add_belief(perc_rad845(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield845", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield845").
-!inspect_nuclear_plant845 : .intend(inspect_nuclear_plant845, I) & violated(I, "shield845", Cmds) & (count(I, "shield845", Count) | (not(count(I, "shield845", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant845.
-!inspect_nuclear_plant845 : .intend(inspect_nuclear_plant845, I) & (count(I, "shield845", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield845"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant846 : true <- !inspect_nuclear_plant8461. 
+!inspect_nuclear_plant8461 : fast & .intend(inspect_nuclear_plant846, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield846_id1498_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield846", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield846", "G(add_belief(perc_rad846(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield846", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield846").
+!inspect_nuclear_plant846 : true <- !inspect_nuclear_plant8461. 
+!inspect_nuclear_plant8461 : true & .intend(inspect_nuclear_plant846, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield846_id1499_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield846", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield846", "G(add_belief(perc_rad846(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield846", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield846").
-!inspect_nuclear_plant846 : .intend(inspect_nuclear_plant846, I) & violated(I, "shield846", Cmds) & (count(I, "shield846", Count) | (not(count(I, "shield846", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant846.
-!inspect_nuclear_plant846 : .intend(inspect_nuclear_plant846, I) & (count(I, "shield846", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield846"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant847 : true <- !inspect_nuclear_plant8471. 
+!inspect_nuclear_plant8471 : fast & .intend(inspect_nuclear_plant847, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield847_id1500_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield847", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield847", "G(add_belief(perc_rad847(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield847", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield847").
+!inspect_nuclear_plant847 : true <- !inspect_nuclear_plant8471. 
+!inspect_nuclear_plant8471 : true & .intend(inspect_nuclear_plant847, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield847_id1501_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield847", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield847", "G(add_belief(perc_rad847(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield847", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield847").
-!inspect_nuclear_plant847 : .intend(inspect_nuclear_plant847, I) & violated(I, "shield847", Cmds) & (count(I, "shield847", Count) | (not(count(I, "shield847", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant847.
-!inspect_nuclear_plant847 : .intend(inspect_nuclear_plant847, I) & (count(I, "shield847", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield847"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant848 : true <- !inspect_nuclear_plant8481. 
+!inspect_nuclear_plant8481 : fast & .intend(inspect_nuclear_plant848, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield848_id1502_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield848", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield848", "G(add_belief(perc_rad848(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield848", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield848").
+!inspect_nuclear_plant848 : true <- !inspect_nuclear_plant8481. 
+!inspect_nuclear_plant8481 : true & .intend(inspect_nuclear_plant848, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield848_id1503_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield848", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield848", "G(add_belief(perc_rad848(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield848", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield848").
-!inspect_nuclear_plant848 : .intend(inspect_nuclear_plant848, I) & violated(I, "shield848", Cmds) & (count(I, "shield848", Count) | (not(count(I, "shield848", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant848.
-!inspect_nuclear_plant848 : .intend(inspect_nuclear_plant848, I) & (count(I, "shield848", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield848"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant849 : true <- !inspect_nuclear_plant8491. 
+!inspect_nuclear_plant8491 : fast & .intend(inspect_nuclear_plant849, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield849_id1504_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield849", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield849", "G(add_belief(perc_rad849(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield849", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield849").
+!inspect_nuclear_plant849 : true <- !inspect_nuclear_plant8491. 
+!inspect_nuclear_plant8491 : true & .intend(inspect_nuclear_plant849, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield849_id1505_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield849", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield849", "G(add_belief(perc_rad849(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield849", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield849").
-!inspect_nuclear_plant849 : .intend(inspect_nuclear_plant849, I) & violated(I, "shield849", Cmds) & (count(I, "shield849", Count) | (not(count(I, "shield849", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant849.
-!inspect_nuclear_plant849 : .intend(inspect_nuclear_plant849, I) & (count(I, "shield849", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield849"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant850 : true <- !inspect_nuclear_plant8501. 
+!inspect_nuclear_plant8501 : fast & .intend(inspect_nuclear_plant850, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield850_id1506_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield850", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield850", "G(add_belief(perc_rad850(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield850", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield850").
+!inspect_nuclear_plant850 : true <- !inspect_nuclear_plant8501. 
+!inspect_nuclear_plant8501 : true & .intend(inspect_nuclear_plant850, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield850_id1507_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield850", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield850", "G(add_belief(perc_rad850(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield850", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield850").
-!inspect_nuclear_plant850 : .intend(inspect_nuclear_plant850, I) & violated(I, "shield850", Cmds) & (count(I, "shield850", Count) | (not(count(I, "shield850", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant850.
-!inspect_nuclear_plant850 : .intend(inspect_nuclear_plant850, I) & (count(I, "shield850", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield850"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant851 : true <- !inspect_nuclear_plant8511. 
+!inspect_nuclear_plant8511 : fast & .intend(inspect_nuclear_plant851, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield851_id1508_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield851", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield851", "G(add_belief(perc_rad851(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield851", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield851").
+!inspect_nuclear_plant851 : true <- !inspect_nuclear_plant8511. 
+!inspect_nuclear_plant8511 : true & .intend(inspect_nuclear_plant851, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield851_id1509_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield851", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield851", "G(add_belief(perc_rad851(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield851", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield851").
-!inspect_nuclear_plant851 : .intend(inspect_nuclear_plant851, I) & violated(I, "shield851", Cmds) & (count(I, "shield851", Count) | (not(count(I, "shield851", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant851.
-!inspect_nuclear_plant851 : .intend(inspect_nuclear_plant851, I) & (count(I, "shield851", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield851"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant852 : true <- !inspect_nuclear_plant8521. 
+!inspect_nuclear_plant8521 : fast & .intend(inspect_nuclear_plant852, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield852_id1510_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield852", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield852", "G(add_belief(perc_rad852(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield852", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield852").
+!inspect_nuclear_plant852 : true <- !inspect_nuclear_plant8521. 
+!inspect_nuclear_plant8521 : true & .intend(inspect_nuclear_plant852, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield852_id1511_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield852", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield852", "G(add_belief(perc_rad852(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield852", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield852").
-!inspect_nuclear_plant852 : .intend(inspect_nuclear_plant852, I) & violated(I, "shield852", Cmds) & (count(I, "shield852", Count) | (not(count(I, "shield852", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant852.
-!inspect_nuclear_plant852 : .intend(inspect_nuclear_plant852, I) & (count(I, "shield852", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield852"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant853 : true <- !inspect_nuclear_plant8531. 
+!inspect_nuclear_plant8531 : fast & .intend(inspect_nuclear_plant853, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield853_id1512_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield853", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield853", "G(add_belief(perc_rad853(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield853", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield853").
+!inspect_nuclear_plant853 : true <- !inspect_nuclear_plant8531. 
+!inspect_nuclear_plant8531 : true & .intend(inspect_nuclear_plant853, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield853_id1513_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield853", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield853", "G(add_belief(perc_rad853(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield853", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield853").
-!inspect_nuclear_plant853 : .intend(inspect_nuclear_plant853, I) & violated(I, "shield853", Cmds) & (count(I, "shield853", Count) | (not(count(I, "shield853", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant853.
-!inspect_nuclear_plant853 : .intend(inspect_nuclear_plant853, I) & (count(I, "shield853", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield853"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant854 : true <- !inspect_nuclear_plant8541. 
+!inspect_nuclear_plant8541 : fast & .intend(inspect_nuclear_plant854, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield854_id1514_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield854", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield854", "G(add_belief(perc_rad854(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield854", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield854").
+!inspect_nuclear_plant854 : true <- !inspect_nuclear_plant8541. 
+!inspect_nuclear_plant8541 : true & .intend(inspect_nuclear_plant854, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield854_id1515_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield854", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield854", "G(add_belief(perc_rad854(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield854", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield854").
-!inspect_nuclear_plant854 : .intend(inspect_nuclear_plant854, I) & violated(I, "shield854", Cmds) & (count(I, "shield854", Count) | (not(count(I, "shield854", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant854.
-!inspect_nuclear_plant854 : .intend(inspect_nuclear_plant854, I) & (count(I, "shield854", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield854"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant855 : true <- !inspect_nuclear_plant8551. 
+!inspect_nuclear_plant8551 : fast & .intend(inspect_nuclear_plant855, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield855_id1516_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield855", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield855", "G(add_belief(perc_rad855(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield855", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield855").
+!inspect_nuclear_plant855 : true <- !inspect_nuclear_plant8551. 
+!inspect_nuclear_plant8551 : true & .intend(inspect_nuclear_plant855, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield855_id1517_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield855", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield855", "G(add_belief(perc_rad855(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield855", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield855").
-!inspect_nuclear_plant855 : .intend(inspect_nuclear_plant855, I) & violated(I, "shield855", Cmds) & (count(I, "shield855", Count) | (not(count(I, "shield855", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant855.
-!inspect_nuclear_plant855 : .intend(inspect_nuclear_plant855, I) & (count(I, "shield855", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield855"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant856 : true <- !inspect_nuclear_plant8561. 
+!inspect_nuclear_plant8561 : fast & .intend(inspect_nuclear_plant856, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield856_id1518_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield856", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield856", "G(add_belief(perc_rad856(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield856", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield856").
+!inspect_nuclear_plant856 : true <- !inspect_nuclear_plant8561. 
+!inspect_nuclear_plant8561 : true & .intend(inspect_nuclear_plant856, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield856_id1519_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield856", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield856", "G(add_belief(perc_rad856(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield856", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield856").
-!inspect_nuclear_plant856 : .intend(inspect_nuclear_plant856, I) & violated(I, "shield856", Cmds) & (count(I, "shield856", Count) | (not(count(I, "shield856", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant856.
-!inspect_nuclear_plant856 : .intend(inspect_nuclear_plant856, I) & (count(I, "shield856", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield856"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant857 : true <- !inspect_nuclear_plant8571. 
+!inspect_nuclear_plant8571 : fast & .intend(inspect_nuclear_plant857, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield857_id1520_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield857", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield857", "G(add_belief(perc_rad857(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield857", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield857").
+!inspect_nuclear_plant857 : true <- !inspect_nuclear_plant8571. 
+!inspect_nuclear_plant8571 : true & .intend(inspect_nuclear_plant857, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield857_id1521_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield857", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield857", "G(add_belief(perc_rad857(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield857", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield857").
-!inspect_nuclear_plant857 : .intend(inspect_nuclear_plant857, I) & violated(I, "shield857", Cmds) & (count(I, "shield857", Count) | (not(count(I, "shield857", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant857.
-!inspect_nuclear_plant857 : .intend(inspect_nuclear_plant857, I) & (count(I, "shield857", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield857"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant858 : true <- !inspect_nuclear_plant8581. 
+!inspect_nuclear_plant8581 : fast & .intend(inspect_nuclear_plant858, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield858_id1522_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield858", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield858", "G(add_belief(perc_rad858(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield858", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield858").
+!inspect_nuclear_plant858 : true <- !inspect_nuclear_plant8581. 
+!inspect_nuclear_plant8581 : true & .intend(inspect_nuclear_plant858, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield858_id1523_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield858", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield858", "G(add_belief(perc_rad858(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield858", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield858").
-!inspect_nuclear_plant858 : .intend(inspect_nuclear_plant858, I) & violated(I, "shield858", Cmds) & (count(I, "shield858", Count) | (not(count(I, "shield858", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant858.
-!inspect_nuclear_plant858 : .intend(inspect_nuclear_plant858, I) & (count(I, "shield858", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield858"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant859 : true <- !inspect_nuclear_plant8591. 
+!inspect_nuclear_plant8591 : fast & .intend(inspect_nuclear_plant859, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield859_id1524_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield859", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield859", "G(add_belief(perc_rad859(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield859", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield859").
+!inspect_nuclear_plant859 : true <- !inspect_nuclear_plant8591. 
+!inspect_nuclear_plant8591 : true & .intend(inspect_nuclear_plant859, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield859_id1525_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield859", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield859", "G(add_belief(perc_rad859(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield859", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield859").
-!inspect_nuclear_plant859 : .intend(inspect_nuclear_plant859, I) & violated(I, "shield859", Cmds) & (count(I, "shield859", Count) | (not(count(I, "shield859", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant859.
-!inspect_nuclear_plant859 : .intend(inspect_nuclear_plant859, I) & (count(I, "shield859", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield859"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant860 : true <- !inspect_nuclear_plant8601. 
+!inspect_nuclear_plant8601 : fast & .intend(inspect_nuclear_plant860, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield860_id1526_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield860", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield860", "G(add_belief(perc_rad860(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield860", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield860").
+!inspect_nuclear_plant860 : true <- !inspect_nuclear_plant8601. 
+!inspect_nuclear_plant8601 : true & .intend(inspect_nuclear_plant860, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield860_id1527_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield860", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield860", "G(add_belief(perc_rad860(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield860", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield860").
-!inspect_nuclear_plant860 : .intend(inspect_nuclear_plant860, I) & violated(I, "shield860", Cmds) & (count(I, "shield860", Count) | (not(count(I, "shield860", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant860.
-!inspect_nuclear_plant860 : .intend(inspect_nuclear_plant860, I) & (count(I, "shield860", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield860"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant861 : true <- !inspect_nuclear_plant8611. 
+!inspect_nuclear_plant8611 : fast & .intend(inspect_nuclear_plant861, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield861_id1528_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield861", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield861", "G(add_belief(perc_rad861(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield861", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield861").
+!inspect_nuclear_plant861 : true <- !inspect_nuclear_plant8611. 
+!inspect_nuclear_plant8611 : true & .intend(inspect_nuclear_plant861, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield861_id1529_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield861", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield861", "G(add_belief(perc_rad861(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield861", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield861").
-!inspect_nuclear_plant861 : .intend(inspect_nuclear_plant861, I) & violated(I, "shield861", Cmds) & (count(I, "shield861", Count) | (not(count(I, "shield861", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant861.
-!inspect_nuclear_plant861 : .intend(inspect_nuclear_plant861, I) & (count(I, "shield861", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield861"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant862 : true <- !inspect_nuclear_plant8621. 
+!inspect_nuclear_plant8621 : fast & .intend(inspect_nuclear_plant862, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield862_id1530_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield862", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield862", "G(add_belief(perc_rad862(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield862", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield862").
+!inspect_nuclear_plant862 : true <- !inspect_nuclear_plant8621. 
+!inspect_nuclear_plant8621 : true & .intend(inspect_nuclear_plant862, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield862_id1531_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield862", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield862", "G(add_belief(perc_rad862(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield862", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield862").
-!inspect_nuclear_plant862 : .intend(inspect_nuclear_plant862, I) & violated(I, "shield862", Cmds) & (count(I, "shield862", Count) | (not(count(I, "shield862", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant862.
-!inspect_nuclear_plant862 : .intend(inspect_nuclear_plant862, I) & (count(I, "shield862", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield862"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant863 : true <- !inspect_nuclear_plant8631. 
+!inspect_nuclear_plant8631 : fast & .intend(inspect_nuclear_plant863, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield863_id1532_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield863", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield863", "G(add_belief(perc_rad863(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield863", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield863").
+!inspect_nuclear_plant863 : true <- !inspect_nuclear_plant8631. 
+!inspect_nuclear_plant8631 : true & .intend(inspect_nuclear_plant863, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield863_id1533_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield863", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield863", "G(add_belief(perc_rad863(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield863", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield863").
-!inspect_nuclear_plant863 : .intend(inspect_nuclear_plant863, I) & violated(I, "shield863", Cmds) & (count(I, "shield863", Count) | (not(count(I, "shield863", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant863.
-!inspect_nuclear_plant863 : .intend(inspect_nuclear_plant863, I) & (count(I, "shield863", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield863"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant864 : true <- !inspect_nuclear_plant8641. 
+!inspect_nuclear_plant8641 : fast & .intend(inspect_nuclear_plant864, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield864_id1534_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield864", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield864", "G(add_belief(perc_rad864(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield864", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield864").
+!inspect_nuclear_plant864 : true <- !inspect_nuclear_plant8641. 
+!inspect_nuclear_plant8641 : true & .intend(inspect_nuclear_plant864, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield864_id1535_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield864", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield864", "G(add_belief(perc_rad864(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield864", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield864").
-!inspect_nuclear_plant864 : .intend(inspect_nuclear_plant864, I) & violated(I, "shield864", Cmds) & (count(I, "shield864", Count) | (not(count(I, "shield864", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant864.
-!inspect_nuclear_plant864 : .intend(inspect_nuclear_plant864, I) & (count(I, "shield864", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield864"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant865 : true <- !inspect_nuclear_plant8651. 
+!inspect_nuclear_plant8651 : fast & .intend(inspect_nuclear_plant865, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield865_id1536_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield865", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield865", "G(add_belief(perc_rad865(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield865", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield865").
+!inspect_nuclear_plant865 : true <- !inspect_nuclear_plant8651. 
+!inspect_nuclear_plant8651 : true & .intend(inspect_nuclear_plant865, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield865_id1537_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield865", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield865", "G(add_belief(perc_rad865(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield865", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield865").
-!inspect_nuclear_plant865 : .intend(inspect_nuclear_plant865, I) & violated(I, "shield865", Cmds) & (count(I, "shield865", Count) | (not(count(I, "shield865", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant865.
-!inspect_nuclear_plant865 : .intend(inspect_nuclear_plant865, I) & (count(I, "shield865", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield865"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant866 : true <- !inspect_nuclear_plant8661. 
+!inspect_nuclear_plant8661 : fast & .intend(inspect_nuclear_plant866, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield866_id1538_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield866", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield866", "G(add_belief(perc_rad866(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield866", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield866").
+!inspect_nuclear_plant866 : true <- !inspect_nuclear_plant8661. 
+!inspect_nuclear_plant8661 : true & .intend(inspect_nuclear_plant866, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield866_id1539_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield866", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield866", "G(add_belief(perc_rad866(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield866", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield866").
-!inspect_nuclear_plant866 : .intend(inspect_nuclear_plant866, I) & violated(I, "shield866", Cmds) & (count(I, "shield866", Count) | (not(count(I, "shield866", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant866.
-!inspect_nuclear_plant866 : .intend(inspect_nuclear_plant866, I) & (count(I, "shield866", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield866"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant867 : true <- !inspect_nuclear_plant8671. 
+!inspect_nuclear_plant8671 : fast & .intend(inspect_nuclear_plant867, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield867_id1540_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield867", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield867", "G(add_belief(perc_rad867(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield867", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield867").
+!inspect_nuclear_plant867 : true <- !inspect_nuclear_plant8671. 
+!inspect_nuclear_plant8671 : true & .intend(inspect_nuclear_plant867, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield867_id1541_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield867", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield867", "G(add_belief(perc_rad867(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield867", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield867").
-!inspect_nuclear_plant867 : .intend(inspect_nuclear_plant867, I) & violated(I, "shield867", Cmds) & (count(I, "shield867", Count) | (not(count(I, "shield867", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant867.
-!inspect_nuclear_plant867 : .intend(inspect_nuclear_plant867, I) & (count(I, "shield867", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield867"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant868 : true <- !inspect_nuclear_plant8681. 
+!inspect_nuclear_plant8681 : fast & .intend(inspect_nuclear_plant868, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield868_id1542_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield868", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield868", "G(add_belief(perc_rad868(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield868", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield868").
+!inspect_nuclear_plant868 : true <- !inspect_nuclear_plant8681. 
+!inspect_nuclear_plant8681 : true & .intend(inspect_nuclear_plant868, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield868_id1543_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield868", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield868", "G(add_belief(perc_rad868(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield868", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield868").
-!inspect_nuclear_plant868 : .intend(inspect_nuclear_plant868, I) & violated(I, "shield868", Cmds) & (count(I, "shield868", Count) | (not(count(I, "shield868", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant868.
-!inspect_nuclear_plant868 : .intend(inspect_nuclear_plant868, I) & (count(I, "shield868", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield868"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant869 : true <- !inspect_nuclear_plant8691. 
+!inspect_nuclear_plant8691 : fast & .intend(inspect_nuclear_plant869, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield869_id1544_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield869", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield869", "G(add_belief(perc_rad869(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield869", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield869").
+!inspect_nuclear_plant869 : true <- !inspect_nuclear_plant8691. 
+!inspect_nuclear_plant8691 : true & .intend(inspect_nuclear_plant869, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield869_id1545_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield869", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield869", "G(add_belief(perc_rad869(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield869", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield869").
-!inspect_nuclear_plant869 : .intend(inspect_nuclear_plant869, I) & violated(I, "shield869", Cmds) & (count(I, "shield869", Count) | (not(count(I, "shield869", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant869.
-!inspect_nuclear_plant869 : .intend(inspect_nuclear_plant869, I) & (count(I, "shield869", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield869"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant870 : true <- !inspect_nuclear_plant8701. 
+!inspect_nuclear_plant8701 : fast & .intend(inspect_nuclear_plant870, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield870_id1546_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield870", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield870", "G(add_belief(perc_rad870(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield870", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield870").
+!inspect_nuclear_plant870 : true <- !inspect_nuclear_plant8701. 
+!inspect_nuclear_plant8701 : true & .intend(inspect_nuclear_plant870, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield870_id1547_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield870", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield870", "G(add_belief(perc_rad870(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield870", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield870").
-!inspect_nuclear_plant870 : .intend(inspect_nuclear_plant870, I) & violated(I, "shield870", Cmds) & (count(I, "shield870", Count) | (not(count(I, "shield870", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant870.
-!inspect_nuclear_plant870 : .intend(inspect_nuclear_plant870, I) & (count(I, "shield870", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield870"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant871 : true <- !inspect_nuclear_plant8711. 
+!inspect_nuclear_plant8711 : fast & .intend(inspect_nuclear_plant871, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield871_id1548_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield871", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield871", "G(add_belief(perc_rad871(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield871", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield871").
+!inspect_nuclear_plant871 : true <- !inspect_nuclear_plant8711. 
+!inspect_nuclear_plant8711 : true & .intend(inspect_nuclear_plant871, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield871_id1549_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield871", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield871", "G(add_belief(perc_rad871(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield871", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield871").
-!inspect_nuclear_plant871 : .intend(inspect_nuclear_plant871, I) & violated(I, "shield871", Cmds) & (count(I, "shield871", Count) | (not(count(I, "shield871", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant871.
-!inspect_nuclear_plant871 : .intend(inspect_nuclear_plant871, I) & (count(I, "shield871", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield871"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant872 : true <- !inspect_nuclear_plant8721. 
+!inspect_nuclear_plant8721 : fast & .intend(inspect_nuclear_plant872, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield872_id1550_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield872", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield872", "G(add_belief(perc_rad872(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield872", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield872").
+!inspect_nuclear_plant872 : true <- !inspect_nuclear_plant8721. 
+!inspect_nuclear_plant8721 : true & .intend(inspect_nuclear_plant872, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield872_id1551_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield872", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield872", "G(add_belief(perc_rad872(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield872", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield872").
-!inspect_nuclear_plant872 : .intend(inspect_nuclear_plant872, I) & violated(I, "shield872", Cmds) & (count(I, "shield872", Count) | (not(count(I, "shield872", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant872.
-!inspect_nuclear_plant872 : .intend(inspect_nuclear_plant872, I) & (count(I, "shield872", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield872"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant873 : true <- !inspect_nuclear_plant8731. 
+!inspect_nuclear_plant8731 : fast & .intend(inspect_nuclear_plant873, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield873_id1552_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield873", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield873", "G(add_belief(perc_rad873(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield873", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield873").
+!inspect_nuclear_plant873 : true <- !inspect_nuclear_plant8731. 
+!inspect_nuclear_plant8731 : true & .intend(inspect_nuclear_plant873, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield873_id1553_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield873", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield873", "G(add_belief(perc_rad873(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield873", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield873").
-!inspect_nuclear_plant873 : .intend(inspect_nuclear_plant873, I) & violated(I, "shield873", Cmds) & (count(I, "shield873", Count) | (not(count(I, "shield873", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant873.
-!inspect_nuclear_plant873 : .intend(inspect_nuclear_plant873, I) & (count(I, "shield873", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield873"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant874 : true <- !inspect_nuclear_plant8741. 
+!inspect_nuclear_plant8741 : fast & .intend(inspect_nuclear_plant874, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield874_id1554_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield874", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield874", "G(add_belief(perc_rad874(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield874", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield874").
+!inspect_nuclear_plant874 : true <- !inspect_nuclear_plant8741. 
+!inspect_nuclear_plant8741 : true & .intend(inspect_nuclear_plant874, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield874_id1555_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield874", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield874", "G(add_belief(perc_rad874(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield874", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield874").
-!inspect_nuclear_plant874 : .intend(inspect_nuclear_plant874, I) & violated(I, "shield874", Cmds) & (count(I, "shield874", Count) | (not(count(I, "shield874", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant874.
-!inspect_nuclear_plant874 : .intend(inspect_nuclear_plant874, I) & (count(I, "shield874", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield874"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant875 : true <- !inspect_nuclear_plant8751. 
+!inspect_nuclear_plant8751 : fast & .intend(inspect_nuclear_plant875, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield875_id1556_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield875", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield875", "G(add_belief(perc_rad875(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield875", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield875").
+!inspect_nuclear_plant875 : true <- !inspect_nuclear_plant8751. 
+!inspect_nuclear_plant8751 : true & .intend(inspect_nuclear_plant875, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield875_id1557_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield875", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield875", "G(add_belief(perc_rad875(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield875", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield875").
-!inspect_nuclear_plant875 : .intend(inspect_nuclear_plant875, I) & violated(I, "shield875", Cmds) & (count(I, "shield875", Count) | (not(count(I, "shield875", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant875.
-!inspect_nuclear_plant875 : .intend(inspect_nuclear_plant875, I) & (count(I, "shield875", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield875"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant876 : true <- !inspect_nuclear_plant8761. 
+!inspect_nuclear_plant8761 : fast & .intend(inspect_nuclear_plant876, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield876_id1558_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield876", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield876", "G(add_belief(perc_rad876(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield876", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield876").
+!inspect_nuclear_plant876 : true <- !inspect_nuclear_plant8761. 
+!inspect_nuclear_plant8761 : true & .intend(inspect_nuclear_plant876, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield876_id1559_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield876", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield876", "G(add_belief(perc_rad876(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield876", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield876").
-!inspect_nuclear_plant876 : .intend(inspect_nuclear_plant876, I) & violated(I, "shield876", Cmds) & (count(I, "shield876", Count) | (not(count(I, "shield876", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant876.
-!inspect_nuclear_plant876 : .intend(inspect_nuclear_plant876, I) & (count(I, "shield876", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield876"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant877 : true <- !inspect_nuclear_plant8771. 
+!inspect_nuclear_plant8771 : fast & .intend(inspect_nuclear_plant877, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield877_id1560_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield877", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield877", "G(add_belief(perc_rad877(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield877", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield877").
+!inspect_nuclear_plant877 : true <- !inspect_nuclear_plant8771. 
+!inspect_nuclear_plant8771 : true & .intend(inspect_nuclear_plant877, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield877_id1561_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield877", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield877", "G(add_belief(perc_rad877(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield877", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield877").
-!inspect_nuclear_plant877 : .intend(inspect_nuclear_plant877, I) & violated(I, "shield877", Cmds) & (count(I, "shield877", Count) | (not(count(I, "shield877", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant877.
-!inspect_nuclear_plant877 : .intend(inspect_nuclear_plant877, I) & (count(I, "shield877", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield877"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant878 : true <- !inspect_nuclear_plant8781. 
+!inspect_nuclear_plant8781 : fast & .intend(inspect_nuclear_plant878, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield878_id1562_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield878", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield878", "G(add_belief(perc_rad878(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield878", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield878").
+!inspect_nuclear_plant878 : true <- !inspect_nuclear_plant8781. 
+!inspect_nuclear_plant8781 : true & .intend(inspect_nuclear_plant878, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield878_id1563_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield878", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield878", "G(add_belief(perc_rad878(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield878", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield878").
-!inspect_nuclear_plant878 : .intend(inspect_nuclear_plant878, I) & violated(I, "shield878", Cmds) & (count(I, "shield878", Count) | (not(count(I, "shield878", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant878.
-!inspect_nuclear_plant878 : .intend(inspect_nuclear_plant878, I) & (count(I, "shield878", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield878"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant879 : true <- !inspect_nuclear_plant8791. 
+!inspect_nuclear_plant8791 : fast & .intend(inspect_nuclear_plant879, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield879_id1564_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield879", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield879", "G(add_belief(perc_rad879(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield879", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield879").
+!inspect_nuclear_plant879 : true <- !inspect_nuclear_plant8791. 
+!inspect_nuclear_plant8791 : true & .intend(inspect_nuclear_plant879, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield879_id1565_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield879", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield879", "G(add_belief(perc_rad879(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield879", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield879").
-!inspect_nuclear_plant879 : .intend(inspect_nuclear_plant879, I) & violated(I, "shield879", Cmds) & (count(I, "shield879", Count) | (not(count(I, "shield879", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant879.
-!inspect_nuclear_plant879 : .intend(inspect_nuclear_plant879, I) & (count(I, "shield879", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield879"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant880 : true <- !inspect_nuclear_plant8801. 
+!inspect_nuclear_plant8801 : fast & .intend(inspect_nuclear_plant880, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield880_id1566_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield880", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield880", "G(add_belief(perc_rad880(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield880", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield880").
+!inspect_nuclear_plant880 : true <- !inspect_nuclear_plant8801. 
+!inspect_nuclear_plant8801 : true & .intend(inspect_nuclear_plant880, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield880_id1567_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield880", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield880", "G(add_belief(perc_rad880(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield880", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield880").
-!inspect_nuclear_plant880 : .intend(inspect_nuclear_plant880, I) & violated(I, "shield880", Cmds) & (count(I, "shield880", Count) | (not(count(I, "shield880", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant880.
-!inspect_nuclear_plant880 : .intend(inspect_nuclear_plant880, I) & (count(I, "shield880", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield880"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant881 : true <- !inspect_nuclear_plant8811. 
+!inspect_nuclear_plant8811 : fast & .intend(inspect_nuclear_plant881, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield881_id1568_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield881", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield881", "G(add_belief(perc_rad881(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield881", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield881").
+!inspect_nuclear_plant881 : true <- !inspect_nuclear_plant8811. 
+!inspect_nuclear_plant8811 : true & .intend(inspect_nuclear_plant881, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield881_id1569_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield881", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield881", "G(add_belief(perc_rad881(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield881", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield881").
-!inspect_nuclear_plant881 : .intend(inspect_nuclear_plant881, I) & violated(I, "shield881", Cmds) & (count(I, "shield881", Count) | (not(count(I, "shield881", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant881.
-!inspect_nuclear_plant881 : .intend(inspect_nuclear_plant881, I) & (count(I, "shield881", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield881"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant882 : true <- !inspect_nuclear_plant8821. 
+!inspect_nuclear_plant8821 : fast & .intend(inspect_nuclear_plant882, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield882_id1570_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield882", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield882", "G(add_belief(perc_rad882(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield882", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield882").
+!inspect_nuclear_plant882 : true <- !inspect_nuclear_plant8821. 
+!inspect_nuclear_plant8821 : true & .intend(inspect_nuclear_plant882, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield882_id1571_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield882", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield882", "G(add_belief(perc_rad882(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield882", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield882").
-!inspect_nuclear_plant882 : .intend(inspect_nuclear_plant882, I) & violated(I, "shield882", Cmds) & (count(I, "shield882", Count) | (not(count(I, "shield882", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant882.
-!inspect_nuclear_plant882 : .intend(inspect_nuclear_plant882, I) & (count(I, "shield882", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield882"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant883 : true <- !inspect_nuclear_plant8831. 
+!inspect_nuclear_plant8831 : fast & .intend(inspect_nuclear_plant883, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield883_id1572_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield883", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield883", "G(add_belief(perc_rad883(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield883", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield883").
+!inspect_nuclear_plant883 : true <- !inspect_nuclear_plant8831. 
+!inspect_nuclear_plant8831 : true & .intend(inspect_nuclear_plant883, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield883_id1573_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield883", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield883", "G(add_belief(perc_rad883(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield883", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield883").
-!inspect_nuclear_plant883 : .intend(inspect_nuclear_plant883, I) & violated(I, "shield883", Cmds) & (count(I, "shield883", Count) | (not(count(I, "shield883", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant883.
-!inspect_nuclear_plant883 : .intend(inspect_nuclear_plant883, I) & (count(I, "shield883", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield883"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant884 : true <- !inspect_nuclear_plant8841. 
+!inspect_nuclear_plant8841 : fast & .intend(inspect_nuclear_plant884, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield884_id1574_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield884", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield884", "G(add_belief(perc_rad884(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield884", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield884").
+!inspect_nuclear_plant884 : true <- !inspect_nuclear_plant8841. 
+!inspect_nuclear_plant8841 : true & .intend(inspect_nuclear_plant884, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield884_id1575_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield884", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield884", "G(add_belief(perc_rad884(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield884", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield884").
-!inspect_nuclear_plant884 : .intend(inspect_nuclear_plant884, I) & violated(I, "shield884", Cmds) & (count(I, "shield884", Count) | (not(count(I, "shield884", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant884.
-!inspect_nuclear_plant884 : .intend(inspect_nuclear_plant884, I) & (count(I, "shield884", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield884"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant885 : true <- !inspect_nuclear_plant8851. 
+!inspect_nuclear_plant8851 : fast & .intend(inspect_nuclear_plant885, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield885_id1576_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield885", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield885", "G(add_belief(perc_rad885(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield885", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield885").
+!inspect_nuclear_plant885 : true <- !inspect_nuclear_plant8851. 
+!inspect_nuclear_plant8851 : true & .intend(inspect_nuclear_plant885, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield885_id1577_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield885", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield885", "G(add_belief(perc_rad885(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield885", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield885").
-!inspect_nuclear_plant885 : .intend(inspect_nuclear_plant885, I) & violated(I, "shield885", Cmds) & (count(I, "shield885", Count) | (not(count(I, "shield885", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant885.
-!inspect_nuclear_plant885 : .intend(inspect_nuclear_plant885, I) & (count(I, "shield885", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield885"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant886 : true <- !inspect_nuclear_plant8861. 
+!inspect_nuclear_plant8861 : fast & .intend(inspect_nuclear_plant886, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield886_id1578_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield886", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield886", "G(add_belief(perc_rad886(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield886", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield886").
+!inspect_nuclear_plant886 : true <- !inspect_nuclear_plant8861. 
+!inspect_nuclear_plant8861 : true & .intend(inspect_nuclear_plant886, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield886_id1579_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield886", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield886", "G(add_belief(perc_rad886(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield886", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield886").
-!inspect_nuclear_plant886 : .intend(inspect_nuclear_plant886, I) & violated(I, "shield886", Cmds) & (count(I, "shield886", Count) | (not(count(I, "shield886", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant886.
-!inspect_nuclear_plant886 : .intend(inspect_nuclear_plant886, I) & (count(I, "shield886", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield886"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant887 : true <- !inspect_nuclear_plant8871. 
+!inspect_nuclear_plant8871 : fast & .intend(inspect_nuclear_plant887, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield887_id1580_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield887", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield887", "G(add_belief(perc_rad887(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield887", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield887").
+!inspect_nuclear_plant887 : true <- !inspect_nuclear_plant8871. 
+!inspect_nuclear_plant8871 : true & .intend(inspect_nuclear_plant887, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield887_id1581_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield887", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield887", "G(add_belief(perc_rad887(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield887", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield887").
-!inspect_nuclear_plant887 : .intend(inspect_nuclear_plant887, I) & violated(I, "shield887", Cmds) & (count(I, "shield887", Count) | (not(count(I, "shield887", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant887.
-!inspect_nuclear_plant887 : .intend(inspect_nuclear_plant887, I) & (count(I, "shield887", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield887"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant888 : true <- !inspect_nuclear_plant8881. 
+!inspect_nuclear_plant8881 : fast & .intend(inspect_nuclear_plant888, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield888_id1582_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield888", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield888", "G(add_belief(perc_rad888(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield888", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield888").
+!inspect_nuclear_plant888 : true <- !inspect_nuclear_plant8881. 
+!inspect_nuclear_plant8881 : true & .intend(inspect_nuclear_plant888, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield888_id1583_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield888", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield888", "G(add_belief(perc_rad888(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield888", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield888").
-!inspect_nuclear_plant888 : .intend(inspect_nuclear_plant888, I) & violated(I, "shield888", Cmds) & (count(I, "shield888", Count) | (not(count(I, "shield888", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant888.
-!inspect_nuclear_plant888 : .intend(inspect_nuclear_plant888, I) & (count(I, "shield888", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield888"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant889 : true <- !inspect_nuclear_plant8891. 
+!inspect_nuclear_plant8891 : fast & .intend(inspect_nuclear_plant889, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield889_id1584_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield889", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield889", "G(add_belief(perc_rad889(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield889", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield889").
+!inspect_nuclear_plant889 : true <- !inspect_nuclear_plant8891. 
+!inspect_nuclear_plant8891 : true & .intend(inspect_nuclear_plant889, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield889_id1585_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield889", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield889", "G(add_belief(perc_rad889(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield889", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield889").
-!inspect_nuclear_plant889 : .intend(inspect_nuclear_plant889, I) & violated(I, "shield889", Cmds) & (count(I, "shield889", Count) | (not(count(I, "shield889", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant889.
-!inspect_nuclear_plant889 : .intend(inspect_nuclear_plant889, I) & (count(I, "shield889", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield889"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant890 : true <- !inspect_nuclear_plant8901. 
+!inspect_nuclear_plant8901 : fast & .intend(inspect_nuclear_plant890, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield890_id1586_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield890", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield890", "G(add_belief(perc_rad890(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield890", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield890").
+!inspect_nuclear_plant890 : true <- !inspect_nuclear_plant8901. 
+!inspect_nuclear_plant8901 : true & .intend(inspect_nuclear_plant890, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield890_id1587_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield890", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield890", "G(add_belief(perc_rad890(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield890", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield890").
-!inspect_nuclear_plant890 : .intend(inspect_nuclear_plant890, I) & violated(I, "shield890", Cmds) & (count(I, "shield890", Count) | (not(count(I, "shield890", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant890.
-!inspect_nuclear_plant890 : .intend(inspect_nuclear_plant890, I) & (count(I, "shield890", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield890"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant891 : true <- !inspect_nuclear_plant8911. 
+!inspect_nuclear_plant8911 : fast & .intend(inspect_nuclear_plant891, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield891_id1588_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield891", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield891", "G(add_belief(perc_rad891(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield891", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield891").
+!inspect_nuclear_plant891 : true <- !inspect_nuclear_plant8911. 
+!inspect_nuclear_plant8911 : true & .intend(inspect_nuclear_plant891, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield891_id1589_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield891", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield891", "G(add_belief(perc_rad891(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield891", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield891").
-!inspect_nuclear_plant891 : .intend(inspect_nuclear_plant891, I) & violated(I, "shield891", Cmds) & (count(I, "shield891", Count) | (not(count(I, "shield891", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant891.
-!inspect_nuclear_plant891 : .intend(inspect_nuclear_plant891, I) & (count(I, "shield891", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield891"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant892 : true <- !inspect_nuclear_plant8921. 
+!inspect_nuclear_plant8921 : fast & .intend(inspect_nuclear_plant892, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield892_id1590_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield892", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield892", "G(add_belief(perc_rad892(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield892", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield892").
+!inspect_nuclear_plant892 : true <- !inspect_nuclear_plant8921. 
+!inspect_nuclear_plant8921 : true & .intend(inspect_nuclear_plant892, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield892_id1591_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield892", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield892", "G(add_belief(perc_rad892(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield892", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield892").
-!inspect_nuclear_plant892 : .intend(inspect_nuclear_plant892, I) & violated(I, "shield892", Cmds) & (count(I, "shield892", Count) | (not(count(I, "shield892", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant892.
-!inspect_nuclear_plant892 : .intend(inspect_nuclear_plant892, I) & (count(I, "shield892", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield892"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant893 : true <- !inspect_nuclear_plant8931. 
+!inspect_nuclear_plant8931 : fast & .intend(inspect_nuclear_plant893, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield893_id1592_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield893", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield893", "G(add_belief(perc_rad893(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield893", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield893").
+!inspect_nuclear_plant893 : true <- !inspect_nuclear_plant8931. 
+!inspect_nuclear_plant8931 : true & .intend(inspect_nuclear_plant893, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield893_id1593_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield893", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield893", "G(add_belief(perc_rad893(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield893", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield893").
-!inspect_nuclear_plant893 : .intend(inspect_nuclear_plant893, I) & violated(I, "shield893", Cmds) & (count(I, "shield893", Count) | (not(count(I, "shield893", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant893.
-!inspect_nuclear_plant893 : .intend(inspect_nuclear_plant893, I) & (count(I, "shield893", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield893"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant894 : true <- !inspect_nuclear_plant8941. 
+!inspect_nuclear_plant8941 : fast & .intend(inspect_nuclear_plant894, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield894_id1594_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield894", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield894", "G(add_belief(perc_rad894(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield894", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield894").
+!inspect_nuclear_plant894 : true <- !inspect_nuclear_plant8941. 
+!inspect_nuclear_plant8941 : true & .intend(inspect_nuclear_plant894, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield894_id1595_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield894", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield894", "G(add_belief(perc_rad894(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield894", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield894").
-!inspect_nuclear_plant894 : .intend(inspect_nuclear_plant894, I) & violated(I, "shield894", Cmds) & (count(I, "shield894", Count) | (not(count(I, "shield894", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant894.
-!inspect_nuclear_plant894 : .intend(inspect_nuclear_plant894, I) & (count(I, "shield894", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield894"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant895 : true <- !inspect_nuclear_plant8951. 
+!inspect_nuclear_plant8951 : fast & .intend(inspect_nuclear_plant895, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield895_id1596_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield895", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield895", "G(add_belief(perc_rad895(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield895", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield895").
+!inspect_nuclear_plant895 : true <- !inspect_nuclear_plant8951. 
+!inspect_nuclear_plant8951 : true & .intend(inspect_nuclear_plant895, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield895_id1597_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield895", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield895", "G(add_belief(perc_rad895(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield895", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield895").
-!inspect_nuclear_plant895 : .intend(inspect_nuclear_plant895, I) & violated(I, "shield895", Cmds) & (count(I, "shield895", Count) | (not(count(I, "shield895", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant895.
-!inspect_nuclear_plant895 : .intend(inspect_nuclear_plant895, I) & (count(I, "shield895", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield895"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant896 : true <- !inspect_nuclear_plant8961. 
+!inspect_nuclear_plant8961 : fast & .intend(inspect_nuclear_plant896, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield896_id1598_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield896", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield896", "G(add_belief(perc_rad896(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield896", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield896").
+!inspect_nuclear_plant896 : true <- !inspect_nuclear_plant8961. 
+!inspect_nuclear_plant8961 : true & .intend(inspect_nuclear_plant896, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield896_id1599_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield896", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield896", "G(add_belief(perc_rad896(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield896", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield896").
-!inspect_nuclear_plant896 : .intend(inspect_nuclear_plant896, I) & violated(I, "shield896", Cmds) & (count(I, "shield896", Count) | (not(count(I, "shield896", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant896.
-!inspect_nuclear_plant896 : .intend(inspect_nuclear_plant896, I) & (count(I, "shield896", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield896"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant897 : true <- !inspect_nuclear_plant8971. 
+!inspect_nuclear_plant8971 : fast & .intend(inspect_nuclear_plant897, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield897_id1600_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield897", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield897", "G(add_belief(perc_rad897(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield897", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield897").
+!inspect_nuclear_plant897 : true <- !inspect_nuclear_plant8971. 
+!inspect_nuclear_plant8971 : true & .intend(inspect_nuclear_plant897, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield897_id1601_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield897", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield897", "G(add_belief(perc_rad897(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield897", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield897").
-!inspect_nuclear_plant897 : .intend(inspect_nuclear_plant897, I) & violated(I, "shield897", Cmds) & (count(I, "shield897", Count) | (not(count(I, "shield897", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant897.
-!inspect_nuclear_plant897 : .intend(inspect_nuclear_plant897, I) & (count(I, "shield897", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield897"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant898 : true <- !inspect_nuclear_plant8981. 
+!inspect_nuclear_plant8981 : fast & .intend(inspect_nuclear_plant898, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield898_id1602_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield898", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield898", "G(add_belief(perc_rad898(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield898", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield898").
+!inspect_nuclear_plant898 : true <- !inspect_nuclear_plant8981. 
+!inspect_nuclear_plant8981 : true & .intend(inspect_nuclear_plant898, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield898_id1603_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield898", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield898", "G(add_belief(perc_rad898(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield898", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield898").
-!inspect_nuclear_plant898 : .intend(inspect_nuclear_plant898, I) & violated(I, "shield898", Cmds) & (count(I, "shield898", Count) | (not(count(I, "shield898", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant898.
-!inspect_nuclear_plant898 : .intend(inspect_nuclear_plant898, I) & (count(I, "shield898", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield898"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant899 : true <- !inspect_nuclear_plant8991. 
+!inspect_nuclear_plant8991 : fast & .intend(inspect_nuclear_plant899, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield899_id1604_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield899", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield899", "G(add_belief(perc_rad899(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield899", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield899").
+!inspect_nuclear_plant899 : true <- !inspect_nuclear_plant8991. 
+!inspect_nuclear_plant8991 : true & .intend(inspect_nuclear_plant899, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield899_id1605_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield899", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield899", "G(add_belief(perc_rad899(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield899", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield899").
-!inspect_nuclear_plant899 : .intend(inspect_nuclear_plant899, I) & violated(I, "shield899", Cmds) & (count(I, "shield899", Count) | (not(count(I, "shield899", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant899.
-!inspect_nuclear_plant899 : .intend(inspect_nuclear_plant899, I) & (count(I, "shield899", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield899"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant900 : true <- !inspect_nuclear_plant9001. 
+!inspect_nuclear_plant9001 : fast & .intend(inspect_nuclear_plant900, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield900_id1606_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield900", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield900", "G(add_belief(perc_rad900(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield900", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield900").
+!inspect_nuclear_plant900 : true <- !inspect_nuclear_plant9001. 
+!inspect_nuclear_plant9001 : true & .intend(inspect_nuclear_plant900, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield900_id1607_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield900", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield900", "G(add_belief(perc_rad900(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield900", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield900").
-!inspect_nuclear_plant900 : .intend(inspect_nuclear_plant900, I) & violated(I, "shield900", Cmds) & (count(I, "shield900", Count) | (not(count(I, "shield900", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant900.
-!inspect_nuclear_plant900 : .intend(inspect_nuclear_plant900, I) & (count(I, "shield900", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield900"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant901 : true <- !inspect_nuclear_plant9011. 
+!inspect_nuclear_plant9011 : fast & .intend(inspect_nuclear_plant901, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield901_id1608_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield901", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield901", "G(add_belief(perc_rad901(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield901", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield901").
+!inspect_nuclear_plant901 : true <- !inspect_nuclear_plant9011. 
+!inspect_nuclear_plant9011 : true & .intend(inspect_nuclear_plant901, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield901_id1609_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield901", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield901", "G(add_belief(perc_rad901(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield901", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield901").
-!inspect_nuclear_plant901 : .intend(inspect_nuclear_plant901, I) & violated(I, "shield901", Cmds) & (count(I, "shield901", Count) | (not(count(I, "shield901", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant901.
-!inspect_nuclear_plant901 : .intend(inspect_nuclear_plant901, I) & (count(I, "shield901", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield901"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant902 : true <- !inspect_nuclear_plant9021. 
+!inspect_nuclear_plant9021 : fast & .intend(inspect_nuclear_plant902, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield902_id1610_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield902", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield902", "G(add_belief(perc_rad902(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield902", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield902").
+!inspect_nuclear_plant902 : true <- !inspect_nuclear_plant9021. 
+!inspect_nuclear_plant9021 : true & .intend(inspect_nuclear_plant902, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield902_id1611_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield902", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield902", "G(add_belief(perc_rad902(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield902", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield902").
-!inspect_nuclear_plant902 : .intend(inspect_nuclear_plant902, I) & violated(I, "shield902", Cmds) & (count(I, "shield902", Count) | (not(count(I, "shield902", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant902.
-!inspect_nuclear_plant902 : .intend(inspect_nuclear_plant902, I) & (count(I, "shield902", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield902"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant903 : true <- !inspect_nuclear_plant9031. 
+!inspect_nuclear_plant9031 : fast & .intend(inspect_nuclear_plant903, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield903_id1612_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield903", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield903", "G(add_belief(perc_rad903(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield903", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield903").
+!inspect_nuclear_plant903 : true <- !inspect_nuclear_plant9031. 
+!inspect_nuclear_plant9031 : true & .intend(inspect_nuclear_plant903, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield903_id1613_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield903", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield903", "G(add_belief(perc_rad903(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield903", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield903").
-!inspect_nuclear_plant903 : .intend(inspect_nuclear_plant903, I) & violated(I, "shield903", Cmds) & (count(I, "shield903", Count) | (not(count(I, "shield903", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant903.
-!inspect_nuclear_plant903 : .intend(inspect_nuclear_plant903, I) & (count(I, "shield903", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield903"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant904 : true <- !inspect_nuclear_plant9041. 
+!inspect_nuclear_plant9041 : fast & .intend(inspect_nuclear_plant904, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield904_id1614_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield904", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield904", "G(add_belief(perc_rad904(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield904", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield904").
+!inspect_nuclear_plant904 : true <- !inspect_nuclear_plant9041. 
+!inspect_nuclear_plant9041 : true & .intend(inspect_nuclear_plant904, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield904_id1615_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield904", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield904", "G(add_belief(perc_rad904(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield904", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield904").
-!inspect_nuclear_plant904 : .intend(inspect_nuclear_plant904, I) & violated(I, "shield904", Cmds) & (count(I, "shield904", Count) | (not(count(I, "shield904", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant904.
-!inspect_nuclear_plant904 : .intend(inspect_nuclear_plant904, I) & (count(I, "shield904", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield904"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant905 : true <- !inspect_nuclear_plant9051. 
+!inspect_nuclear_plant9051 : fast & .intend(inspect_nuclear_plant905, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield905_id1616_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield905", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield905", "G(add_belief(perc_rad905(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield905", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield905").
+!inspect_nuclear_plant905 : true <- !inspect_nuclear_plant9051. 
+!inspect_nuclear_plant9051 : true & .intend(inspect_nuclear_plant905, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield905_id1617_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield905", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield905", "G(add_belief(perc_rad905(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield905", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield905").
-!inspect_nuclear_plant905 : .intend(inspect_nuclear_plant905, I) & violated(I, "shield905", Cmds) & (count(I, "shield905", Count) | (not(count(I, "shield905", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant905.
-!inspect_nuclear_plant905 : .intend(inspect_nuclear_plant905, I) & (count(I, "shield905", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield905"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant906 : true <- !inspect_nuclear_plant9061. 
+!inspect_nuclear_plant9061 : fast & .intend(inspect_nuclear_plant906, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield906_id1618_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield906", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield906", "G(add_belief(perc_rad906(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield906", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield906").
+!inspect_nuclear_plant906 : true <- !inspect_nuclear_plant9061. 
+!inspect_nuclear_plant9061 : true & .intend(inspect_nuclear_plant906, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield906_id1619_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield906", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield906", "G(add_belief(perc_rad906(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield906", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield906").
-!inspect_nuclear_plant906 : .intend(inspect_nuclear_plant906, I) & violated(I, "shield906", Cmds) & (count(I, "shield906", Count) | (not(count(I, "shield906", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant906.
-!inspect_nuclear_plant906 : .intend(inspect_nuclear_plant906, I) & (count(I, "shield906", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield906"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant907 : true <- !inspect_nuclear_plant9071. 
+!inspect_nuclear_plant9071 : fast & .intend(inspect_nuclear_plant907, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield907_id1620_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield907", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield907", "G(add_belief(perc_rad907(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield907", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield907").
+!inspect_nuclear_plant907 : true <- !inspect_nuclear_plant9071. 
+!inspect_nuclear_plant9071 : true & .intend(inspect_nuclear_plant907, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield907_id1621_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield907", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield907", "G(add_belief(perc_rad907(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield907", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield907").
-!inspect_nuclear_plant907 : .intend(inspect_nuclear_plant907, I) & violated(I, "shield907", Cmds) & (count(I, "shield907", Count) | (not(count(I, "shield907", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant907.
-!inspect_nuclear_plant907 : .intend(inspect_nuclear_plant907, I) & (count(I, "shield907", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield907"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant908 : true <- !inspect_nuclear_plant9081. 
+!inspect_nuclear_plant9081 : fast & .intend(inspect_nuclear_plant908, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield908_id1622_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield908", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield908", "G(add_belief(perc_rad908(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield908", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield908").
+!inspect_nuclear_plant908 : true <- !inspect_nuclear_plant9081. 
+!inspect_nuclear_plant9081 : true & .intend(inspect_nuclear_plant908, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield908_id1623_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield908", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield908", "G(add_belief(perc_rad908(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield908", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield908").
-!inspect_nuclear_plant908 : .intend(inspect_nuclear_plant908, I) & violated(I, "shield908", Cmds) & (count(I, "shield908", Count) | (not(count(I, "shield908", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant908.
-!inspect_nuclear_plant908 : .intend(inspect_nuclear_plant908, I) & (count(I, "shield908", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield908"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant909 : true <- !inspect_nuclear_plant9091. 
+!inspect_nuclear_plant9091 : fast & .intend(inspect_nuclear_plant909, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield909_id1624_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield909", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield909", "G(add_belief(perc_rad909(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield909", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield909").
+!inspect_nuclear_plant909 : true <- !inspect_nuclear_plant9091. 
+!inspect_nuclear_plant9091 : true & .intend(inspect_nuclear_plant909, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield909_id1625_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield909", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield909", "G(add_belief(perc_rad909(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield909", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield909").
-!inspect_nuclear_plant909 : .intend(inspect_nuclear_plant909, I) & violated(I, "shield909", Cmds) & (count(I, "shield909", Count) | (not(count(I, "shield909", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant909.
-!inspect_nuclear_plant909 : .intend(inspect_nuclear_plant909, I) & (count(I, "shield909", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield909"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant910 : true <- !inspect_nuclear_plant9101. 
+!inspect_nuclear_plant9101 : fast & .intend(inspect_nuclear_plant910, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield910_id1626_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield910", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield910", "G(add_belief(perc_rad910(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield910", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield910").
+!inspect_nuclear_plant910 : true <- !inspect_nuclear_plant9101. 
+!inspect_nuclear_plant9101 : true & .intend(inspect_nuclear_plant910, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield910_id1627_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield910", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield910", "G(add_belief(perc_rad910(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield910", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield910").
-!inspect_nuclear_plant910 : .intend(inspect_nuclear_plant910, I) & violated(I, "shield910", Cmds) & (count(I, "shield910", Count) | (not(count(I, "shield910", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant910.
-!inspect_nuclear_plant910 : .intend(inspect_nuclear_plant910, I) & (count(I, "shield910", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield910"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant911 : true <- !inspect_nuclear_plant9111. 
+!inspect_nuclear_plant9111 : fast & .intend(inspect_nuclear_plant911, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield911_id1628_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield911", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield911", "G(add_belief(perc_rad911(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield911", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield911").
+!inspect_nuclear_plant911 : true <- !inspect_nuclear_plant9111. 
+!inspect_nuclear_plant9111 : true & .intend(inspect_nuclear_plant911, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield911_id1629_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield911", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield911", "G(add_belief(perc_rad911(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield911", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield911").
-!inspect_nuclear_plant911 : .intend(inspect_nuclear_plant911, I) & violated(I, "shield911", Cmds) & (count(I, "shield911", Count) | (not(count(I, "shield911", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant911.
-!inspect_nuclear_plant911 : .intend(inspect_nuclear_plant911, I) & (count(I, "shield911", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield911"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant912 : true <- !inspect_nuclear_plant9121. 
+!inspect_nuclear_plant9121 : fast & .intend(inspect_nuclear_plant912, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield912_id1630_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield912", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield912", "G(add_belief(perc_rad912(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield912", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield912").
+!inspect_nuclear_plant912 : true <- !inspect_nuclear_plant9121. 
+!inspect_nuclear_plant9121 : true & .intend(inspect_nuclear_plant912, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield912_id1631_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield912", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield912", "G(add_belief(perc_rad912(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield912", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield912").
-!inspect_nuclear_plant912 : .intend(inspect_nuclear_plant912, I) & violated(I, "shield912", Cmds) & (count(I, "shield912", Count) | (not(count(I, "shield912", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant912.
-!inspect_nuclear_plant912 : .intend(inspect_nuclear_plant912, I) & (count(I, "shield912", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield912"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant913 : true <- !inspect_nuclear_plant9131. 
+!inspect_nuclear_plant9131 : fast & .intend(inspect_nuclear_plant913, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield913_id1632_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield913", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield913", "G(add_belief(perc_rad913(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield913", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield913").
+!inspect_nuclear_plant913 : true <- !inspect_nuclear_plant9131. 
+!inspect_nuclear_plant9131 : true & .intend(inspect_nuclear_plant913, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield913_id1633_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield913", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield913", "G(add_belief(perc_rad913(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield913", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield913").
-!inspect_nuclear_plant913 : .intend(inspect_nuclear_plant913, I) & violated(I, "shield913", Cmds) & (count(I, "shield913", Count) | (not(count(I, "shield913", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant913.
-!inspect_nuclear_plant913 : .intend(inspect_nuclear_plant913, I) & (count(I, "shield913", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield913"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant914 : true <- !inspect_nuclear_plant9141. 
+!inspect_nuclear_plant9141 : fast & .intend(inspect_nuclear_plant914, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield914_id1634_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield914", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield914", "G(add_belief(perc_rad914(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield914", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield914").
+!inspect_nuclear_plant914 : true <- !inspect_nuclear_plant9141. 
+!inspect_nuclear_plant9141 : true & .intend(inspect_nuclear_plant914, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield914_id1635_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield914", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield914", "G(add_belief(perc_rad914(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield914", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield914").
-!inspect_nuclear_plant914 : .intend(inspect_nuclear_plant914, I) & violated(I, "shield914", Cmds) & (count(I, "shield914", Count) | (not(count(I, "shield914", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant914.
-!inspect_nuclear_plant914 : .intend(inspect_nuclear_plant914, I) & (count(I, "shield914", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield914"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant915 : true <- !inspect_nuclear_plant9151. 
+!inspect_nuclear_plant9151 : fast & .intend(inspect_nuclear_plant915, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield915_id1636_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield915", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield915", "G(add_belief(perc_rad915(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield915", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield915").
+!inspect_nuclear_plant915 : true <- !inspect_nuclear_plant9151. 
+!inspect_nuclear_plant9151 : true & .intend(inspect_nuclear_plant915, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield915_id1637_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield915", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield915", "G(add_belief(perc_rad915(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield915", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield915").
-!inspect_nuclear_plant915 : .intend(inspect_nuclear_plant915, I) & violated(I, "shield915", Cmds) & (count(I, "shield915", Count) | (not(count(I, "shield915", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant915.
-!inspect_nuclear_plant915 : .intend(inspect_nuclear_plant915, I) & (count(I, "shield915", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield915"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant916 : true <- !inspect_nuclear_plant9161. 
+!inspect_nuclear_plant9161 : fast & .intend(inspect_nuclear_plant916, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield916_id1638_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield916", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield916", "G(add_belief(perc_rad916(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield916", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield916").
+!inspect_nuclear_plant916 : true <- !inspect_nuclear_plant9161. 
+!inspect_nuclear_plant9161 : true & .intend(inspect_nuclear_plant916, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield916_id1639_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield916", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield916", "G(add_belief(perc_rad916(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield916", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield916").
-!inspect_nuclear_plant916 : .intend(inspect_nuclear_plant916, I) & violated(I, "shield916", Cmds) & (count(I, "shield916", Count) | (not(count(I, "shield916", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant916.
-!inspect_nuclear_plant916 : .intend(inspect_nuclear_plant916, I) & (count(I, "shield916", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield916"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant917 : true <- !inspect_nuclear_plant9171. 
+!inspect_nuclear_plant9171 : fast & .intend(inspect_nuclear_plant917, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield917_id1640_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield917", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield917", "G(add_belief(perc_rad917(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield917", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield917").
+!inspect_nuclear_plant917 : true <- !inspect_nuclear_plant9171. 
+!inspect_nuclear_plant9171 : true & .intend(inspect_nuclear_plant917, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield917_id1641_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield917", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield917", "G(add_belief(perc_rad917(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield917", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield917").
-!inspect_nuclear_plant917 : .intend(inspect_nuclear_plant917, I) & violated(I, "shield917", Cmds) & (count(I, "shield917", Count) | (not(count(I, "shield917", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant917.
-!inspect_nuclear_plant917 : .intend(inspect_nuclear_plant917, I) & (count(I, "shield917", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield917"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant918 : true <- !inspect_nuclear_plant9181. 
+!inspect_nuclear_plant9181 : fast & .intend(inspect_nuclear_plant918, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield918_id1642_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield918", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield918", "G(add_belief(perc_rad918(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield918", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield918").
+!inspect_nuclear_plant918 : true <- !inspect_nuclear_plant9181. 
+!inspect_nuclear_plant9181 : true & .intend(inspect_nuclear_plant918, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield918_id1643_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield918", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield918", "G(add_belief(perc_rad918(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield918", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield918").
-!inspect_nuclear_plant918 : .intend(inspect_nuclear_plant918, I) & violated(I, "shield918", Cmds) & (count(I, "shield918", Count) | (not(count(I, "shield918", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant918.
-!inspect_nuclear_plant918 : .intend(inspect_nuclear_plant918, I) & (count(I, "shield918", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield918"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant919 : true <- !inspect_nuclear_plant9191. 
+!inspect_nuclear_plant9191 : fast & .intend(inspect_nuclear_plant919, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield919_id1644_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield919", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield919", "G(add_belief(perc_rad919(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield919", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield919").
+!inspect_nuclear_plant919 : true <- !inspect_nuclear_plant9191. 
+!inspect_nuclear_plant9191 : true & .intend(inspect_nuclear_plant919, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield919_id1645_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield919", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield919", "G(add_belief(perc_rad919(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield919", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield919").
-!inspect_nuclear_plant919 : .intend(inspect_nuclear_plant919, I) & violated(I, "shield919", Cmds) & (count(I, "shield919", Count) | (not(count(I, "shield919", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant919.
-!inspect_nuclear_plant919 : .intend(inspect_nuclear_plant919, I) & (count(I, "shield919", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield919"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant920 : true <- !inspect_nuclear_plant9201. 
+!inspect_nuclear_plant9201 : fast & .intend(inspect_nuclear_plant920, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield920_id1646_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield920", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield920", "G(add_belief(perc_rad920(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield920", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield920").
+!inspect_nuclear_plant920 : true <- !inspect_nuclear_plant9201. 
+!inspect_nuclear_plant9201 : true & .intend(inspect_nuclear_plant920, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield920_id1647_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield920", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield920", "G(add_belief(perc_rad920(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield920", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield920").
-!inspect_nuclear_plant920 : .intend(inspect_nuclear_plant920, I) & violated(I, "shield920", Cmds) & (count(I, "shield920", Count) | (not(count(I, "shield920", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant920.
-!inspect_nuclear_plant920 : .intend(inspect_nuclear_plant920, I) & (count(I, "shield920", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield920"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant921 : true <- !inspect_nuclear_plant9211. 
+!inspect_nuclear_plant9211 : fast & .intend(inspect_nuclear_plant921, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield921_id1648_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield921", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield921", "G(add_belief(perc_rad921(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield921", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield921").
+!inspect_nuclear_plant921 : true <- !inspect_nuclear_plant9211. 
+!inspect_nuclear_plant9211 : true & .intend(inspect_nuclear_plant921, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield921_id1649_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield921", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield921", "G(add_belief(perc_rad921(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield921", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield921").
-!inspect_nuclear_plant921 : .intend(inspect_nuclear_plant921, I) & violated(I, "shield921", Cmds) & (count(I, "shield921", Count) | (not(count(I, "shield921", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant921.
-!inspect_nuclear_plant921 : .intend(inspect_nuclear_plant921, I) & (count(I, "shield921", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield921"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant922 : true <- !inspect_nuclear_plant9221. 
+!inspect_nuclear_plant9221 : fast & .intend(inspect_nuclear_plant922, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield922_id1650_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield922", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield922", "G(add_belief(perc_rad922(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield922", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield922").
+!inspect_nuclear_plant922 : true <- !inspect_nuclear_plant9221. 
+!inspect_nuclear_plant9221 : true & .intend(inspect_nuclear_plant922, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield922_id1651_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield922", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield922", "G(add_belief(perc_rad922(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield922", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield922").
-!inspect_nuclear_plant922 : .intend(inspect_nuclear_plant922, I) & violated(I, "shield922", Cmds) & (count(I, "shield922", Count) | (not(count(I, "shield922", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant922.
-!inspect_nuclear_plant922 : .intend(inspect_nuclear_plant922, I) & (count(I, "shield922", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield922"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant923 : true <- !inspect_nuclear_plant9231. 
+!inspect_nuclear_plant9231 : fast & .intend(inspect_nuclear_plant923, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield923_id1652_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield923", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield923", "G(add_belief(perc_rad923(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield923", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield923").
+!inspect_nuclear_plant923 : true <- !inspect_nuclear_plant9231. 
+!inspect_nuclear_plant9231 : true & .intend(inspect_nuclear_plant923, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield923_id1653_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield923", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield923", "G(add_belief(perc_rad923(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield923", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield923").
-!inspect_nuclear_plant923 : .intend(inspect_nuclear_plant923, I) & violated(I, "shield923", Cmds) & (count(I, "shield923", Count) | (not(count(I, "shield923", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant923.
-!inspect_nuclear_plant923 : .intend(inspect_nuclear_plant923, I) & (count(I, "shield923", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield923"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant924 : true <- !inspect_nuclear_plant9241. 
+!inspect_nuclear_plant9241 : fast & .intend(inspect_nuclear_plant924, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield924_id1654_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield924", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield924", "G(add_belief(perc_rad924(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield924", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield924").
+!inspect_nuclear_plant924 : true <- !inspect_nuclear_plant9241. 
+!inspect_nuclear_plant9241 : true & .intend(inspect_nuclear_plant924, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield924_id1655_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield924", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield924", "G(add_belief(perc_rad924(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield924", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield924").
-!inspect_nuclear_plant924 : .intend(inspect_nuclear_plant924, I) & violated(I, "shield924", Cmds) & (count(I, "shield924", Count) | (not(count(I, "shield924", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant924.
-!inspect_nuclear_plant924 : .intend(inspect_nuclear_plant924, I) & (count(I, "shield924", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield924"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant925 : true <- !inspect_nuclear_plant9251. 
+!inspect_nuclear_plant9251 : fast & .intend(inspect_nuclear_plant925, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield925_id1656_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield925", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield925", "G(add_belief(perc_rad925(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield925", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield925").
+!inspect_nuclear_plant925 : true <- !inspect_nuclear_plant9251. 
+!inspect_nuclear_plant9251 : true & .intend(inspect_nuclear_plant925, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield925_id1657_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield925", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield925", "G(add_belief(perc_rad925(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield925", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield925").
-!inspect_nuclear_plant925 : .intend(inspect_nuclear_plant925, I) & violated(I, "shield925", Cmds) & (count(I, "shield925", Count) | (not(count(I, "shield925", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant925.
-!inspect_nuclear_plant925 : .intend(inspect_nuclear_plant925, I) & (count(I, "shield925", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield925"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant926 : true <- !inspect_nuclear_plant9261. 
+!inspect_nuclear_plant9261 : fast & .intend(inspect_nuclear_plant926, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield926_id1658_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield926", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield926", "G(add_belief(perc_rad926(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield926", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield926").
+!inspect_nuclear_plant926 : true <- !inspect_nuclear_plant9261. 
+!inspect_nuclear_plant9261 : true & .intend(inspect_nuclear_plant926, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield926_id1659_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield926", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield926", "G(add_belief(perc_rad926(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield926", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield926").
-!inspect_nuclear_plant926 : .intend(inspect_nuclear_plant926, I) & violated(I, "shield926", Cmds) & (count(I, "shield926", Count) | (not(count(I, "shield926", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant926.
-!inspect_nuclear_plant926 : .intend(inspect_nuclear_plant926, I) & (count(I, "shield926", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield926"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant927 : true <- !inspect_nuclear_plant9271. 
+!inspect_nuclear_plant9271 : fast & .intend(inspect_nuclear_plant927, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield927_id1660_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield927", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield927", "G(add_belief(perc_rad927(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield927", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield927").
+!inspect_nuclear_plant927 : true <- !inspect_nuclear_plant9271. 
+!inspect_nuclear_plant9271 : true & .intend(inspect_nuclear_plant927, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield927_id1661_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield927", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield927", "G(add_belief(perc_rad927(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield927", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield927").
-!inspect_nuclear_plant927 : .intend(inspect_nuclear_plant927, I) & violated(I, "shield927", Cmds) & (count(I, "shield927", Count) | (not(count(I, "shield927", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant927.
-!inspect_nuclear_plant927 : .intend(inspect_nuclear_plant927, I) & (count(I, "shield927", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield927"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant928 : true <- !inspect_nuclear_plant9281. 
+!inspect_nuclear_plant9281 : fast & .intend(inspect_nuclear_plant928, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield928_id1662_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield928", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield928", "G(add_belief(perc_rad928(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield928", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield928").
+!inspect_nuclear_plant928 : true <- !inspect_nuclear_plant9281. 
+!inspect_nuclear_plant9281 : true & .intend(inspect_nuclear_plant928, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield928_id1663_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield928", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield928", "G(add_belief(perc_rad928(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield928", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield928").
-!inspect_nuclear_plant928 : .intend(inspect_nuclear_plant928, I) & violated(I, "shield928", Cmds) & (count(I, "shield928", Count) | (not(count(I, "shield928", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant928.
-!inspect_nuclear_plant928 : .intend(inspect_nuclear_plant928, I) & (count(I, "shield928", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield928"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant929 : true <- !inspect_nuclear_plant9291. 
+!inspect_nuclear_plant9291 : fast & .intend(inspect_nuclear_plant929, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield929_id1664_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield929", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield929", "G(add_belief(perc_rad929(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield929", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield929").
+!inspect_nuclear_plant929 : true <- !inspect_nuclear_plant9291. 
+!inspect_nuclear_plant9291 : true & .intend(inspect_nuclear_plant929, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield929_id1665_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield929", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield929", "G(add_belief(perc_rad929(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield929", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield929").
-!inspect_nuclear_plant929 : .intend(inspect_nuclear_plant929, I) & violated(I, "shield929", Cmds) & (count(I, "shield929", Count) | (not(count(I, "shield929", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant929.
-!inspect_nuclear_plant929 : .intend(inspect_nuclear_plant929, I) & (count(I, "shield929", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield929"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant930 : true <- !inspect_nuclear_plant9301. 
+!inspect_nuclear_plant9301 : fast & .intend(inspect_nuclear_plant930, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield930_id1666_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield930", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield930", "G(add_belief(perc_rad930(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield930", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield930").
+!inspect_nuclear_plant930 : true <- !inspect_nuclear_plant9301. 
+!inspect_nuclear_plant9301 : true & .intend(inspect_nuclear_plant930, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield930_id1667_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield930", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield930", "G(add_belief(perc_rad930(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield930", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield930").
-!inspect_nuclear_plant930 : .intend(inspect_nuclear_plant930, I) & violated(I, "shield930", Cmds) & (count(I, "shield930", Count) | (not(count(I, "shield930", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant930.
-!inspect_nuclear_plant930 : .intend(inspect_nuclear_plant930, I) & (count(I, "shield930", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield930"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant931 : true <- !inspect_nuclear_plant9311. 
+!inspect_nuclear_plant9311 : fast & .intend(inspect_nuclear_plant931, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield931_id1668_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield931", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield931", "G(add_belief(perc_rad931(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield931", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield931").
+!inspect_nuclear_plant931 : true <- !inspect_nuclear_plant9311. 
+!inspect_nuclear_plant9311 : true & .intend(inspect_nuclear_plant931, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield931_id1669_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield931", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield931", "G(add_belief(perc_rad931(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield931", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield931").
-!inspect_nuclear_plant931 : .intend(inspect_nuclear_plant931, I) & violated(I, "shield931", Cmds) & (count(I, "shield931", Count) | (not(count(I, "shield931", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant931.
-!inspect_nuclear_plant931 : .intend(inspect_nuclear_plant931, I) & (count(I, "shield931", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield931"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant932 : true <- !inspect_nuclear_plant9321. 
+!inspect_nuclear_plant9321 : fast & .intend(inspect_nuclear_plant932, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield932_id1670_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield932", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield932", "G(add_belief(perc_rad932(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield932", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield932").
+!inspect_nuclear_plant932 : true <- !inspect_nuclear_plant9321. 
+!inspect_nuclear_plant9321 : true & .intend(inspect_nuclear_plant932, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield932_id1671_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield932", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield932", "G(add_belief(perc_rad932(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield932", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield932").
-!inspect_nuclear_plant932 : .intend(inspect_nuclear_plant932, I) & violated(I, "shield932", Cmds) & (count(I, "shield932", Count) | (not(count(I, "shield932", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant932.
-!inspect_nuclear_plant932 : .intend(inspect_nuclear_plant932, I) & (count(I, "shield932", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield932"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant933 : true <- !inspect_nuclear_plant9331. 
+!inspect_nuclear_plant9331 : fast & .intend(inspect_nuclear_plant933, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield933_id1672_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield933", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield933", "G(add_belief(perc_rad933(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield933", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield933").
+!inspect_nuclear_plant933 : true <- !inspect_nuclear_plant9331. 
+!inspect_nuclear_plant9331 : true & .intend(inspect_nuclear_plant933, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield933_id1673_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield933", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield933", "G(add_belief(perc_rad933(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield933", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield933").
-!inspect_nuclear_plant933 : .intend(inspect_nuclear_plant933, I) & violated(I, "shield933", Cmds) & (count(I, "shield933", Count) | (not(count(I, "shield933", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant933.
-!inspect_nuclear_plant933 : .intend(inspect_nuclear_plant933, I) & (count(I, "shield933", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield933"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant934 : true <- !inspect_nuclear_plant9341. 
+!inspect_nuclear_plant9341 : fast & .intend(inspect_nuclear_plant934, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield934_id1674_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield934", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield934", "G(add_belief(perc_rad934(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield934", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield934").
+!inspect_nuclear_plant934 : true <- !inspect_nuclear_plant9341. 
+!inspect_nuclear_plant9341 : true & .intend(inspect_nuclear_plant934, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield934_id1675_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield934", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield934", "G(add_belief(perc_rad934(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield934", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield934").
-!inspect_nuclear_plant934 : .intend(inspect_nuclear_plant934, I) & violated(I, "shield934", Cmds) & (count(I, "shield934", Count) | (not(count(I, "shield934", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant934.
-!inspect_nuclear_plant934 : .intend(inspect_nuclear_plant934, I) & (count(I, "shield934", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield934"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant935 : true <- !inspect_nuclear_plant9351. 
+!inspect_nuclear_plant9351 : fast & .intend(inspect_nuclear_plant935, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield935_id1676_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield935", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield935", "G(add_belief(perc_rad935(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield935", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield935").
+!inspect_nuclear_plant935 : true <- !inspect_nuclear_plant9351. 
+!inspect_nuclear_plant9351 : true & .intend(inspect_nuclear_plant935, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield935_id1677_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield935", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield935", "G(add_belief(perc_rad935(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield935", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield935").
-!inspect_nuclear_plant935 : .intend(inspect_nuclear_plant935, I) & violated(I, "shield935", Cmds) & (count(I, "shield935", Count) | (not(count(I, "shield935", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant935.
-!inspect_nuclear_plant935 : .intend(inspect_nuclear_plant935, I) & (count(I, "shield935", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield935"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant936 : true <- !inspect_nuclear_plant9361. 
+!inspect_nuclear_plant9361 : fast & .intend(inspect_nuclear_plant936, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield936_id1678_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield936", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield936", "G(add_belief(perc_rad936(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield936", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield936").
+!inspect_nuclear_plant936 : true <- !inspect_nuclear_plant9361. 
+!inspect_nuclear_plant9361 : true & .intend(inspect_nuclear_plant936, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield936_id1679_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield936", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield936", "G(add_belief(perc_rad936(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield936", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield936").
-!inspect_nuclear_plant936 : .intend(inspect_nuclear_plant936, I) & violated(I, "shield936", Cmds) & (count(I, "shield936", Count) | (not(count(I, "shield936", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant936.
-!inspect_nuclear_plant936 : .intend(inspect_nuclear_plant936, I) & (count(I, "shield936", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield936"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant937 : true <- !inspect_nuclear_plant9371. 
+!inspect_nuclear_plant9371 : fast & .intend(inspect_nuclear_plant937, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield937_id1680_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield937", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield937", "G(add_belief(perc_rad937(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield937", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield937").
+!inspect_nuclear_plant937 : true <- !inspect_nuclear_plant9371. 
+!inspect_nuclear_plant9371 : true & .intend(inspect_nuclear_plant937, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield937_id1681_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield937", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield937", "G(add_belief(perc_rad937(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield937", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield937").
-!inspect_nuclear_plant937 : .intend(inspect_nuclear_plant937, I) & violated(I, "shield937", Cmds) & (count(I, "shield937", Count) | (not(count(I, "shield937", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant937.
-!inspect_nuclear_plant937 : .intend(inspect_nuclear_plant937, I) & (count(I, "shield937", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield937"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant938 : true <- !inspect_nuclear_plant9381. 
+!inspect_nuclear_plant9381 : fast & .intend(inspect_nuclear_plant938, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield938_id1682_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield938", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield938", "G(add_belief(perc_rad938(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield938", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield938").
+!inspect_nuclear_plant938 : true <- !inspect_nuclear_plant9381. 
+!inspect_nuclear_plant9381 : true & .intend(inspect_nuclear_plant938, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield938_id1683_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield938", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield938", "G(add_belief(perc_rad938(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield938", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield938").
-!inspect_nuclear_plant938 : .intend(inspect_nuclear_plant938, I) & violated(I, "shield938", Cmds) & (count(I, "shield938", Count) | (not(count(I, "shield938", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant938.
-!inspect_nuclear_plant938 : .intend(inspect_nuclear_plant938, I) & (count(I, "shield938", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield938"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant939 : true <- !inspect_nuclear_plant9391. 
+!inspect_nuclear_plant9391 : fast & .intend(inspect_nuclear_plant939, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield939_id1684_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield939", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield939", "G(add_belief(perc_rad939(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield939", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield939").
+!inspect_nuclear_plant939 : true <- !inspect_nuclear_plant9391. 
+!inspect_nuclear_plant9391 : true & .intend(inspect_nuclear_plant939, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield939_id1685_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield939", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield939", "G(add_belief(perc_rad939(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield939", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield939").
-!inspect_nuclear_plant939 : .intend(inspect_nuclear_plant939, I) & violated(I, "shield939", Cmds) & (count(I, "shield939", Count) | (not(count(I, "shield939", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant939.
-!inspect_nuclear_plant939 : .intend(inspect_nuclear_plant939, I) & (count(I, "shield939", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield939"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant940 : true <- !inspect_nuclear_plant9401. 
+!inspect_nuclear_plant9401 : fast & .intend(inspect_nuclear_plant940, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield940_id1686_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield940", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield940", "G(add_belief(perc_rad940(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield940", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield940").
+!inspect_nuclear_plant940 : true <- !inspect_nuclear_plant9401. 
+!inspect_nuclear_plant9401 : true & .intend(inspect_nuclear_plant940, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield940_id1687_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield940", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield940", "G(add_belief(perc_rad940(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield940", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield940").
-!inspect_nuclear_plant940 : .intend(inspect_nuclear_plant940, I) & violated(I, "shield940", Cmds) & (count(I, "shield940", Count) | (not(count(I, "shield940", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant940.
-!inspect_nuclear_plant940 : .intend(inspect_nuclear_plant940, I) & (count(I, "shield940", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield940"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant941 : true <- !inspect_nuclear_plant9411. 
+!inspect_nuclear_plant9411 : fast & .intend(inspect_nuclear_plant941, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield941_id1688_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield941", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield941", "G(add_belief(perc_rad941(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield941", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield941").
+!inspect_nuclear_plant941 : true <- !inspect_nuclear_plant9411. 
+!inspect_nuclear_plant9411 : true & .intend(inspect_nuclear_plant941, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield941_id1689_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield941", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield941", "G(add_belief(perc_rad941(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield941", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield941").
-!inspect_nuclear_plant941 : .intend(inspect_nuclear_plant941, I) & violated(I, "shield941", Cmds) & (count(I, "shield941", Count) | (not(count(I, "shield941", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant941.
-!inspect_nuclear_plant941 : .intend(inspect_nuclear_plant941, I) & (count(I, "shield941", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield941"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant942 : true <- !inspect_nuclear_plant9421. 
+!inspect_nuclear_plant9421 : fast & .intend(inspect_nuclear_plant942, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield942_id1690_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield942", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield942", "G(add_belief(perc_rad942(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield942", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield942").
+!inspect_nuclear_plant942 : true <- !inspect_nuclear_plant9421. 
+!inspect_nuclear_plant9421 : true & .intend(inspect_nuclear_plant942, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield942_id1691_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield942", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield942", "G(add_belief(perc_rad942(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield942", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield942").
-!inspect_nuclear_plant942 : .intend(inspect_nuclear_plant942, I) & violated(I, "shield942", Cmds) & (count(I, "shield942", Count) | (not(count(I, "shield942", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant942.
-!inspect_nuclear_plant942 : .intend(inspect_nuclear_plant942, I) & (count(I, "shield942", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield942"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant943 : true <- !inspect_nuclear_plant9431. 
+!inspect_nuclear_plant9431 : fast & .intend(inspect_nuclear_plant943, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield943_id1692_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield943", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield943", "G(add_belief(perc_rad943(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield943", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield943").
+!inspect_nuclear_plant943 : true <- !inspect_nuclear_plant9431. 
+!inspect_nuclear_plant9431 : true & .intend(inspect_nuclear_plant943, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield943_id1693_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield943", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield943", "G(add_belief(perc_rad943(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield943", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield943").
-!inspect_nuclear_plant943 : .intend(inspect_nuclear_plant943, I) & violated(I, "shield943", Cmds) & (count(I, "shield943", Count) | (not(count(I, "shield943", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant943.
-!inspect_nuclear_plant943 : .intend(inspect_nuclear_plant943, I) & (count(I, "shield943", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield943"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant944 : true <- !inspect_nuclear_plant9441. 
+!inspect_nuclear_plant9441 : fast & .intend(inspect_nuclear_plant944, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield944_id1694_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield944", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield944", "G(add_belief(perc_rad944(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield944", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield944").
+!inspect_nuclear_plant944 : true <- !inspect_nuclear_plant9441. 
+!inspect_nuclear_plant9441 : true & .intend(inspect_nuclear_plant944, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield944_id1695_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield944", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield944", "G(add_belief(perc_rad944(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield944", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield944").
-!inspect_nuclear_plant944 : .intend(inspect_nuclear_plant944, I) & violated(I, "shield944", Cmds) & (count(I, "shield944", Count) | (not(count(I, "shield944", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant944.
-!inspect_nuclear_plant944 : .intend(inspect_nuclear_plant944, I) & (count(I, "shield944", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield944"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant945 : true <- !inspect_nuclear_plant9451. 
+!inspect_nuclear_plant9451 : fast & .intend(inspect_nuclear_plant945, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield945_id1696_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield945", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield945", "G(add_belief(perc_rad945(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield945", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield945").
+!inspect_nuclear_plant945 : true <- !inspect_nuclear_plant9451. 
+!inspect_nuclear_plant9451 : true & .intend(inspect_nuclear_plant945, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield945_id1697_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield945", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield945", "G(add_belief(perc_rad945(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield945", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield945").
-!inspect_nuclear_plant945 : .intend(inspect_nuclear_plant945, I) & violated(I, "shield945", Cmds) & (count(I, "shield945", Count) | (not(count(I, "shield945", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant945.
-!inspect_nuclear_plant945 : .intend(inspect_nuclear_plant945, I) & (count(I, "shield945", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield945"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant946 : true <- !inspect_nuclear_plant9461. 
+!inspect_nuclear_plant9461 : fast & .intend(inspect_nuclear_plant946, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield946_id1698_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield946", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield946", "G(add_belief(perc_rad946(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield946", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield946").
+!inspect_nuclear_plant946 : true <- !inspect_nuclear_plant9461. 
+!inspect_nuclear_plant9461 : true & .intend(inspect_nuclear_plant946, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield946_id1699_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield946", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield946", "G(add_belief(perc_rad946(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield946", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield946").
-!inspect_nuclear_plant946 : .intend(inspect_nuclear_plant946, I) & violated(I, "shield946", Cmds) & (count(I, "shield946", Count) | (not(count(I, "shield946", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant946.
-!inspect_nuclear_plant946 : .intend(inspect_nuclear_plant946, I) & (count(I, "shield946", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield946"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant947 : true <- !inspect_nuclear_plant9471. 
+!inspect_nuclear_plant9471 : fast & .intend(inspect_nuclear_plant947, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield947_id1700_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield947", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield947", "G(add_belief(perc_rad947(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield947", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield947").
+!inspect_nuclear_plant947 : true <- !inspect_nuclear_plant9471. 
+!inspect_nuclear_plant9471 : true & .intend(inspect_nuclear_plant947, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield947_id1701_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield947", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield947", "G(add_belief(perc_rad947(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield947", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield947").
-!inspect_nuclear_plant947 : .intend(inspect_nuclear_plant947, I) & violated(I, "shield947", Cmds) & (count(I, "shield947", Count) | (not(count(I, "shield947", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant947.
-!inspect_nuclear_plant947 : .intend(inspect_nuclear_plant947, I) & (count(I, "shield947", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield947"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant948 : true <- !inspect_nuclear_plant9481. 
+!inspect_nuclear_plant9481 : fast & .intend(inspect_nuclear_plant948, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield948_id1702_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield948", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield948", "G(add_belief(perc_rad948(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield948", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield948").
+!inspect_nuclear_plant948 : true <- !inspect_nuclear_plant9481. 
+!inspect_nuclear_plant9481 : true & .intend(inspect_nuclear_plant948, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield948_id1703_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield948", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield948", "G(add_belief(perc_rad948(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield948", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield948").
-!inspect_nuclear_plant948 : .intend(inspect_nuclear_plant948, I) & violated(I, "shield948", Cmds) & (count(I, "shield948", Count) | (not(count(I, "shield948", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant948.
-!inspect_nuclear_plant948 : .intend(inspect_nuclear_plant948, I) & (count(I, "shield948", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield948"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant949 : true <- !inspect_nuclear_plant9491. 
+!inspect_nuclear_plant9491 : fast & .intend(inspect_nuclear_plant949, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield949_id1704_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield949", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield949", "G(add_belief(perc_rad949(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield949", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield949").
+!inspect_nuclear_plant949 : true <- !inspect_nuclear_plant9491. 
+!inspect_nuclear_plant9491 : true & .intend(inspect_nuclear_plant949, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield949_id1705_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield949", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield949", "G(add_belief(perc_rad949(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield949", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield949").
-!inspect_nuclear_plant949 : .intend(inspect_nuclear_plant949, I) & violated(I, "shield949", Cmds) & (count(I, "shield949", Count) | (not(count(I, "shield949", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant949.
-!inspect_nuclear_plant949 : .intend(inspect_nuclear_plant949, I) & (count(I, "shield949", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield949"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant950 : true <- !inspect_nuclear_plant9501. 
+!inspect_nuclear_plant9501 : fast & .intend(inspect_nuclear_plant950, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield950_id1706_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield950", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield950", "G(add_belief(perc_rad950(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield950", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield950").
+!inspect_nuclear_plant950 : true <- !inspect_nuclear_plant9501. 
+!inspect_nuclear_plant9501 : true & .intend(inspect_nuclear_plant950, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield950_id1707_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield950", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield950", "G(add_belief(perc_rad950(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield950", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield950").
-!inspect_nuclear_plant950 : .intend(inspect_nuclear_plant950, I) & violated(I, "shield950", Cmds) & (count(I, "shield950", Count) | (not(count(I, "shield950", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant950.
-!inspect_nuclear_plant950 : .intend(inspect_nuclear_plant950, I) & (count(I, "shield950", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield950"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant951 : true <- !inspect_nuclear_plant9511. 
+!inspect_nuclear_plant9511 : fast & .intend(inspect_nuclear_plant951, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield951_id1708_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield951", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield951", "G(add_belief(perc_rad951(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield951", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield951").
+!inspect_nuclear_plant951 : true <- !inspect_nuclear_plant9511. 
+!inspect_nuclear_plant9511 : true & .intend(inspect_nuclear_plant951, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield951_id1709_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield951", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield951", "G(add_belief(perc_rad951(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield951", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield951").
-!inspect_nuclear_plant951 : .intend(inspect_nuclear_plant951, I) & violated(I, "shield951", Cmds) & (count(I, "shield951", Count) | (not(count(I, "shield951", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant951.
-!inspect_nuclear_plant951 : .intend(inspect_nuclear_plant951, I) & (count(I, "shield951", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield951"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant952 : true <- !inspect_nuclear_plant9521. 
+!inspect_nuclear_plant9521 : fast & .intend(inspect_nuclear_plant952, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield952_id1710_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield952", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield952", "G(add_belief(perc_rad952(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield952", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield952").
+!inspect_nuclear_plant952 : true <- !inspect_nuclear_plant9521. 
+!inspect_nuclear_plant9521 : true & .intend(inspect_nuclear_plant952, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield952_id1711_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield952", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield952", "G(add_belief(perc_rad952(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield952", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield952").
-!inspect_nuclear_plant952 : .intend(inspect_nuclear_plant952, I) & violated(I, "shield952", Cmds) & (count(I, "shield952", Count) | (not(count(I, "shield952", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant952.
-!inspect_nuclear_plant952 : .intend(inspect_nuclear_plant952, I) & (count(I, "shield952", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield952"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant953 : true <- !inspect_nuclear_plant9531. 
+!inspect_nuclear_plant9531 : fast & .intend(inspect_nuclear_plant953, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield953_id1712_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield953", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield953", "G(add_belief(perc_rad953(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield953", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield953").
+!inspect_nuclear_plant953 : true <- !inspect_nuclear_plant9531. 
+!inspect_nuclear_plant9531 : true & .intend(inspect_nuclear_plant953, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield953_id1713_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield953", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield953", "G(add_belief(perc_rad953(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield953", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield953").
-!inspect_nuclear_plant953 : .intend(inspect_nuclear_plant953, I) & violated(I, "shield953", Cmds) & (count(I, "shield953", Count) | (not(count(I, "shield953", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant953.
-!inspect_nuclear_plant953 : .intend(inspect_nuclear_plant953, I) & (count(I, "shield953", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield953"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant954 : true <- !inspect_nuclear_plant9541. 
+!inspect_nuclear_plant9541 : fast & .intend(inspect_nuclear_plant954, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield954_id1714_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield954", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield954", "G(add_belief(perc_rad954(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield954", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield954").
+!inspect_nuclear_plant954 : true <- !inspect_nuclear_plant9541. 
+!inspect_nuclear_plant9541 : true & .intend(inspect_nuclear_plant954, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield954_id1715_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield954", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield954", "G(add_belief(perc_rad954(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield954", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield954").
-!inspect_nuclear_plant954 : .intend(inspect_nuclear_plant954, I) & violated(I, "shield954", Cmds) & (count(I, "shield954", Count) | (not(count(I, "shield954", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant954.
-!inspect_nuclear_plant954 : .intend(inspect_nuclear_plant954, I) & (count(I, "shield954", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield954"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant955 : true <- !inspect_nuclear_plant9551. 
+!inspect_nuclear_plant9551 : fast & .intend(inspect_nuclear_plant955, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield955_id1716_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield955", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield955", "G(add_belief(perc_rad955(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield955", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield955").
+!inspect_nuclear_plant955 : true <- !inspect_nuclear_plant9551. 
+!inspect_nuclear_plant9551 : true & .intend(inspect_nuclear_plant955, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield955_id1717_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield955", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield955", "G(add_belief(perc_rad955(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield955", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield955").
-!inspect_nuclear_plant955 : .intend(inspect_nuclear_plant955, I) & violated(I, "shield955", Cmds) & (count(I, "shield955", Count) | (not(count(I, "shield955", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant955.
-!inspect_nuclear_plant955 : .intend(inspect_nuclear_plant955, I) & (count(I, "shield955", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield955"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant956 : true <- !inspect_nuclear_plant9561. 
+!inspect_nuclear_plant9561 : fast & .intend(inspect_nuclear_plant956, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield956_id1718_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield956", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield956", "G(add_belief(perc_rad956(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield956", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield956").
+!inspect_nuclear_plant956 : true <- !inspect_nuclear_plant9561. 
+!inspect_nuclear_plant9561 : true & .intend(inspect_nuclear_plant956, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield956_id1719_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield956", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield956", "G(add_belief(perc_rad956(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield956", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield956").
-!inspect_nuclear_plant956 : .intend(inspect_nuclear_plant956, I) & violated(I, "shield956", Cmds) & (count(I, "shield956", Count) | (not(count(I, "shield956", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant956.
-!inspect_nuclear_plant956 : .intend(inspect_nuclear_plant956, I) & (count(I, "shield956", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield956"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant957 : true <- !inspect_nuclear_plant9571. 
+!inspect_nuclear_plant9571 : fast & .intend(inspect_nuclear_plant957, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield957_id1720_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield957", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield957", "G(add_belief(perc_rad957(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield957", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield957").
+!inspect_nuclear_plant957 : true <- !inspect_nuclear_plant9571. 
+!inspect_nuclear_plant9571 : true & .intend(inspect_nuclear_plant957, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield957_id1721_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield957", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield957", "G(add_belief(perc_rad957(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield957", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield957").
-!inspect_nuclear_plant957 : .intend(inspect_nuclear_plant957, I) & violated(I, "shield957", Cmds) & (count(I, "shield957", Count) | (not(count(I, "shield957", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant957.
-!inspect_nuclear_plant957 : .intend(inspect_nuclear_plant957, I) & (count(I, "shield957", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield957"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant958 : true <- !inspect_nuclear_plant9581. 
+!inspect_nuclear_plant9581 : fast & .intend(inspect_nuclear_plant958, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield958_id1722_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield958", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield958", "G(add_belief(perc_rad958(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield958", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield958").
+!inspect_nuclear_plant958 : true <- !inspect_nuclear_plant9581. 
+!inspect_nuclear_plant9581 : true & .intend(inspect_nuclear_plant958, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield958_id1723_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield958", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield958", "G(add_belief(perc_rad958(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield958", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield958").
-!inspect_nuclear_plant958 : .intend(inspect_nuclear_plant958, I) & violated(I, "shield958", Cmds) & (count(I, "shield958", Count) | (not(count(I, "shield958", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant958.
-!inspect_nuclear_plant958 : .intend(inspect_nuclear_plant958, I) & (count(I, "shield958", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield958"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant959 : true <- !inspect_nuclear_plant9591. 
+!inspect_nuclear_plant9591 : fast & .intend(inspect_nuclear_plant959, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield959_id1724_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield959", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield959", "G(add_belief(perc_rad959(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield959", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield959").
+!inspect_nuclear_plant959 : true <- !inspect_nuclear_plant9591. 
+!inspect_nuclear_plant9591 : true & .intend(inspect_nuclear_plant959, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield959_id1725_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield959", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield959", "G(add_belief(perc_rad959(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield959", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield959").
-!inspect_nuclear_plant959 : .intend(inspect_nuclear_plant959, I) & violated(I, "shield959", Cmds) & (count(I, "shield959", Count) | (not(count(I, "shield959", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant959.
-!inspect_nuclear_plant959 : .intend(inspect_nuclear_plant959, I) & (count(I, "shield959", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield959"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant960 : true <- !inspect_nuclear_plant9601. 
+!inspect_nuclear_plant9601 : fast & .intend(inspect_nuclear_plant960, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield960_id1726_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield960", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield960", "G(add_belief(perc_rad960(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield960", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield960").
+!inspect_nuclear_plant960 : true <- !inspect_nuclear_plant9601. 
+!inspect_nuclear_plant9601 : true & .intend(inspect_nuclear_plant960, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield960_id1727_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield960", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield960", "G(add_belief(perc_rad960(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield960", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield960").
-!inspect_nuclear_plant960 : .intend(inspect_nuclear_plant960, I) & violated(I, "shield960", Cmds) & (count(I, "shield960", Count) | (not(count(I, "shield960", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant960.
-!inspect_nuclear_plant960 : .intend(inspect_nuclear_plant960, I) & (count(I, "shield960", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield960"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant961 : true <- !inspect_nuclear_plant9611. 
+!inspect_nuclear_plant9611 : fast & .intend(inspect_nuclear_plant961, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield961_id1728_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield961", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield961", "G(add_belief(perc_rad961(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield961", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield961").
+!inspect_nuclear_plant961 : true <- !inspect_nuclear_plant9611. 
+!inspect_nuclear_plant9611 : true & .intend(inspect_nuclear_plant961, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield961_id1729_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield961", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield961", "G(add_belief(perc_rad961(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield961", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield961").
-!inspect_nuclear_plant961 : .intend(inspect_nuclear_plant961, I) & violated(I, "shield961", Cmds) & (count(I, "shield961", Count) | (not(count(I, "shield961", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant961.
-!inspect_nuclear_plant961 : .intend(inspect_nuclear_plant961, I) & (count(I, "shield961", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield961"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant962 : true <- !inspect_nuclear_plant9621. 
+!inspect_nuclear_plant9621 : fast & .intend(inspect_nuclear_plant962, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield962_id1730_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield962", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield962", "G(add_belief(perc_rad962(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield962", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield962").
+!inspect_nuclear_plant962 : true <- !inspect_nuclear_plant9621. 
+!inspect_nuclear_plant9621 : true & .intend(inspect_nuclear_plant962, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield962_id1731_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield962", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield962", "G(add_belief(perc_rad962(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield962", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield962").
-!inspect_nuclear_plant962 : .intend(inspect_nuclear_plant962, I) & violated(I, "shield962", Cmds) & (count(I, "shield962", Count) | (not(count(I, "shield962", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant962.
-!inspect_nuclear_plant962 : .intend(inspect_nuclear_plant962, I) & (count(I, "shield962", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield962"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant963 : true <- !inspect_nuclear_plant9631. 
+!inspect_nuclear_plant9631 : fast & .intend(inspect_nuclear_plant963, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield963_id1732_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield963", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield963", "G(add_belief(perc_rad963(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield963", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield963").
+!inspect_nuclear_plant963 : true <- !inspect_nuclear_plant9631. 
+!inspect_nuclear_plant9631 : true & .intend(inspect_nuclear_plant963, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield963_id1733_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield963", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield963", "G(add_belief(perc_rad963(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield963", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield963").
-!inspect_nuclear_plant963 : .intend(inspect_nuclear_plant963, I) & violated(I, "shield963", Cmds) & (count(I, "shield963", Count) | (not(count(I, "shield963", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant963.
-!inspect_nuclear_plant963 : .intend(inspect_nuclear_plant963, I) & (count(I, "shield963", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield963"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant964 : true <- !inspect_nuclear_plant9641. 
+!inspect_nuclear_plant9641 : fast & .intend(inspect_nuclear_plant964, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield964_id1734_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield964", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield964", "G(add_belief(perc_rad964(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield964", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield964").
+!inspect_nuclear_plant964 : true <- !inspect_nuclear_plant9641. 
+!inspect_nuclear_plant9641 : true & .intend(inspect_nuclear_plant964, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield964_id1735_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield964", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield964", "G(add_belief(perc_rad964(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield964", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield964").
-!inspect_nuclear_plant964 : .intend(inspect_nuclear_plant964, I) & violated(I, "shield964", Cmds) & (count(I, "shield964", Count) | (not(count(I, "shield964", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant964.
-!inspect_nuclear_plant964 : .intend(inspect_nuclear_plant964, I) & (count(I, "shield964", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield964"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant965 : true <- !inspect_nuclear_plant9651. 
+!inspect_nuclear_plant9651 : fast & .intend(inspect_nuclear_plant965, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield965_id1736_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield965", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield965", "G(add_belief(perc_rad965(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield965", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield965").
+!inspect_nuclear_plant965 : true <- !inspect_nuclear_plant9651. 
+!inspect_nuclear_plant9651 : true & .intend(inspect_nuclear_plant965, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield965_id1737_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield965", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield965", "G(add_belief(perc_rad965(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield965", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield965").
-!inspect_nuclear_plant965 : .intend(inspect_nuclear_plant965, I) & violated(I, "shield965", Cmds) & (count(I, "shield965", Count) | (not(count(I, "shield965", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant965.
-!inspect_nuclear_plant965 : .intend(inspect_nuclear_plant965, I) & (count(I, "shield965", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield965"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant966 : true <- !inspect_nuclear_plant9661. 
+!inspect_nuclear_plant9661 : fast & .intend(inspect_nuclear_plant966, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield966_id1738_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield966", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield966", "G(add_belief(perc_rad966(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield966", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield966").
+!inspect_nuclear_plant966 : true <- !inspect_nuclear_plant9661. 
+!inspect_nuclear_plant9661 : true & .intend(inspect_nuclear_plant966, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield966_id1739_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield966", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield966", "G(add_belief(perc_rad966(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield966", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield966").
-!inspect_nuclear_plant966 : .intend(inspect_nuclear_plant966, I) & violated(I, "shield966", Cmds) & (count(I, "shield966", Count) | (not(count(I, "shield966", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant966.
-!inspect_nuclear_plant966 : .intend(inspect_nuclear_plant966, I) & (count(I, "shield966", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield966"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant967 : true <- !inspect_nuclear_plant9671. 
+!inspect_nuclear_plant9671 : fast & .intend(inspect_nuclear_plant967, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield967_id1740_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield967", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield967", "G(add_belief(perc_rad967(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield967", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield967").
+!inspect_nuclear_plant967 : true <- !inspect_nuclear_plant9671. 
+!inspect_nuclear_plant9671 : true & .intend(inspect_nuclear_plant967, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield967_id1741_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield967", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield967", "G(add_belief(perc_rad967(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield967", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield967").
-!inspect_nuclear_plant967 : .intend(inspect_nuclear_plant967, I) & violated(I, "shield967", Cmds) & (count(I, "shield967", Count) | (not(count(I, "shield967", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant967.
-!inspect_nuclear_plant967 : .intend(inspect_nuclear_plant967, I) & (count(I, "shield967", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield967"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant968 : true <- !inspect_nuclear_plant9681. 
+!inspect_nuclear_plant9681 : fast & .intend(inspect_nuclear_plant968, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield968_id1742_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield968", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield968", "G(add_belief(perc_rad968(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield968", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield968").
+!inspect_nuclear_plant968 : true <- !inspect_nuclear_plant9681. 
+!inspect_nuclear_plant9681 : true & .intend(inspect_nuclear_plant968, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield968_id1743_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield968", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield968", "G(add_belief(perc_rad968(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield968", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield968").
-!inspect_nuclear_plant968 : .intend(inspect_nuclear_plant968, I) & violated(I, "shield968", Cmds) & (count(I, "shield968", Count) | (not(count(I, "shield968", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant968.
-!inspect_nuclear_plant968 : .intend(inspect_nuclear_plant968, I) & (count(I, "shield968", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield968"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant969 : true <- !inspect_nuclear_plant9691. 
+!inspect_nuclear_plant9691 : fast & .intend(inspect_nuclear_plant969, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield969_id1744_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield969", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield969", "G(add_belief(perc_rad969(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield969", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield969").
+!inspect_nuclear_plant969 : true <- !inspect_nuclear_plant9691. 
+!inspect_nuclear_plant9691 : true & .intend(inspect_nuclear_plant969, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield969_id1745_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield969", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield969", "G(add_belief(perc_rad969(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield969", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield969").
-!inspect_nuclear_plant969 : .intend(inspect_nuclear_plant969, I) & violated(I, "shield969", Cmds) & (count(I, "shield969", Count) | (not(count(I, "shield969", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant969.
-!inspect_nuclear_plant969 : .intend(inspect_nuclear_plant969, I) & (count(I, "shield969", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield969"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant970 : true <- !inspect_nuclear_plant9701. 
+!inspect_nuclear_plant9701 : fast & .intend(inspect_nuclear_plant970, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield970_id1746_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield970", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield970", "G(add_belief(perc_rad970(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield970", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield970").
+!inspect_nuclear_plant970 : true <- !inspect_nuclear_plant9701. 
+!inspect_nuclear_plant9701 : true & .intend(inspect_nuclear_plant970, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield970_id1747_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield970", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield970", "G(add_belief(perc_rad970(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield970", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield970").
-!inspect_nuclear_plant970 : .intend(inspect_nuclear_plant970, I) & violated(I, "shield970", Cmds) & (count(I, "shield970", Count) | (not(count(I, "shield970", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant970.
-!inspect_nuclear_plant970 : .intend(inspect_nuclear_plant970, I) & (count(I, "shield970", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield970"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant971 : true <- !inspect_nuclear_plant9711. 
+!inspect_nuclear_plant9711 : fast & .intend(inspect_nuclear_plant971, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield971_id1748_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield971", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield971", "G(add_belief(perc_rad971(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield971", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield971").
+!inspect_nuclear_plant971 : true <- !inspect_nuclear_plant9711. 
+!inspect_nuclear_plant9711 : true & .intend(inspect_nuclear_plant971, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield971_id1749_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield971", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield971", "G(add_belief(perc_rad971(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield971", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield971").
-!inspect_nuclear_plant971 : .intend(inspect_nuclear_plant971, I) & violated(I, "shield971", Cmds) & (count(I, "shield971", Count) | (not(count(I, "shield971", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant971.
-!inspect_nuclear_plant971 : .intend(inspect_nuclear_plant971, I) & (count(I, "shield971", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield971"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant972 : true <- !inspect_nuclear_plant9721. 
+!inspect_nuclear_plant9721 : fast & .intend(inspect_nuclear_plant972, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield972_id1750_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield972", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield972", "G(add_belief(perc_rad972(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield972", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield972").
+!inspect_nuclear_plant972 : true <- !inspect_nuclear_plant9721. 
+!inspect_nuclear_plant9721 : true & .intend(inspect_nuclear_plant972, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield972_id1751_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield972", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield972", "G(add_belief(perc_rad972(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield972", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield972").
-!inspect_nuclear_plant972 : .intend(inspect_nuclear_plant972, I) & violated(I, "shield972", Cmds) & (count(I, "shield972", Count) | (not(count(I, "shield972", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant972.
-!inspect_nuclear_plant972 : .intend(inspect_nuclear_plant972, I) & (count(I, "shield972", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield972"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant973 : true <- !inspect_nuclear_plant9731. 
+!inspect_nuclear_plant9731 : fast & .intend(inspect_nuclear_plant973, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield973_id1752_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield973", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield973", "G(add_belief(perc_rad973(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield973", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield973").
+!inspect_nuclear_plant973 : true <- !inspect_nuclear_plant9731. 
+!inspect_nuclear_plant9731 : true & .intend(inspect_nuclear_plant973, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield973_id1753_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield973", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield973", "G(add_belief(perc_rad973(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield973", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield973").
-!inspect_nuclear_plant973 : .intend(inspect_nuclear_plant973, I) & violated(I, "shield973", Cmds) & (count(I, "shield973", Count) | (not(count(I, "shield973", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant973.
-!inspect_nuclear_plant973 : .intend(inspect_nuclear_plant973, I) & (count(I, "shield973", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield973"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant974 : true <- !inspect_nuclear_plant9741. 
+!inspect_nuclear_plant9741 : fast & .intend(inspect_nuclear_plant974, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield974_id1754_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield974", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield974", "G(add_belief(perc_rad974(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield974", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield974").
+!inspect_nuclear_plant974 : true <- !inspect_nuclear_plant9741. 
+!inspect_nuclear_plant9741 : true & .intend(inspect_nuclear_plant974, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield974_id1755_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield974", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield974", "G(add_belief(perc_rad974(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield974", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield974").
-!inspect_nuclear_plant974 : .intend(inspect_nuclear_plant974, I) & violated(I, "shield974", Cmds) & (count(I, "shield974", Count) | (not(count(I, "shield974", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant974.
-!inspect_nuclear_plant974 : .intend(inspect_nuclear_plant974, I) & (count(I, "shield974", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield974"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant975 : true <- !inspect_nuclear_plant9751. 
+!inspect_nuclear_plant9751 : fast & .intend(inspect_nuclear_plant975, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield975_id1756_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield975", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield975", "G(add_belief(perc_rad975(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield975", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield975").
+!inspect_nuclear_plant975 : true <- !inspect_nuclear_plant9751. 
+!inspect_nuclear_plant9751 : true & .intend(inspect_nuclear_plant975, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield975_id1757_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield975", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield975", "G(add_belief(perc_rad975(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield975", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield975").
-!inspect_nuclear_plant975 : .intend(inspect_nuclear_plant975, I) & violated(I, "shield975", Cmds) & (count(I, "shield975", Count) | (not(count(I, "shield975", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant975.
-!inspect_nuclear_plant975 : .intend(inspect_nuclear_plant975, I) & (count(I, "shield975", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield975"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant976 : true <- !inspect_nuclear_plant9761. 
+!inspect_nuclear_plant9761 : fast & .intend(inspect_nuclear_plant976, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield976_id1758_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield976", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield976", "G(add_belief(perc_rad976(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield976", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield976").
+!inspect_nuclear_plant976 : true <- !inspect_nuclear_plant9761. 
+!inspect_nuclear_plant9761 : true & .intend(inspect_nuclear_plant976, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield976_id1759_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield976", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield976", "G(add_belief(perc_rad976(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield976", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield976").
-!inspect_nuclear_plant976 : .intend(inspect_nuclear_plant976, I) & violated(I, "shield976", Cmds) & (count(I, "shield976", Count) | (not(count(I, "shield976", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant976.
-!inspect_nuclear_plant976 : .intend(inspect_nuclear_plant976, I) & (count(I, "shield976", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield976"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant977 : true <- !inspect_nuclear_plant9771. 
+!inspect_nuclear_plant9771 : fast & .intend(inspect_nuclear_plant977, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield977_id1760_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield977", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield977", "G(add_belief(perc_rad977(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield977", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield977").
+!inspect_nuclear_plant977 : true <- !inspect_nuclear_plant9771. 
+!inspect_nuclear_plant9771 : true & .intend(inspect_nuclear_plant977, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield977_id1761_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield977", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield977", "G(add_belief(perc_rad977(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield977", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield977").
-!inspect_nuclear_plant977 : .intend(inspect_nuclear_plant977, I) & violated(I, "shield977", Cmds) & (count(I, "shield977", Count) | (not(count(I, "shield977", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant977.
-!inspect_nuclear_plant977 : .intend(inspect_nuclear_plant977, I) & (count(I, "shield977", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield977"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant978 : true <- !inspect_nuclear_plant9781. 
+!inspect_nuclear_plant9781 : fast & .intend(inspect_nuclear_plant978, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield978_id1762_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield978", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield978", "G(add_belief(perc_rad978(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield978", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield978").
+!inspect_nuclear_plant978 : true <- !inspect_nuclear_plant9781. 
+!inspect_nuclear_plant9781 : true & .intend(inspect_nuclear_plant978, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield978_id1763_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield978", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield978", "G(add_belief(perc_rad978(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield978", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield978").
-!inspect_nuclear_plant978 : .intend(inspect_nuclear_plant978, I) & violated(I, "shield978", Cmds) & (count(I, "shield978", Count) | (not(count(I, "shield978", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant978.
-!inspect_nuclear_plant978 : .intend(inspect_nuclear_plant978, I) & (count(I, "shield978", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield978"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant979 : true <- !inspect_nuclear_plant9791. 
+!inspect_nuclear_plant9791 : fast & .intend(inspect_nuclear_plant979, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield979_id1764_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield979", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield979", "G(add_belief(perc_rad979(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield979", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield979").
+!inspect_nuclear_plant979 : true <- !inspect_nuclear_plant9791. 
+!inspect_nuclear_plant9791 : true & .intend(inspect_nuclear_plant979, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield979_id1765_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield979", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield979", "G(add_belief(perc_rad979(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield979", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield979").
-!inspect_nuclear_plant979 : .intend(inspect_nuclear_plant979, I) & violated(I, "shield979", Cmds) & (count(I, "shield979", Count) | (not(count(I, "shield979", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant979.
-!inspect_nuclear_plant979 : .intend(inspect_nuclear_plant979, I) & (count(I, "shield979", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield979"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant980 : true <- !inspect_nuclear_plant9801. 
+!inspect_nuclear_plant9801 : fast & .intend(inspect_nuclear_plant980, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield980_id1766_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield980", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield980", "G(add_belief(perc_rad980(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield980", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield980").
+!inspect_nuclear_plant980 : true <- !inspect_nuclear_plant9801. 
+!inspect_nuclear_plant9801 : true & .intend(inspect_nuclear_plant980, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield980_id1767_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield980", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield980", "G(add_belief(perc_rad980(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield980", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield980").
-!inspect_nuclear_plant980 : .intend(inspect_nuclear_plant980, I) & violated(I, "shield980", Cmds) & (count(I, "shield980", Count) | (not(count(I, "shield980", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant980.
-!inspect_nuclear_plant980 : .intend(inspect_nuclear_plant980, I) & (count(I, "shield980", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield980"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant981 : true <- !inspect_nuclear_plant9811. 
+!inspect_nuclear_plant9811 : fast & .intend(inspect_nuclear_plant981, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield981_id1768_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield981", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield981", "G(add_belief(perc_rad981(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield981", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield981").
+!inspect_nuclear_plant981 : true <- !inspect_nuclear_plant9811. 
+!inspect_nuclear_plant9811 : true & .intend(inspect_nuclear_plant981, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield981_id1769_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield981", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield981", "G(add_belief(perc_rad981(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield981", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield981").
-!inspect_nuclear_plant981 : .intend(inspect_nuclear_plant981, I) & violated(I, "shield981", Cmds) & (count(I, "shield981", Count) | (not(count(I, "shield981", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant981.
-!inspect_nuclear_plant981 : .intend(inspect_nuclear_plant981, I) & (count(I, "shield981", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield981"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant982 : true <- !inspect_nuclear_plant9821. 
+!inspect_nuclear_plant9821 : fast & .intend(inspect_nuclear_plant982, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield982_id1770_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield982", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield982", "G(add_belief(perc_rad982(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield982", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield982").
+!inspect_nuclear_plant982 : true <- !inspect_nuclear_plant9821. 
+!inspect_nuclear_plant9821 : true & .intend(inspect_nuclear_plant982, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield982_id1771_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield982", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield982", "G(add_belief(perc_rad982(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield982", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield982").
-!inspect_nuclear_plant982 : .intend(inspect_nuclear_plant982, I) & violated(I, "shield982", Cmds) & (count(I, "shield982", Count) | (not(count(I, "shield982", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant982.
-!inspect_nuclear_plant982 : .intend(inspect_nuclear_plant982, I) & (count(I, "shield982", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield982"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant983 : true <- !inspect_nuclear_plant9831. 
+!inspect_nuclear_plant9831 : fast & .intend(inspect_nuclear_plant983, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield983_id1772_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield983", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield983", "G(add_belief(perc_rad983(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield983", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield983").
+!inspect_nuclear_plant983 : true <- !inspect_nuclear_plant9831. 
+!inspect_nuclear_plant9831 : true & .intend(inspect_nuclear_plant983, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield983_id1773_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield983", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield983", "G(add_belief(perc_rad983(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield983", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield983").
-!inspect_nuclear_plant983 : .intend(inspect_nuclear_plant983, I) & violated(I, "shield983", Cmds) & (count(I, "shield983", Count) | (not(count(I, "shield983", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant983.
-!inspect_nuclear_plant983 : .intend(inspect_nuclear_plant983, I) & (count(I, "shield983", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield983"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant984 : true <- !inspect_nuclear_plant9841. 
+!inspect_nuclear_plant9841 : fast & .intend(inspect_nuclear_plant984, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield984_id1774_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield984", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield984", "G(add_belief(perc_rad984(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield984", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield984").
+!inspect_nuclear_plant984 : true <- !inspect_nuclear_plant9841. 
+!inspect_nuclear_plant9841 : true & .intend(inspect_nuclear_plant984, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield984_id1775_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield984", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield984", "G(add_belief(perc_rad984(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield984", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield984").
-!inspect_nuclear_plant984 : .intend(inspect_nuclear_plant984, I) & violated(I, "shield984", Cmds) & (count(I, "shield984", Count) | (not(count(I, "shield984", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant984.
-!inspect_nuclear_plant984 : .intend(inspect_nuclear_plant984, I) & (count(I, "shield984", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield984"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant985 : true <- !inspect_nuclear_plant9851. 
+!inspect_nuclear_plant9851 : fast & .intend(inspect_nuclear_plant985, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield985_id1776_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield985", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield985", "G(add_belief(perc_rad985(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield985", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield985").
+!inspect_nuclear_plant985 : true <- !inspect_nuclear_plant9851. 
+!inspect_nuclear_plant9851 : true & .intend(inspect_nuclear_plant985, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield985_id1777_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield985", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield985", "G(add_belief(perc_rad985(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield985", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield985").
-!inspect_nuclear_plant985 : .intend(inspect_nuclear_plant985, I) & violated(I, "shield985", Cmds) & (count(I, "shield985", Count) | (not(count(I, "shield985", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant985.
-!inspect_nuclear_plant985 : .intend(inspect_nuclear_plant985, I) & (count(I, "shield985", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield985"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant986 : true <- !inspect_nuclear_plant9861. 
+!inspect_nuclear_plant9861 : fast & .intend(inspect_nuclear_plant986, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield986_id1778_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield986", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield986", "G(add_belief(perc_rad986(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield986", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield986").
+!inspect_nuclear_plant986 : true <- !inspect_nuclear_plant9861. 
+!inspect_nuclear_plant9861 : true & .intend(inspect_nuclear_plant986, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield986_id1779_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield986", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield986", "G(add_belief(perc_rad986(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield986", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield986").
-!inspect_nuclear_plant986 : .intend(inspect_nuclear_plant986, I) & violated(I, "shield986", Cmds) & (count(I, "shield986", Count) | (not(count(I, "shield986", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant986.
-!inspect_nuclear_plant986 : .intend(inspect_nuclear_plant986, I) & (count(I, "shield986", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield986"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant987 : true <- !inspect_nuclear_plant9871. 
+!inspect_nuclear_plant9871 : fast & .intend(inspect_nuclear_plant987, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield987_id1780_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield987", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield987", "G(add_belief(perc_rad987(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield987", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield987").
+!inspect_nuclear_plant987 : true <- !inspect_nuclear_plant9871. 
+!inspect_nuclear_plant9871 : true & .intend(inspect_nuclear_plant987, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield987_id1781_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield987", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield987", "G(add_belief(perc_rad987(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield987", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield987").
-!inspect_nuclear_plant987 : .intend(inspect_nuclear_plant987, I) & violated(I, "shield987", Cmds) & (count(I, "shield987", Count) | (not(count(I, "shield987", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant987.
-!inspect_nuclear_plant987 : .intend(inspect_nuclear_plant987, I) & (count(I, "shield987", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield987"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant988 : true <- !inspect_nuclear_plant9881. 
+!inspect_nuclear_plant9881 : fast & .intend(inspect_nuclear_plant988, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield988_id1782_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield988", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield988", "G(add_belief(perc_rad988(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield988", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield988").
+!inspect_nuclear_plant988 : true <- !inspect_nuclear_plant9881. 
+!inspect_nuclear_plant9881 : true & .intend(inspect_nuclear_plant988, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield988_id1783_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield988", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield988", "G(add_belief(perc_rad988(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield988", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield988").
-!inspect_nuclear_plant988 : .intend(inspect_nuclear_plant988, I) & violated(I, "shield988", Cmds) & (count(I, "shield988", Count) | (not(count(I, "shield988", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant988.
-!inspect_nuclear_plant988 : .intend(inspect_nuclear_plant988, I) & (count(I, "shield988", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield988"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant989 : true <- !inspect_nuclear_plant9891. 
+!inspect_nuclear_plant9891 : fast & .intend(inspect_nuclear_plant989, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield989_id1784_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield989", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield989", "G(add_belief(perc_rad989(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield989", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield989").
+!inspect_nuclear_plant989 : true <- !inspect_nuclear_plant9891. 
+!inspect_nuclear_plant9891 : true & .intend(inspect_nuclear_plant989, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield989_id1785_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield989", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield989", "G(add_belief(perc_rad989(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield989", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield989").
-!inspect_nuclear_plant989 : .intend(inspect_nuclear_plant989, I) & violated(I, "shield989", Cmds) & (count(I, "shield989", Count) | (not(count(I, "shield989", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant989.
-!inspect_nuclear_plant989 : .intend(inspect_nuclear_plant989, I) & (count(I, "shield989", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield989"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant990 : true <- !inspect_nuclear_plant9901. 
+!inspect_nuclear_plant9901 : fast & .intend(inspect_nuclear_plant990, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield990_id1786_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield990", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield990", "G(add_belief(perc_rad990(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield990", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield990").
+!inspect_nuclear_plant990 : true <- !inspect_nuclear_plant9901. 
+!inspect_nuclear_plant9901 : true & .intend(inspect_nuclear_plant990, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield990_id1787_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield990", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield990", "G(add_belief(perc_rad990(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield990", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield990").
-!inspect_nuclear_plant990 : .intend(inspect_nuclear_plant990, I) & violated(I, "shield990", Cmds) & (count(I, "shield990", Count) | (not(count(I, "shield990", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant990.
-!inspect_nuclear_plant990 : .intend(inspect_nuclear_plant990, I) & (count(I, "shield990", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield990"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant991 : true <- !inspect_nuclear_plant9911. 
+!inspect_nuclear_plant9911 : fast & .intend(inspect_nuclear_plant991, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield991_id1788_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield991", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield991", "G(add_belief(perc_rad991(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield991", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield991").
+!inspect_nuclear_plant991 : true <- !inspect_nuclear_plant9911. 
+!inspect_nuclear_plant9911 : true & .intend(inspect_nuclear_plant991, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield991_id1789_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield991", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield991", "G(add_belief(perc_rad991(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield991", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield991").
-!inspect_nuclear_plant991 : .intend(inspect_nuclear_plant991, I) & violated(I, "shield991", Cmds) & (count(I, "shield991", Count) | (not(count(I, "shield991", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant991.
-!inspect_nuclear_plant991 : .intend(inspect_nuclear_plant991, I) & (count(I, "shield991", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield991"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant992 : true <- !inspect_nuclear_plant9921. 
+!inspect_nuclear_plant9921 : fast & .intend(inspect_nuclear_plant992, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield992_id1790_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield992", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield992", "G(add_belief(perc_rad992(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield992", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield992").
+!inspect_nuclear_plant992 : true <- !inspect_nuclear_plant9921. 
+!inspect_nuclear_plant9921 : true & .intend(inspect_nuclear_plant992, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield992_id1791_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield992", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield992", "G(add_belief(perc_rad992(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield992", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield992").
-!inspect_nuclear_plant992 : .intend(inspect_nuclear_plant992, I) & violated(I, "shield992", Cmds) & (count(I, "shield992", Count) | (not(count(I, "shield992", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant992.
-!inspect_nuclear_plant992 : .intend(inspect_nuclear_plant992, I) & (count(I, "shield992", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield992"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant993 : true <- !inspect_nuclear_plant9931. 
+!inspect_nuclear_plant9931 : fast & .intend(inspect_nuclear_plant993, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield993_id1792_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield993", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield993", "G(add_belief(perc_rad993(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield993", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield993").
+!inspect_nuclear_plant993 : true <- !inspect_nuclear_plant9931. 
+!inspect_nuclear_plant9931 : true & .intend(inspect_nuclear_plant993, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield993_id1793_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield993", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield993", "G(add_belief(perc_rad993(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield993", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield993").
-!inspect_nuclear_plant993 : .intend(inspect_nuclear_plant993, I) & violated(I, "shield993", Cmds) & (count(I, "shield993", Count) | (not(count(I, "shield993", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant993.
-!inspect_nuclear_plant993 : .intend(inspect_nuclear_plant993, I) & (count(I, "shield993", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield993"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant994 : true <- !inspect_nuclear_plant9941. 
+!inspect_nuclear_plant9941 : fast & .intend(inspect_nuclear_plant994, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield994_id1794_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield994", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield994", "G(add_belief(perc_rad994(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield994", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield994").
+!inspect_nuclear_plant994 : true <- !inspect_nuclear_plant9941. 
+!inspect_nuclear_plant9941 : true & .intend(inspect_nuclear_plant994, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield994_id1795_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield994", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield994", "G(add_belief(perc_rad994(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield994", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield994").
-!inspect_nuclear_plant994 : .intend(inspect_nuclear_plant994, I) & violated(I, "shield994", Cmds) & (count(I, "shield994", Count) | (not(count(I, "shield994", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant994.
-!inspect_nuclear_plant994 : .intend(inspect_nuclear_plant994, I) & (count(I, "shield994", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield994"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant995 : true <- !inspect_nuclear_plant9951. 
+!inspect_nuclear_plant9951 : fast & .intend(inspect_nuclear_plant995, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield995_id1796_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield995", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield995", "G(add_belief(perc_rad995(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield995", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield995").
+!inspect_nuclear_plant995 : true <- !inspect_nuclear_plant9951. 
+!inspect_nuclear_plant9951 : true & .intend(inspect_nuclear_plant995, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield995_id1797_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield995", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield995", "G(add_belief(perc_rad995(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield995", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield995").
-!inspect_nuclear_plant995 : .intend(inspect_nuclear_plant995, I) & violated(I, "shield995", Cmds) & (count(I, "shield995", Count) | (not(count(I, "shield995", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant995.
-!inspect_nuclear_plant995 : .intend(inspect_nuclear_plant995, I) & (count(I, "shield995", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield995"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant996 : true <- !inspect_nuclear_plant9961. 
+!inspect_nuclear_plant9961 : fast & .intend(inspect_nuclear_plant996, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield996_id1798_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield996", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield996", "G(add_belief(perc_rad996(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield996", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield996").
+!inspect_nuclear_plant996 : true <- !inspect_nuclear_plant9961. 
+!inspect_nuclear_plant9961 : true & .intend(inspect_nuclear_plant996, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield996_id1799_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield996", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield996", "G(add_belief(perc_rad996(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield996", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield996").
-!inspect_nuclear_plant996 : .intend(inspect_nuclear_plant996, I) & violated(I, "shield996", Cmds) & (count(I, "shield996", Count) | (not(count(I, "shield996", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant996.
-!inspect_nuclear_plant996 : .intend(inspect_nuclear_plant996, I) & (count(I, "shield996", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield996"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant997 : true <- !inspect_nuclear_plant9971. 
+!inspect_nuclear_plant9971 : fast & .intend(inspect_nuclear_plant997, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield997_id1800_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield997", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield997", "G(add_belief(perc_rad997(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield997", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield997").
+!inspect_nuclear_plant997 : true <- !inspect_nuclear_plant9971. 
+!inspect_nuclear_plant9971 : true & .intend(inspect_nuclear_plant997, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield997_id1801_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield997", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield997", "G(add_belief(perc_rad997(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield997", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield997").
-!inspect_nuclear_plant997 : .intend(inspect_nuclear_plant997, I) & violated(I, "shield997", Cmds) & (count(I, "shield997", Count) | (not(count(I, "shield997", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant997.
-!inspect_nuclear_plant997 : .intend(inspect_nuclear_plant997, I) & (count(I, "shield997", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield997"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant998 : true <- !inspect_nuclear_plant9981. 
+!inspect_nuclear_plant9981 : fast & .intend(inspect_nuclear_plant998, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield998_id1802_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield998", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield998", "G(add_belief(perc_rad998(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield998", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield998").
+!inspect_nuclear_plant998 : true <- !inspect_nuclear_plant9981. 
+!inspect_nuclear_plant9981 : true & .intend(inspect_nuclear_plant998, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield998_id1803_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield998", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield998", "G(add_belief(perc_rad998(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield998", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield998").
-!inspect_nuclear_plant998 : .intend(inspect_nuclear_plant998, I) & violated(I, "shield998", Cmds) & (count(I, "shield998", Count) | (not(count(I, "shield998", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant998.
-!inspect_nuclear_plant998 : .intend(inspect_nuclear_plant998, I) & (count(I, "shield998", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield998"); -depth(I, D); +depth(I, D-1); .fail.



+!inspect_nuclear_plant999 : true <- !inspect_nuclear_plant9991. 
+!inspect_nuclear_plant9991 : fast & .intend(inspect_nuclear_plant999, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield999_id1804_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield999", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield999", "G(add_belief(perc_rad999(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp2, R2)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp2, R2); 
	.term2string(remove_belief(perc_rad(R2)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R2); 
	.term2string(add_belief(perc_rad(R2)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R2); 
	.term2string(action(.print("Detected level of radiation: ", R2)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R2); 
	.term2string(action(move_to(wp3, R3)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp3, R3); 
	.term2string(remove_belief(perc_rad(R3)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R3); 
	.term2string(add_belief(perc_rad(R3)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R3); 
	.term2string(action(.print("Detected level of radiation: ", R3)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R3); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield999", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield999").
+!inspect_nuclear_plant999 : true <- !inspect_nuclear_plant9991. 
+!inspect_nuclear_plant9991 : true & .intend(inspect_nuclear_plant999, I) & (ids(I, IDs) | (not(ids(I, _)) & IDs=[])) & (depth(I, Depth)|(not(depth(I, _)) & Depth=0)) & .concat("shield999_id1805_", Depth, IntIDD) & not(.member(IntIDD, IDs)) <- -depth(I, _); +depth(I, Depth+1); !push_id(I, "shield999", IntIDD); ?ids(I, CurrentlyActShields); ?events(Events); add_shield(I, "shield999", "G(add_belief(perc_rad999(low)))", Events); .term2string(goal(inspect(wp1)), Term0); update_shield(I, CurrentlyActShields, Term0); !inspect(wp1); 
	.term2string(action(move_to(wp4, R4)), Term1); update_shield(I, CurrentlyActShields, Term1); move_to(wp4, R4); 
	.term2string(remove_belief(perc_rad(R4)), Term2); update_shield(I, CurrentlyActShields, Term2); -perc_rad(R4); 
	.term2string(add_belief(perc_rad(R4)), Term3); update_shield(I, CurrentlyActShields, Term3); +perc_rad(R4); 
	.term2string(action(.print("Detected level of radiation: ", R4)), Term4); update_shield(I, CurrentlyActShields, Term4); .print("Detected level of radiation: ", R4); 
	.term2string(action(move_to(wp5, R5)), Term5); update_shield(I, CurrentlyActShields, Term5); move_to(wp5, R5); 
	.term2string(remove_belief(perc_rad(R5)), Term6); update_shield(I, CurrentlyActShields, Term6); -perc_rad(R5); 
	.term2string(add_belief(perc_rad(R5)), Term7); update_shield(I, CurrentlyActShields, Term7); +perc_rad(R5); 
	.term2string(action(.print("Detected level of radiation: ", R5)), Term8); update_shield(I, CurrentlyActShields, Term8); .print("Detected level of radiation: ", R5); 
	.term2string(goal(inspect(wp3)), Term9); update_shield(I, CurrentlyActShields, Term9); !inspect(wp3); !get_count(I, "shield999", Count, 1); !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield999").
-!inspect_nuclear_plant999 : .intend(inspect_nuclear_plant999, I) & violated(I, "shield999", Cmds) & (count(I, "shield999", Count) | (not(count(I, "shield999", Count)) & Count = 1)) <- I2 = I1-1; -head_intention(I2, _); +head_intention(I2, I); !toTerms(Cmds, TCmds); !restore(TCmds); -depth(I, D); +depth(I, D-1); !inspect_nuclear_plant999.
-!inspect_nuclear_plant999 : .intend(inspect_nuclear_plant999, I) & (count(I, "shield999", Count) | Count = 1) <- !pop_count(I, Count, ThisShieldId); remove_shield(I, "shield999"); -depth(I, D); +depth(I, D-1); .fail.



@push_id[atomic]
+!push_id(Intention, ShieldId, Id) : ids(Intention, IDs) & (count(Intention, ShieldId, C) | (not(count(Intention, ShieldId, C)) & C=0)) <- -ids(Intention, IDs); +ids(Intention, [Id|IDs]); -count(Intention, ShieldId, C); +count(Intention, ShieldId, C+1).
+!push_id(Intention, ShieldId, Id) : (count(Intention, ShieldId, C) | (not(count(Intention, ShieldId, C)) & C=0)) <- +ids(Intention, [Id]); -count(Intention, ShieldId, _); +count(Intention, ShieldId, 1).

@pop_id[atomic]
+!pop_id(Intention, Id) : ids(Intention, [Id|IDs]) <- -ids(Intention, _); +ids(Intention, IDs).

@pop_count[atomic]+!pop_count(Intention, 1, Id) : true <- !pop_id(Intention, Id).
+!pop_count(Intention, N, Id) : true <- !pop_id(Intention, _); !pop_count(Intention, N-1, Id).

+!toTerms([], []).
+!toTerms([S|Ss], [T|Ts]) <- .term2string(T, S); !toTerms(Ss, Ts).

+!restore([]) : true <- true.
+!restore([add_belief(B)|Cmds]) : true <- -B; !restore(Cmds).
+!restore([remove_belief(B)|Cmds]) : true <- +B; !restore(Cmds).
+!restore([action(A)|Cmds]) : opposite(A, OpA) <- OpA; !restore(Cmds).
+!restore([_|Cmds]) : true <- !restore(Cmds).

+!get_count(Intention, ShieldId, Count, Default) : count(Intention, ShieldId, Count).
+!get_count(Intention, ShieldId, Default, Default).

